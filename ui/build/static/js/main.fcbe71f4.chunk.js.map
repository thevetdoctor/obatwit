{"version":3,"sources":["helper.js","components/GoogleAuth.js","components/chat.jpg","components/Posts.js","components/TwitForm.js","components/CommentForm.js","components/Twits.js","App.js","service-worker.js","index.js"],"names":["baseUrl","dotenv","config","clientId","process","GoogleAuth","props","error","setError","setLoading","loading","useState","JSON","parse","localStorage","getItem","signup","apiUrl","history","useHistory","buttonText","onSuccess","res","console","log","authenticate","profileObj","email","name","imageUrl","onFailure","cookeiPolicy","style","marginTop","Logout","render","renderProps","size","onLogoutSuccess","a","google","password","setItem","axios","method","url","data","headers","catch","response","setTimeout","auth","success","user","token","push","Posts","setEmail","setPassword","setSignup","handleChange","e","target","value","useEffect","className","fontSize","type","placeholder","onChange","flexDirection","color","height","width","cursor","onClick","href","src","chat","alt","borderRadius","TwitForm","title","setTitle","text","setText","textArea","setTextArea","length","sendTwit","setSync","sync","showForm","required","rows","Cols","maxLength","CommentForm","sendComment","twitId","showCommentForm","cols","Twits","twits","setTwits","formActive","setFormActive","users","setUsers","img","apiCallHook","isAxiosError","getTwits","getUsers","count","removeItem","sort","b","Date","createdAt","getTime","map","twit","idx","Twit","commentFormActive","setCommentFormActive","id","likes","comments","likeCount","filter","like","isLiked","fromNow","username","comment","Comment","usercomments","App","exact","path","component","self","__WB_MANIFEST","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","ReactDOM","StrictMode","document","getElementById","publicUrl","URL","origin","addEventListener","ready"],"mappings":"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","file":"static/js/main.fcbe71f4.chunk.js","sourcesContent":["export const baseUrl = 'https://oba-twit.herokuapp.com';\r\n// export const baseUrl = 'http://localhost:4000';","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\nimport GoogleButton from 'react-google-button'\r\nimport { authenticate } from './Posts';\r\nimport { baseUrl } from '../helper';\r\nimport dotenv from \"dotenv\";\r\nimport { FiLogOut } from 'react-icons/fi';\r\n\r\ndotenv.config();\r\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\n// console.log('id', clientId);\r\n\r\nexport default function GoogleAuth(props) {\r\n    const { error, setError, loading, setLoading } = props;\r\n    \r\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')));\r\n    const apiUrl = `${baseUrl}/auth/${signup ? 'signup' : 'login'}`; \r\n    const history = useHistory(); \r\n\r\n    const onSuccess = (res) => {\r\n        console.log('login suceeded');\r\n        authenticate(true, res.profileObj.email, null, apiUrl, error, setError, setLoading, history, res.profileObj.name, res.profileObj.imageUrl)\r\n    }\r\n    const onFailure = (res) => {\r\n        console.log('login failed', res);\r\n    }\r\n    return (\r\n        <div>\r\n            <GoogleLogin \r\n                clientId={clientId}\r\n                buttonText={signup ? 'Signup with Google' : 'Login with Google'}\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                // isSignedIn={true}\r\n                cookeiPolicy={'single_host_origin'}\r\n                style={{marginTop: '160px'}}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Logout = () => {\r\n    \r\n    const onSuccess = (res) => {\r\n        console.log(res, 'Logout suceeded');\r\n    }\r\n    return(\r\n    <div>\r\n              <GoogleLogout \r\n                clientId={clientId}\r\n                render={renderProps => (\r\n                    <span><FiLogOut size={25}/></span>\r\n                )}\r\n                buttonText='Signout' \r\n                onLogoutSuccess={onSuccess}\r\n                style={{marginTop: '160px'}}\r\n            />\r\n    </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/chat.7e8098f6.jpg\";","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport GoogleAuth from './GoogleAuth';\r\nimport { baseUrl } from '../helper';\r\n// import LinkedinAuth from './LinkedinAuth';\r\nimport dotenv from \"dotenv\";\r\nimport chat from './chat.jpg';\r\nimport { CgCopyright } from 'react-icons/cg';\r\n\r\ndotenv.config();\r\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\n// console.log('id', clientId, process.env);\r\n\r\nexport const authenticate = async(google = false, email, password = null, apiUrl, error, setError, setLoading, history, name, imageUrl) => {\r\n    localStorage.setItem('img', imageUrl);\r\n    setLoading(true);\r\n    let res;\r\n    if(!google) {\r\n        res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}`,\r\n            data: {email, password},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .catch(error => {\r\n            if(error.response) {\r\n                setError(error.response?.data?.error);\r\n                setTimeout(() => {\r\n                    setError('');\r\n                }, 1000);\r\n            } else {\r\n                setError('Please check your network');\r\n                setTimeout(() => {\r\n                    setError('');\r\n                }, 1000);\r\n            }\r\n        });\r\n    } else {\r\n        res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}`,\r\n            data: {email, password: 'passs', auth: 'google', name, imageUrl},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .catch(error => {\r\n            setError(error.response.data.error);\r\n            setTimeout(() => {\r\n                setError('');\r\n            }, 1000);\r\n        });\r\n\r\n    }\r\n        if(res && res.data.success) {\r\n            localStorage.setItem('email', email);\r\n            localStorage.setItem('img', res.data.data.user.imageUrl);\r\n            localStorage.setItem('token', res.data.data.token);\r\n            setLoading(false);\r\n            history.push('/twits');\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n}\r\n\r\nexport default function Posts(props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')));\r\n    const token = localStorage.getItem('token');\r\n    const history = useHistory();\r\n  \r\nconst apiUrl = `${baseUrl}/auth/${signup ? 'signup' : 'login'}`; \r\n\r\nconst handleChange = (e) => {\r\n    if(e.target.name === 'email') {\r\n        setEmail(e.target.value);\r\n    } else {\r\n        setPassword(e.target.value);\r\n    }\r\n}\r\n\r\nconst handleSignupMode = () => {\r\n    if(!signup) {\r\n        setSignup(true);\r\n        localStorage.setItem('signup', true);\r\n    } else {\r\n        setSignup(false);\r\n        localStorage.setItem('signup', false);\r\n    }\r\n}\r\n\r\nuseEffect(() => {\r\n    if(!token) {\r\n        history.push('/');\r\n    }\r\n    return () => {\r\n    }\r\n}, []);\r\n\r\n    return (\r\n        <div className=' text-center align-items-center'>\r\n            <p className='italic text-white-700 font-medium text-center mb-5'>\r\n                <span className='text-purple-900 font-bold text-xl'>\r\n                    Twitee<br/>\r\n                </span> .... Feel free, express yourself, network ....\r\n            </p>\r\n            <h1 style={{fontSize: 20}} className='font-bold text-md mb-7'>\r\n                {signup ?  'Signup' : 'Login'}\r\n            </h1>\r\n            <input \r\n                type='text'\r\n                name='email'\r\n                value={email} \r\n                placeholder='email'\r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5'\r\n                /><br/>\r\n            <input \r\n                type='password'\r\n                name='password'\r\n                value={password} \r\n                placeholder='password' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5'\r\n            /><br/>\r\n            <div style={{flexDirection: 'column'}} className='flex'>\r\n                {error && <span className='mb-2 text-red-600'>{error}</span>}\r\n                <div>\r\n                    {!loading ?\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={() => authenticate(false, email, password, apiUrl, error, setError, setLoading, history)}\r\n                        className='hover:bg-green-900 bg-green-400 font-medium p-2 rounded w-6 h-3 text-white'\r\n                    >    \r\n                        {signup ? 'Signup' : 'Login' }\r\n                    </span>\r\n                    :\r\n                    <span className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n                <span className='text-xs mt-4 mb-4'>\r\n                {signup ? 'Already signed up ?' : 'Not registered ?' }\r\n                     \r\n                <a \r\n                    href='/' \r\n                    className='focus:text-md underline'\r\n                    onClick={handleSignupMode}\r\n                > \r\n                    {signup ? ' Login here' : ' Signup here!' }\r\n                </a></span>\r\n            </div>\r\n            <GoogleAuth \r\n                error={error}\r\n                setError={setError}\r\n                loading={loading}\r\n                setLoading={setLoading}\r\n            />\r\n            {/* <LinkedinAuth /> */}\r\n            <p className=\"text-white-400 bold flex text-center\"><CgCopyright /> Twitee</p>         \r\n            \r\n          <img \r\n            src={chat}\r\n            alt='CHat'\r\n            className=''\r\n            style={{borderRadius: '5', width: '100'}}\r\n          />\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport { baseUrl } from '../helper';\r\n\r\nexport default function TwitForm(props) {\r\n    const [title, setTitle] = useState('');\r\n    const [text, setText] = useState('');\r\n    const [textArea, setTextArea] = useState(160);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const token = localStorage.getItem('token'); \r\n    \r\n    const apiUrl = `${baseUrl}/twits/post`; \r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'title') {\r\n            setTitle(e.target.value);\r\n        } else {\r\n            setText(e.target.value);\r\n            setTextArea(160 - e.target.value.length)\r\n        }\r\n    }\r\n\r\n    const sendTwit = async() => {\r\n            if(!(title && text)) {\r\n                setError('Inputs required');\r\n                return;\r\n            }\r\n            setLoading(true);\r\n            const res = await axios({\r\n                method: 'POST',\r\n                url: `${apiUrl}`,\r\n                data: {title, text},\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                        console.log(error.response);\r\n                        setError(error.response.data.error);\r\n                });\r\n                // console.log(res);\r\n                if(res && res.data.success) {\r\n                    setLoading(false);\r\n                    props.setSync(!props.sync);\r\n                    props.showForm();\r\n                } else {\r\n                    setLoading(false);\r\n                    console.log('Error found'); \r\n                }\r\n    }\r\n\r\n    return (\r\n        <div className='text-center sticky top-5 rounded pb-1 bg-blue-200 mb-1'>\r\n             <h1 style={{fontSize: 20}} className='font-bold text-base mb-3'>\r\n                New twit\r\n            </h1>\r\n            <input \r\n                type='text'\r\n                name='title'\r\n                value={title} \r\n                placeholder='title'\r\n                onChange={handleChange}\r\n                className='px-3 py-1 rounded mb-2'\r\n                required\r\n                /><br/>\r\n            <input \r\n                type='textarea'\r\n                name='text'\r\n                rows=\"5\"\r\n                Cols=\"8\"\r\n                maxLength={160}\r\n                // wrap={true}\r\n                value={text} \r\n                placeholder='Drop in your twit ...' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-1 h-40 text-md text-gray-600'\r\n                required\r\n            /><br/>\r\n            {textArea}\r\n            <div style={{flexDirection: 'column'}} className='flex mb-5'>\r\n                {error && <span className='mb-2 text-red-800 text-md'>{error}</span>}\r\n                <div className='justify-items-center mt-2'>\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={() => props.showForm()}\r\n                        className='hover:bg-gray-900 bg-gray-400 font-medium p-1 rounded text-white'\r\n                    >    \r\n                        Cancel\r\n                    </span>\r\n\r\n                    {!loading ?\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={sendTwit}\r\n                        className='hover:bg-green-900 bg-green-400 font-medium p-1 rounded text-white mx-2'\r\n                    >    \r\n                        Send\r\n                    </span>\r\n                    :\r\n                    <span className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport { baseUrl } from '../helper';\r\n\r\nexport default function CommentForm(props) {\r\n    const [text, setText] = useState('');\r\n    const [textArea, setTextArea] = useState(160);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const token = localStorage.getItem('token'); \r\n    \r\n    const apiUrl = `${baseUrl}/comments`; \r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'text') {\r\n            setText(e.target.value);\r\n            setTextArea(160 - e.target.value.length)\r\n        }\r\n    }\r\n\r\n    const sendComment = async() => {\r\n        if(!props.twitId) return;\r\n        if(!text) {\r\n            setError('Inputs required');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        const res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}/${props.twitId}`,\r\n            data: {text},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .catch(error => {\r\n                    console.log(error.response);\r\n                    setError(error.response.data.error);\r\n            });\r\n            console.log(res);\r\n            if(res && res.data.success) {\r\n                setLoading(false);\r\n                props.setSync(!props.sync);\r\n                props.showCommentForm();\r\n            } else {\r\n                setLoading(false);\r\n                console.log('Error found'); \r\n            }\r\n    }\r\n\r\n    return (\r\n        <div className='text-center'>\r\n             <p style={{fontSize: 20}} className='font-bold text-base mb-3'>\r\n                New Comment\r\n            </p>\r\n            <input \r\n                type='textarea'\r\n                name='text'\r\n                rows={5}\r\n                cols={8}\r\n                maxLength={160}\r\n                value={text} \r\n                placeholder='Drop in your comment ...' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5 h-20 text-md text-gray-600'\r\n                required\r\n            /><br/>\r\n            {textArea}\r\n            <div style={{flexDirection: 'column'}} className='flex mb-5'>\r\n                {error && <span className='mb-2 text-red-800 text-xs'>{error}</span>}\r\n                <div className='justify-items-center'>\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={() => props.showCommentForm()}\r\n                        className='hover:bg-gray-900 bg-gray-400 font-medium p-1 rounded text-white'\r\n                    >    \r\n                        Cancel\r\n                    </span>\r\n\r\n                    {!loading ?\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={sendComment}\r\n                        className='hover:bg-green-900 bg-green-400 font-medium p-1 rounded text-white mx-2'\r\n                    >    \r\n                        Send\r\n                    </span>\r\n                    :\r\n                    <span className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { BsPersonFill, BsChatTextFill, BsFillChatDotsFill } from 'react-icons/bs';\r\nimport { AiTwotoneLike, AiTwotoneDelete, AiFillHome } from 'react-icons/ai';\r\nimport { IoIosPeople } from 'react-icons/io';\r\nimport TwitForm from './TwitForm';\r\nimport CommentForm from './CommentForm';\r\nimport { baseUrl } from '../helper';\r\nimport { Logout } from './GoogleAuth';\r\n\r\nexport default function Twits() {\r\n    const [error, setError] = useState('');\r\n    const [twits, setTwits] = useState([]);\r\n    const [formActive, setFormActive] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    const [users, setUsers] = useState(0);\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const img = localStorage.getItem('img') ? localStorage.getItem('img') : '';\r\n    const history = useHistory();\r\n    const token = localStorage.getItem('token');\r\n\r\n    const apiUrl = `${baseUrl}/twits`;\r\n\r\n    const showForm = () => {\r\n        setFormActive(!formActive);\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        history.push('/');\r\n    }\r\n\r\n    const apiCallHook = async(method, url) => {\r\n        await axios({\r\n            method,\r\n            url,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.isAxiosError);\r\n                }\r\n            });\r\n            setSync(!sync);\r\n    }\r\n\r\n    const getTwits = async() => {\r\n        const res = await axios({\r\n            method: 'GET',\r\n            url: `${apiUrl}`,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.isAxiosError);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                setTwits(res.data.data);\r\n            } else {\r\n                console.log('Error found'); \r\n                setError('Error found');\r\n            }\r\n    }\r\n\r\n    const getUsers = async() => {\r\n        const res = await axios({\r\n            method: 'GET',\r\n            url: `${baseUrl}/auth/users`,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.isAxiosError);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                setUsers(res.data.data.count);\r\n            } else {\r\n                console.log('Error found');\r\n                setError('Error found');\r\n            }\r\n    }\r\n\r\nuseEffect(() => {\r\n    if(!token) {\r\n        history.push('/');\r\n    }\r\n    getUsers();\r\n    return () => {\r\n        console.log('cleanup twits 1');\r\n    }\r\n}, []);\r\n\r\nuseEffect(async() => {\r\n    getTwits();\r\n\r\n    return () => {\r\n        console.log('cleanup twits 2');\r\n    }\r\n}, [sync]);\r\n    \r\n    return (\r\n        <div className='mb-5'>\r\n            {formActive && <TwitForm error={error} showForm={showForm} sync={sync} setSync={setSync}/>}\r\n            <p className='italic text-white-700 font-medium text-center'><span className='text-purple-900 font-bold text-xl'>Twitee<br/></span> .... Feel free, express yourself, network ....</p>\r\n            <div className='py-2 px-2 rounded bg-blue-300 mb-4 flex justify-between'>\r\n                {img !== 'null' ? (\r\n                    <span>\r\n                        <img src={img} alt='Profile' style={{width: '30px', height: '30px', borderRadius: '50%'}} />\r\n                    </span>) \r\n                    : <span className='text-left'><AiFillHome size={25} /></span>}\r\n                {users > 0 && <span className='text-left flex'><IoIosPeople size={25}/>{users}</span>}\r\n                <span style={{cursor: 'pointer'}} className='text-right' onClick={logout}><Logout />\r\n                </span>\r\n            </div>\r\n            <div className='w-full text-white-400 flex justify-between' onClick={showForm}>\r\n                <span></span>\r\n                <span className='font-bold mb-4 italic'>Twits</span>\r\n                <span style={{cursor: 'pointer'}} className='sticky top-4 mr-4 -ml-6'><BsFillChatDotsFill size={25} /></span>\r\n            </div>\r\n            {\r\n                twits.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()).map((twit, idx) => \r\n                    <Twit key={idx} twit={twit} email={email} apiCallHook={apiCallHook} baseUrl={baseUrl} sync={sync} setSync={setSync} showForm={showForm} formActive={formActive}/>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Twit = (props) => {\r\n    const [commentFormActive, setCommentFormActive] = useState(false);\r\n\r\n    const { twit: {id, title, text, twits, likes, comments, createdAt }, email, apiCallHook, baseUrl, sync, setSync } = props;\r\n\r\n    const likeCount = likes.filter(like => like.isLiked).length;\r\n    const showCommentForm = () => {\r\n        setCommentFormActive(!commentFormActive);\r\n    }\r\n\r\n    const likeTwit = () => {\r\n        // console.log('like twit with id: ', id);\r\n        apiCallHook('POST', `${baseUrl}/likes/like/${id}`);\r\n    }\r\n    const commentTwit = () => {\r\n        // console.log('comment twit with id: ', id);\r\n        showCommentForm();\r\n    }\r\n    const deleteTwit = () => {\r\n        // console.log('delete twit with id: ', id);\r\n        apiCallHook('DELETE', `${baseUrl}/twits/${id}`);\r\n    }\r\n\r\n\r\n    return (\r\n    <div className='bg-blue-100 rounded p-5 mb-2'>\r\n        <p className='font-bold text-center'>{title}</p>\r\n        <span className='text-xs mb-2'>\r\n            <Moment fromNow>{createdAt}</Moment>\r\n        </span>\r\n        <p className='font-sans antialiased'>{text}</p>\r\n        <p className='text-xs text-gray-800 flex my-2'>\r\n            <span className='mx-2 flex'>\r\n                {twits.imageUrl ? (\r\n                <span className='mr-1'>\r\n                    <img src={twits.imageUrl} alt='Profile' style={{width: '20px', height: '20px', borderRadius: '50%'}} />\r\n                </span>)\r\n                : <BsPersonFill size={15}/>}\r\n                {email === twits.email ? 'Me' : twits.username}\r\n            </span>\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex' onClick={() => likeTwit()}>\r\n                <AiTwotoneLike color={likeCount > 0 ? 'blue' : 'gray'} size={15}/><span className='text-xs'>{likeCount}</span>\r\n            </span>\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex' onClick={() => commentTwit()}>\r\n                <BsChatTextFill size={15}/>\r\n            </span>\r\n            {email === twits.email &&\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex hover:text-red-800' onClick={() => deleteTwit()}>\r\n                <AiTwotoneDelete size={15}/>\r\n            </span>}\r\n        </p>\r\n        {commentFormActive && <CommentForm twitId={id} showCommentForm={showCommentForm} sync={sync} setSync={setSync}/>}\r\n\r\n        {comments.length > 0 && \r\n                (<div className='mt-2 rounded'>\r\n                    {comments.map((comment, idx) => \r\n                        <Comment key={idx} comment={comment} email={email}/>\r\n                )}\r\n            </div>)\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nconst Comment = (props) => {\r\n    const { comment: { text, usercomments, createdAt }, email } = props;\r\n    return(\r\n        <div className='bg-green-300 mb-2 p-2 rounded'>\r\n            <span className='text-xs mb-2'>\r\n            <Moment fromNow>{createdAt}</Moment>\r\n            </span>\r\n            <p>{text}</p>\r\n            <span className='mx-2 flex items-justify text-xs'>\r\n                {usercomments.imageUrl ? (\r\n                <span className='mr-1'>\r\n                    <img src={usercomments.imageUrl} alt='Profile' style={{width: '20px', height: '20px', borderRadius: '50%'}} />\r\n                </span>)\r\n                : <BsPersonFill size={15}/>}\r\n                <span className=''>\r\n                    {email === usercomments.email ? 'Me' : usercomments.username}\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n}","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Posts from \"./components/Posts\";\nimport Twits from './components/Twits';\n\nfunction App() {\n    const [loggedIn, setLoggedIn] = useState(JSON.parse(localStorage.getItem('loggedIn')));\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')) || false);\n    // console.log(loggedIn, localStorage.getItem('signup'));\n    \n  return (\n    <Router>\n        {/* <div className=\"h-full w-full m-0 max-w-sm mx-auto bg-blue-200 rounded-xl shadow-md flex\"> */}\n        <div className=\"font-Roboto h-full w-full m-0 max-w-xl max-h-xl my-0 mx-auto bg-blue-300 rounded-xl shadow-md -px-3\">\n              <div className=\"bg-white-300 rounded-xl p-4\">\n      <Switch>\n              <Route exact path=\"/\" component={Posts} />\n              <Route exact path=\"/twits\" component={Twits} />\n      </Switch>\n            {/* <Posts /> */}\n          </div>\n        </div> \n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n// const dotenv = require(\"dotenv\");\r\nimport dotenv from \"dotenv\";\r\n\r\ndotenv.config();\r\n/* eslint-disable no-unused-vars */\r\n\r\n// eslint-disable-next-line no-restricted-globals\r\nconst ignored = self.__WB_MANIFEST;\r\n\r\n// Your custom service worker code goes here.\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  console.log(config, process.env.PUBLIC_URL);\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // if ('serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      console.log(config, process.env.PUBLIC_URL, publicUrl.origin !== window.location.origin);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        console.log(config, process.env.PUBLIC_URL, isLocalhost);\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        // checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        // registerValidSW(swUrl, config);\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        console.log(isLocalhost);\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from \"./service-worker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nserviceWorker.register();\n"],"sourceRoot":""}