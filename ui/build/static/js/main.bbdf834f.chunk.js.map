{"version":3,"sources":["helper.js","components/GoogleAuth.js","components/chat.jpg","components/Posts.js","components/AttachImage.js","components/TwitForm.js","components/CommentForm.js","components/Twits.js","components/Profile.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["baseUrl","dotenv","config","clientId","process","GoogleAuth","props","error","setError","setLoading","loading","useState","JSON","parse","localStorage","getItem","signup","apiUrl","history","useHistory","buttonText","onSuccess","res","console","log","authenticate","profileObj","email","name","imageUrl","onFailure","cookeiPolicy","style","marginTop","Logout","render","renderProps","size","onLogoutSuccess","a","google","password","setItem","axios","method","url","data","headers","catch","response","auth","success","user","username","token","push","Posts","setEmail","setPassword","setSignup","handleChange","e","target","value","useEffect","fontFamily","fontWeight","className","fontSize","type","placeholder","onChange","flexDirection","color","height","width","cursor","onClick","href","src","chat","alt","borderRadius","AttachImage","setImageUrl","setUploading","imgUrl","setImgUrl","handleImage","serviceImage","files","FormData","append","fetch","body","json","imgLink","secure_url","accept","capture","TwitForm","title","setTitle","text","setText","textArea","setTextArea","length","sendTwit","removeItem","setSync","sync","showForm","display","alignItems","border","required","rows","cols","maxLength","overflow","CommentForm","sendComment","twitId","showCommentForm","Twits","twits","setTwits","formActive","setFormActive","users","setUsers","img","apiCallHook","isAxiosError","getTwits","map","x","getUsers","count","checkOpenForms","filter","twit","closedTwits","setTimeout","id","window","location","hash","replace","element","document","getElementById","scrollIntoView","sort","b","Date","createdAt","getTime","idx","frontendUrl","Twit","likes","comments","updatedAt","commentFormActive","setCommentFormActive","editLoading","setEditLoading","likeLoading","setLikeLoading","deleteLoading","setDeleteLoading","storyText","setStoryText","editForm","setEditForm","linkCopied","setLinkCopied","editStory","likeCount","like","isLiked","clipboardCopy","navigator","clipboard","writeText","fromNow","comment","isDeleted","Comment","usercomments","likecomments","LoadSpan","Profile","userData","setUserData","useParams","App","randomNotification","notifTitle","Notification","icon","requestPermission","then","result","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","ReactDOM","StrictMode","URL","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.bbdf834f.chunk.js","sourcesContent":["export const baseUrl = 'https://oba-twit.herokuapp.com';\r\n// export const baseUrl = 'http://localhost:4000';\r\nexport const frontendUrl = 'https://peaceful-leakey-ce2e49.netlify.app/twits';\r\n// export const frontendUrl = 'http://localhost:3000/twits';","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\n// import GoogleButton from 'react-google-button'\r\nimport { authenticate } from './Posts';\r\nimport { baseUrl } from '../helper';\r\nimport dotenv from \"dotenv\";\r\nimport { FiLogOut } from 'react-icons/fi';\r\n\r\ndotenv.config();\r\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\n// console.log('id', clientId);\r\n\r\nexport default function GoogleAuth(props) {\r\n    const { error, setError, loading, setLoading } = props;\r\n    \r\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')));\r\n    const apiUrl = `${baseUrl}/auth/${signup ? 'signup' : 'login'}`; \r\n    const history = useHistory(); \r\n\r\n    const onSuccess = (res) => {\r\n        console.log('login suceeded');\r\n        authenticate(true, res.profileObj.email, null, apiUrl, error, setError, setLoading, history, res.profileObj.name, res.profileObj.imageUrl)\r\n    }\r\n    const onFailure = (res) => {\r\n        console.log('login failed', res);\r\n    }\r\n    return (\r\n        <div>\r\n            <GoogleLogin \r\n                clientId={clientId}\r\n                buttonText={signup ? 'Signup with Google' : 'Login with Google'}\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                // isSignedIn={true}\r\n                cookeiPolicy={'single_host_origin'}\r\n                style={{marginTop: '160px'}}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Logout = () => {\r\n    \r\n    const onSuccess = (res) => {\r\n        console.log(res, 'Logout suceeded');\r\n    }\r\n    return(\r\n    <div>\r\n              <GoogleLogout \r\n                clientId={clientId}\r\n                render={renderProps => (\r\n                    <span><FiLogOut size={25}/></span>\r\n                )}\r\n                buttonText='Signout' \r\n                onLogoutSuccess={onSuccess}\r\n                style={{marginTop: '160px'}}\r\n            />\r\n    </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/chat.7e8098f6.jpg\";","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport GoogleAuth from './GoogleAuth';\r\nimport { baseUrl } from '../helper';\r\n// import LinkedinAuth from './LinkedinAuth';\r\nimport dotenv from \"dotenv\";\r\nimport chat from './chat.jpg';\r\nimport { CgCopyright } from 'react-icons/cg';\r\n\r\ndotenv.config();\r\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\n// console.log('id', clientId, process.env);\r\n\r\nexport const authenticate = async(google = false, email, password = null, apiUrl, error, setError, setLoading, history, name, imageUrl) => {\r\n    localStorage.setItem('img', imageUrl);\r\n    setLoading(true);\r\n    let res;\r\n    if(!google) {\r\n        res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}`,\r\n            data: {email, password},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .catch(error => {\r\n            if(error.response) {\r\n                setError(error.response?.data?.error);\r\n                // setTimeout(() => {\r\n                //     setError('');\r\n                // }, 1000);\r\n            } else {\r\n                setError('Please check your network');\r\n                // setTimeout(() => {\r\n                //     setError('');\r\n                // }, 1000);\r\n            }\r\n        });\r\n    } else {\r\n        res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}`,\r\n            data: {email, password: 'passs', auth: 'google', name, imageUrl},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .catch(error => {\r\n            setError(error.response.data.error);\r\n            // setTimeout(() => {\r\n            //     setError('');\r\n            // }, 1000);\r\n        });\r\n\r\n    }\r\n        if(res && res.data.success) {\r\n            localStorage.setItem('email', email);\r\n            localStorage.setItem('img', res.data.data.user.imageUrl);\r\n            localStorage.setItem('username', res.data.data.user?.username);\r\n            localStorage.setItem('token', res.data.data.token);\r\n            setLoading(false);\r\n            history.push('/twits');\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n}\r\n\r\nexport default function Posts(props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')));\r\n    const token = localStorage.getItem('token');\r\n    const history = useHistory();\r\n//   console.log(token);\r\nconst apiUrl = `${baseUrl}/auth/${signup ? 'signup' : 'login'}`; \r\n\r\nconst handleChange = (e) => {\r\n    if(e.target.name === 'email') {\r\n        setEmail(e.target.value);\r\n    } else {\r\n        setPassword(e.target.value);\r\n    }\r\n}\r\n\r\nconst handleSignupMode = () => {\r\n    if(!signup) {\r\n        setSignup(true);\r\n        localStorage.setItem('signup', true);\r\n    } else {\r\n        setSignup(false);\r\n        localStorage.setItem('signup', false);\r\n    }\r\n}\r\n\r\nuseEffect(() => {\r\n    if(token) {\r\n        // history.push('/');\r\n        history.push('/twits');\r\n    }\r\n    return () => {\r\n    }\r\n}, []);\r\n\r\n    return (\r\n        <div style={{fontFamily: 'Roboto', fontWeight: '600'}} className='font-Roboto text-center align-items-center'>\r\n             <p style={{fontFamily: 'Architects Daughter', fontWeight: '300'}} className='italic text-center mb-2'>\r\n                <span style={{fontSize: '1.8em'}} className='text-purple-900 font-bold'>Twitee<br/>\r\n                </span> \r\n                <span style={{fontSize: '1em'}}>.... Feel free, express yourself, network ....</span>\r\n            </p>\r\n            <h1 style={{fontSize: 20}} className='font-bold text-md mb-7'>\r\n                {signup ?  'Signup' : 'Login'}\r\n            </h1>\r\n            <input \r\n                type='text'\r\n                name='email'\r\n                value={email} \r\n                placeholder='email'\r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5'\r\n                /><br/>\r\n            <input \r\n                type='password'\r\n                name='password'\r\n                value={password} \r\n                placeholder='password' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5'\r\n            /><br/>\r\n            <div style={{flexDirection: 'column'}} className='flex'>\r\n                {error && <span className='mb-2 text-red-600'>{error}</span>}\r\n                <div>\r\n                    {!loading ?\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={() => authenticate(false, email, password, apiUrl, error, setError, setLoading, history)}\r\n                        className='hover:bg-green-900 bg-green-400 font-medium p-2 rounded w-6 h-3 text-white'\r\n                    >    \r\n                        {signup ? 'Signup' : 'Login' }\r\n                    </span>\r\n                    :\r\n                    <span className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n                <span className='text-xs mt-4 mb-4'>\r\n                {signup ? 'Already signed up ?' : 'Not registered ?' }\r\n                     \r\n                <a \r\n                    href='/' \r\n                    className='focus:text-md underline'\r\n                    onClick={handleSignupMode}\r\n                > \r\n                    {signup ? ' Login here' : ' Signup here!' }\r\n                </a></span>\r\n            </div>\r\n            {!token && <GoogleAuth \r\n                error={error}\r\n                setError={setError}\r\n                loading={loading}\r\n                setLoading={setLoading}\r\n            />}\r\n            {/* <LinkedinAuth /> */}\r\n            \r\n          <img \r\n            src={chat}\r\n            alt='CHat'\r\n            className=''\r\n            style={{borderRadius: '5', width: '100'}}\r\n          />\r\n            <p className=\"text-white-400 bold flex text-center\"><CgCopyright /> Twitee</p>         \r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\n// import Loader from \"react-loader-spinner\";\r\nimport { FaCamera } from \"react-icons/fa\";\r\n\r\nexport default function AttachImage({imageUrl, setImageUrl}) {\r\n    \r\n    const [uploading, setUploading] = useState(\"\");\r\n    const [imgUrl, setImgUrl] = useState(\"\");\r\n\r\n    const handleImage = async(e) => {\r\n        console.log(e.target)\r\n        setUploading(\"loading\");\r\n        const serviceImage = e.target.files[0];\r\n        const data = new FormData();\r\n        const url = \"https://api.cloudinary.com/v1_1/thevetdoctor/image/upload\";\r\n        data.append(\"file\", serviceImage);\r\n        data.append(\"upload_preset\", \"zunt8yrw\");\r\n        const res = await fetch(url, {\r\n          method: \"POST\",\r\n          body: data\r\n        });\r\n        const imgLink = await res.json();\r\n        setImgUrl(imgLink.secure_url);\r\n        setImageUrl(imgLink.secure_url);\r\n        // console.log('image uploaded' ,imgLink.secure_url);\r\n        // const images = [imgLink.secure_url, ...serviceImages];\r\n        // setServiceImages(images);\r\n        setUploading(\"done\");\r\n        // console.log(imgUrl);\r\n      }\r\n    return (\r\n        <div className=\"flex\">\r\n            {imgUrl ? \r\n                <img \r\n                    src={imgUrl} alt='post' style={{width: '20em', height: '9em'}} className='rounded'\r\n                /> :\r\n                <>\r\n                {/* <span className='ml-3 cursor-pointer flex'><FaCamera size={25}  /> */}\r\n                <label className='ml-3 cursor-pointer flex'><FaCamera size={25}  />{' '} <span className='ml-2'>Add Image</span>\r\n\r\n                <input\r\n                    type=\"file\"\r\n                    placeholder=\"\"\r\n                    accept=\"image/*;capture=camera\"\r\n                    capture\r\n                    className=\"hidden\"\r\n                    onChange={e => handleImage(e)}\r\n                    />\r\n                    </label>\r\n                {/* <span className='ml-2'>Add Image</span> */}\r\n                {/* </span> */}\r\n                </>\r\n            //   {uploading === \"loading\" &&\r\n            //   <Loader \r\n            //       type='TailSpin'\r\n            //       color='#000'\r\n            //       height={20} \r\n            //       width={20} \r\n            //   />}\r\n            //   {/* {<FaCheck />} */}\r\n            }</div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport { baseUrl } from '../helper';\r\nimport AttachImage from './AttachImage';\r\n\r\nexport default function TwitForm(props) {\r\n    const [title, setTitle] = useState(localStorage.getItem('twitTitle') ? localStorage.getItem('twitTitle') : '');\r\n    const [text, setText] = useState(localStorage.getItem('twitText') ? localStorage.getItem('twitText') : '');\r\n    const [imageUrl, setImageUrl] = useState(localStorage.getItem('twitImage') ? localStorage.getItem('twitImage') : '');\r\n    const [textArea, setTextArea] = useState(160);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const token = localStorage.getItem('token'); \r\n    \r\n    const apiUrl = `${baseUrl}/twits/post`; \r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'title') {\r\n            setTitle(e.target.value);\r\n            localStorage.setItem('twitTitle', e.target.value)\r\n        } else {\r\n            setText(e.target.value);\r\n            setTextArea(160 - e.target.value.length)\r\n            localStorage.setItem('twitText', e.target.value)\r\n        }\r\n    }\r\n\r\n    const sendTwit = async() => {\r\n            if(!(title && text)) {\r\n                if(!title) {\r\n                    setError('Title is required');\r\n                    return;\r\n                }\r\n                setError('Inputs required');\r\n                return;\r\n            }\r\n            setLoading(true);\r\n            const res = await axios({\r\n                method: 'POST',\r\n                url: `${apiUrl}`,\r\n                data: {title, text, imageUrl},\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                        console.log(error.response);\r\n                        setError(error.response.data.error);\r\n                });\r\n                // console.log(res);\r\n                if(res && res.data.success) {\r\n                    setLoading(false);\r\n                    localStorage.removeItem('twitTitle');\r\n                    localStorage.removeItem('twitText');\r\n                    props.setSync(!props.sync);\r\n                    props.showForm();\r\n                } else {\r\n                    setLoading(false);\r\n                    console.log('Error found'); \r\n                }\r\n    }\r\n\r\n    return (\r\n        <div className='text-center sticky top-0 rounded pb-1 bg-blue-200 mt-3 pt-3 mb-1'>\r\n             <h1 style={{fontSize: '1.5em'}} className='font-bold text-base mb-3'>\r\n                New twit\r\n            </h1>\r\n            <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', borderRadius: '20%'}}>\r\n\r\n            <input \r\n                type='text'\r\n                name='title'\r\n                value={title} \r\n                placeholder='title'\r\n                onChange={handleChange}\r\n                className='px-3 py-1 rounded mb-2'\r\n                style={{width: '20em', border: 'none'}}\r\n                required\r\n                />\r\n            <textarea \r\n                type='textarea'\r\n                name='text'\r\n                rows={4}\r\n                cols={3}\r\n                style={{width: '20em', height: `${imageUrl ? '5em' : '13em'}`, border: 'none'}}\r\n                maxLength={160}\r\n                value={text}\r\n                overflow=\"hidden\"\r\n                placeholder='Drop in your twit ...' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-1 text-md text-gray-600'\r\n                required\r\n            />\r\n                <span style={{display: 'flex', width: '20em'}} className='justify-between px-3 mt-2 mb-2'>\r\n                    <AttachImage imageUrl={imageUrl} setImageUrl={setImageUrl} />\r\n                <span>{textArea}</span>\r\n                </span>\r\n                </div>\r\n            <div style={{flexDirection: 'column'}} className='flex mb-5'>\r\n                {error && <span className='mb-2 text-red-800 text-md'>{error}</span>}\r\n                <div className='justify-items-center mt-2'>\r\n                    {!loading ?\r\n                    <>\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={() => props.showForm()}\r\n                        className='hover:bg-gray-900 bg-gray-400 font-medium p-1 rounded text-white'\r\n                        >    \r\n                        Cancel\r\n                    </span>\r\n\r\n                    <span \r\n                    style={{cursor: 'pointer'}}\r\n                    onClick={sendTwit}\r\n                    className='hover:bg-green-900 bg-green-400 font-medium p-1 rounded text-white mx-2'\r\n                    >    \r\n                        Send\r\n                    </span>\r\n                    </>\r\n                    :\r\n                    <span className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport { baseUrl } from '../helper';\r\n\r\nexport default function CommentForm(props) {\r\n    const [text, setText] = useState('');\r\n    const [textArea, setTextArea] = useState(160);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const token = localStorage.getItem('token'); \r\n    \r\n    const apiUrl = `${baseUrl}/comments`; \r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'text') {\r\n            setText(e.target.value);\r\n            setTextArea(160 - e.target.value.length)\r\n        }\r\n    }\r\n\r\n    const sendComment = async() => {\r\n        if(!props.twitId) return;\r\n        if(!text) {\r\n            setError('Inputs required');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        const res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}/${props.twitId}`,\r\n            data: {text},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .catch(error => {\r\n                    console.log(error.response);\r\n                    setError(error.response.data.error);\r\n            });\r\n            console.log(res);\r\n            if(res && res.data.success) {\r\n                setLoading(false);\r\n                props.setSync(!props.sync);\r\n                props.showCommentForm();\r\n            } else {\r\n                setLoading(false);\r\n                console.log('Error found'); \r\n            }\r\n    }\r\n\r\n    return (\r\n        <div className='text-center'>\r\n             <p style={{fontSize: 20}} className='font-bold text-xs mb-3'>\r\n                New Comment\r\n            </p>\r\n            <textarea \r\n                type='textarea'\r\n                name='text'\r\n                rows={5}\r\n                cols={8}\r\n                maxLength={160}\r\n                style={{width: '15em', height: '8em'}}\r\n                value={text} \r\n                placeholder='Drop in your comment ...' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5 h-20 text-md text-gray-600'\r\n                required\r\n            /><br/>\r\n            {textArea}\r\n            <div style={{flexDirection: 'column'}} className='flex mb-5'>\r\n                {error && <span className='mb-2 text-red-800 text-xs'>{error}</span>}\r\n                <div className='justify-items-center'>\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={() => props.showCommentForm()}\r\n                        className='hover:bg-gray-900 bg-gray-400 font-medium p-1 rounded text-white'\r\n                    >    \r\n                        Cancel\r\n                    </span>\r\n\r\n                    {!loading ?\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={sendComment}\r\n                        className='hover:bg-green-900 bg-green-400 font-medium p-1 rounded text-white mx-2'\r\n                    >    \r\n                        Send\r\n                    </span>\r\n                    :\r\n                    <span className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { BsPersonFill, BsChatTextFill, BsShareFill } from 'react-icons/bs';\r\nimport { AiTwotoneLike, AiTwotoneDelete, AiFillHome } from 'react-icons/ai';\r\nimport { IoIosPeople } from 'react-icons/io';\r\nimport { GrEdit } from 'react-icons/gr';\r\nimport { RiChatNewLine } from 'react-icons/ri';\r\nimport TwitForm from './TwitForm';\r\nimport CommentForm from './CommentForm';\r\nimport { baseUrl, frontendUrl } from '../helper';\r\nimport { Logout } from './GoogleAuth';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function Twits() {\r\n    const [error, setError] = useState('');\r\n    const [twits, setTwits] = useState([]);\r\n    const [formActive, setFormActive] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    const [users, setUsers] = useState(0);\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const img = localStorage.getItem('img') ? localStorage.getItem('img') : '';\r\n    const history = useHistory();\r\n    const token = localStorage.getItem('token');\r\n\r\n    const apiUrl = `${baseUrl}/twits`;\r\n\r\n    const showForm = () => {\r\n        setFormActive(!formActive);\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        history.push('/');\r\n    }\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.isAxiosError);\r\n                }\r\n            });\r\n            setSync(!sync);\r\n    }\r\n\r\n    const getTwits = async() => {\r\n        if(!token) {\r\n            console.log('Not loggedin');\r\n            return;\r\n        }\r\n        const res = await axios({\r\n            method: 'GET',\r\n            url: `${apiUrl}`,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.isAxiosError);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                setTwits(res.data.data.map(x => {\r\n                    x.formActive = false;\r\n                    return x;\r\n                }));\r\n            } else {\r\n                console.log('Error found'); \r\n                setError('Error found');\r\n            }\r\n    }\r\n\r\n    const getUsers = async() => {\r\n        const res = await axios({\r\n            method: 'GET',\r\n            url: `${baseUrl}/auth/users`,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.isAxiosError);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                setUsers(res.data.data.count);\r\n            } else {\r\n                console.log('Error found');\r\n                setError('Error found');\r\n            }\r\n    }\r\n\r\n    const checkOpenForms = () => {\r\n        console.log('checking open forms', twits.filter(twit => twit.formActive));\r\n        let closedTwits = twits.map(twit => {\r\n            twit.formActive = false;\r\n            return twit;\r\n        });\r\n        setTwits(closedTwits);\r\n        console.log('closing open forms', twits.filter(twit => twit.formActive));\r\n    }\r\n\r\nuseEffect(() => {\r\n    if(!token) {\r\n        history.push('/');\r\n    }\r\n    getUsers();\r\n    return () => {\r\n        console.log('cleanup twits 1');\r\n    }\r\n}, []);\r\n\r\nuseEffect(async() => {\r\n    getTwits();\r\n\r\n    return () => {\r\n        console.log('cleanup twits 2');\r\n    }\r\n}, [sync]);\r\n\r\nuseEffect(() => {\r\n    setTimeout(() => {\r\n        const id = window.location.hash.replace('#', '');\r\n        const element = document.getElementById(id);\r\n        if (element) element.scrollIntoView();\r\n      }, 0);\r\n});\r\n\r\n    return (\r\n        <div style={{fontFamily: 'Roboto', fontWeight: '600', height: '90vh'}} className='mb-5 p-3'>\r\n            <span style={{cursor: 'pointer', borderRadius: '50%'}} className='fixed bottom-16 right-4 bg-green-500 p-4 text-white'><RiChatNewLine size={25} onClick={showForm} /></span>\r\n            {formActive && <TwitForm error={error} showForm={showForm} sync={sync} setSync={setSync}/>}\r\n            \r\n            {!formActive && \r\n            <div>\r\n                <p style={{fontFamily: 'Architects Daughter', fontWeight: '300'}} className='italic text-center mb-2'>\r\n                    <span style={{fontSize: '1.8em'}} className='text-purple-900 font-bold'>Twitee<br/>\r\n                    </span> \r\n                    <span style={{fontSize: '1em'}}>.... Feel free, express yourself, network ....</span>\r\n                </p>\r\n                <div className='py-2 px-2 rounded mb-4 flex justify-between'>\r\n                    {img !== 'null' ? (\r\n                        <span>\r\n                            <img src={img} alt='Profile' style={{width: '30px', height: '30px', borderRadius: '50%'}} />\r\n                        </span>) \r\n                        : <span className='text-left'><AiFillHome size={25} /></span>}\r\n                    {users > 0 && <span className='text-left flex'><IoIosPeople size={25}/>{users}</span>}\r\n                    \r\n                    <span style={{cursor: 'pointer'}} className='text-right' onClick={logout}><Logout />\r\n                    </span>\r\n                </div>\r\n                <div className=''>\r\n                {/* <a href='#30dc1957-c052-4a66-8921-b72fa9ad151d'>#30dc1957-c052-4a66-8921-b72fa9ad151d</a> */}\r\n                {\r\n                    twits.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()).map((twit, idx) => \r\n                        <Twit key={idx} twit={twit} email={email} apiCallHook={apiCallHook} baseUrl={baseUrl} frontendUrl={frontendUrl} sync={sync} setSync={setSync} showForm={showForm} formActive={formActive} checkOpenForms={checkOpenForms} />\r\n                    )\r\n                }\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Twit = (props) => {\r\n    const { twit: {id, title, text, imageUrl, twits, likes, comments, createdAt, updatedAt }, email, apiCallHook, baseUrl, frontendUrl, sync, setSync, checkOpenForms } = props;\r\n    const [commentFormActive, setCommentFormActive] = useState(false);\r\n    const [editLoading, setEditLoading] = useState(false);\r\n    const [likeLoading, setLikeLoading] = useState(false);\r\n    const [deleteLoading, setDeleteLoading] = useState(false);\r\n    const [storyText, setStoryText] = useState(text);\r\n    const [editForm, setEditForm] = useState(false);\r\n    const [linkCopied, setLinkCopied] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const handleStoryChange = (e) => {\r\n        setStoryText(e.target.value);\r\n    }\r\n\r\n    const copyTwitLink = () => {\r\n        clipboardCopy(`${frontendUrl}/#${id}`);\r\n        setTimeout(() => {\r\n            setLinkCopied(false);\r\n        }, 1000);\r\n    }\r\n\r\n    const editStory = () => {\r\n        setEditForm(!editForm);\r\n        setStoryText(text);\r\n    }\r\n   \r\n    const updateStory = () => {\r\n        apiCallHook('PATCH', `${baseUrl}/twits/${id}`, {text: storyText});\r\n        setEditLoading(true);\r\n        setTimeout(() => {\r\n            setEditLoading(false);\r\n            setEditForm(false);\r\n        }, 1000);\r\n    }\r\n    const likeCount = likes.filter(like => like.isLiked).length;\r\n    const showCommentForm = () => {\r\n        setCommentFormActive(!commentFormActive);\r\n        props.twit.formActive = !commentFormActive;\r\n    }\r\n    \r\n    const likeTwit = () => {\r\n        setLikeLoading(true);\r\n        setTimeout(() => {\r\n            setLikeLoading(false);\r\n        }, 1000);\r\n        apiCallHook('POST', `${baseUrl}/likes/like/${id}`);\r\n    }\r\n    const commentTwit = () => {\r\n        checkOpenForms();\r\n        showCommentForm();\r\n    }\r\n    const deleteTwit = () => {\r\n        setDeleteLoading(true);\r\n        setTimeout(() => {\r\n            setDeleteLoading(false);\r\n        }, 1000);\r\n        apiCallHook('DELETE', `${baseUrl}/twits/${id}`);\r\n    }\r\n\r\n    const clipboardCopy = async (text) => {\r\n        if ('clipboard' in navigator) {\r\n            console.log('Link copied');\r\n            setLinkCopied(true);\r\n          return await navigator.clipboard.writeText(text);\r\n        } else {\r\n            console.log('Link copy is not supported');\r\n        }\r\n      }\r\n    return (\r\n    <div id={`${id}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-2'>\r\n            <span></span>\r\n            <span style={{fontFamily: 'Roboto Slab'}} className='text-xl font-bold self-center'>{title}</span>\r\n            <span className={!linkCopied ? 'mr-2 mb-1 invisible text-xs self-end' : 'mr-2 mb-1 text-xs self-end'}>copied</span>\r\n        </p>\r\n        <span className='text-xs mb-5 flex justify-between'>\r\n            <Moment fromNow>{createdAt}</Moment>\r\n        <span className='flex'>\r\n        {(email === twits.email) && !editForm && \r\n            <span className='cursor-pointer mr-3 hover:bg-blue-400 text-black hover:text-white p-2 -mt-2 rounded-full' onClick={() => editStory()}> \r\n                <GrEdit size={20} />\r\n            </span>\r\n        }\r\n            <span className={linkCopied ? 'flex-col hover:bg-blue-400 rounded-full p-2 text-white bg-blue-900 cursor-pointer -mt-2 mr-3' : 'rounded-full hover:bg-blue-400 p-2 cursor-pointer -mt-2 mr-3'} onClick={() => copyTwitLink()}> \r\n                <BsShareFill size={20} />\r\n            </span>\r\n        </span>\r\n        </span>\r\n        {editForm && <div className='mb-5'>\r\n                <textarea \r\n                    className='border-gray-200 border-2 p-2 mb-2 rounded bg-white-300 focus:outline-none'\r\n                    style={{width: '100%'}}\r\n                    cols={3}\r\n                    rows={4}\r\n                    maxLength={160}\r\n                    value={storyText}\r\n                    onChange={handleStoryChange}\r\n                    required={true}\r\n                    /><br />\r\n                {!editLoading ? \r\n                 <>\r\n                    <span \r\n                        className='cursor-pointer bg-gray-500 p-2 m-2 text-white rounded hover:bg-gray-400' onClick={() => editStory()}\r\n                    > \r\n                        Cancel \r\n                    </span>\r\n                    <span \r\n                    className='cursor-pointer bg-green-600 p-2 mb-2 text-white rounded hover:bg-green-400 hover:text-black' onClick={() => updateStory()}\r\n                    > \r\n                        Update Story \r\n                    </span>\r\n                </>\r\n                :\r\n                    <LoadSpan height={20} width={20} color='#00bfff' />}\r\n                </div>}\r\n\r\n        {!editForm && <div className='p-3 font-semibold'>{text}<br />\r\n        {((new Date(updatedAt).getTime() - new Date(createdAt).getTime()) > 0) && <span className='text-xs'>Updated <Moment fromNow>{updatedAt}</Moment></span>}\r\n        </div>}\r\n        <span>\r\n            {imageUrl && <img src={imageUrl} width='100%' alt='imgurl' className='rounded' />}\r\n        </span>\r\n        <div style={{fontSize: '0.8em'}} className='text-xs text-gray-800 flex mt-2'>\r\n            <span className='mx-2 flex cursor-pointer'  onClick= {e => history.push(`/${twits.username}`)}>\r\n                {twits.imageUrl ? (\r\n                <span className='mr-1'>\r\n                    <img src={twits.imageUrl} alt='Profile' style={{width: '20px', height: '20px', borderRadius: '50%'}} />\r\n                </span>)\r\n                : <BsPersonFill size={15}/>}\r\n                {email === twits.email ? 'Me' : twits.username}\r\n            </span>\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex' onClick={() => likeTwit()}>\r\n               {!likeLoading ? \r\n               <>\r\n               <AiTwotoneLike color={likeCount > 0 ? 'blue' : 'gray'} size={15}/>\r\n                <span className='text-xs'>{likeCount}</span>\r\n                </>:\r\n                <LoadSpan height={20} width={20} color='#00bfff' />}\r\n            </span>\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex' onClick={() => commentTwit()}>\r\n                <BsChatTextFill size={15}/>\r\n            </span>\r\n            {email === twits.email &&\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex hover:text-red-800' onClick={() => deleteTwit()}>\r\n                {!deleteLoading ? \r\n                <AiTwotoneDelete size={15} color='red'/>:\r\n                <LoadSpan height={20} width={20} color='#00bfff' />}\r\n            </span>}\r\n        </div>\r\n        {commentFormActive && <CommentForm twitId={id} showCommentForm={showCommentForm} sync={sync} setSync={setSync}/>}\r\n\r\n        {comments.length > 0 && \r\n                (<div className='mt-2 rounded'>\r\n                    {comments.filter(comment => !comment.isDeleted).map((comment, idx) => (\r\n                        <Comment key={idx} comment={comment} apiCallHook={apiCallHook} email={email} />\r\n                    )\r\n                )}\r\n            </div>)\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nconst Comment = (props) => {\r\n    const { comment: { id, text, usercomments, likecomments, createdAt }, email, apiCallHook } = props;\r\n\r\n    const [likeLoading, setLikeLoading] = useState(false);\r\n    const [deleteLoading, setDeleteLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const likeCount = likecomments?.filter(like => like.isLiked).length;\r\n    const likeComment = () => {\r\n        setLikeLoading(true);\r\n        setTimeout(() => {\r\n            setLikeLoading(false);\r\n        }, 1000);\r\n        apiCallHook('POST', `${baseUrl}/likecomments/like/${id}`);\r\n    }\r\n    const deleteComment = () => {\r\n        setDeleteLoading(true);\r\n        setTimeout(() => {\r\n            setLikeLoading(false);\r\n        }, 1000);\r\n        // console.log('delete twit with id: ', id);\r\n        apiCallHook('DELETE', `${baseUrl}/comments/${id}`);\r\n    }\r\n\r\n    return(\r\n        <div className='bg-blue-200 mb-2 p-2 rounded'>\r\n            <span className='text-xs mb-2'>\r\n            <Moment fromNow>{createdAt}</Moment>\r\n            </span>\r\n            <p className='p-3 font-semibold'>{text}</p>\r\n            <span style={{fontSize: '0.8em'}} className='mx-2 flex items-justify text-xs mt-2'>\r\n                {usercomments.imageUrl ?\r\n                <span className='mr-1 cursor-pointer' onClick= {e => history.push(`/${usercomments.username}`)}>\r\n                    <img src={usercomments.imageUrl} alt='Profile' style={{width: '20px', height: '20px', borderRadius: '50%'}} />\r\n                </span>\r\n                : <BsPersonFill size={15}/>}\r\n                <span className='cursor-pointer' onClick= {e => history.push(`/${usercomments.username}`)}>\r\n                    {email === usercomments.email ? 'Me' : usercomments.username}\r\n                </span>\r\n                <span style={{cursor: 'pointer'}} className='mx-2 flex' onClick={() => likeComment()}>\r\n                {!likeLoading ? \r\n                    <>\r\n                    <AiTwotoneLike color={likeCount > 0 ? 'blue' : 'gray'} size={15}/>\r\n                    <span className='text-xs'>{likeCount}</span>\r\n                    </>:\r\n                    <LoadSpan height={20} width={20} color='white' />}\r\n                </span>\r\n                {email === usercomments.email &&\r\n                <span style={{cursor: 'pointer'}} className='mx-2 flex hover:text-red-800' onClick={() => deleteComment()}>\r\n                {!deleteLoading ? \r\n                    <AiTwotoneDelete size={15} color='red'/>\r\n                    :\r\n                    <LoadSpan height={20} width={20} color='white' />}\r\n                </span>}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst LoadSpan = ({height, width, color}) => (\r\n            <span \r\n            className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color={color}\r\n                        height={height} \r\n                        width={width} \r\n                        />\r\n            </span>\r\n            )","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { IoCloseCircle } from 'react-icons/io5';\r\nimport { BsPersonFill } from 'react-icons/bs';\r\nimport Moment from 'react-moment';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../helper';\r\n\r\nexport default function Profile() {\r\n    const [ userData, setUserData ] = useState({});\r\n    let { user } = useParams();\r\n    const history = useHistory();\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const apiCallHook = async(method, url = `${baseUrl}/auth/users/${user}`) => {\r\n        const res = await axios({\r\n            method,\r\n            url,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.isAxiosError);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                setUserData(res.data.data.user);\r\n            } \r\n    }\r\n    useEffect(() => {\r\n        apiCallHook();\r\n        return () => {\r\n            console.log('cleanup profile page');\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div id={`${user}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 bg-gray-200 h-full rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-2'>\r\n            {userData?.imageUrl ?\r\n            <span>\r\n                <img src={userData?.imageUrl} alt='Profile' style={{width: '3em', height: '3em', borderRadius: '50%'}} />\r\n            </span>\r\n            : \r\n            <span className='text-left'><BsPersonFill size={25} /></span>}\r\n            <span style={{fontFamily: 'Roboto Slab'}} className='text-xl font-bold self-center'>{userData?.username}</span>\r\n            <span className='text-left bg-black-400 cursor-pointer hover:invisible' onClick={() => history.push(\"/\")}><IoCloseCircle size={35} /></span>\r\n        </p>\r\n        <span className='text-sm mt-3 mb-5 flex justify-between'>\r\n            <span>Member since : <Moment fromNow>{userData?.createdAt}</Moment></span>\r\n        <span className='flex'>\r\n        {(email !== userData?.email) && \r\n            <span className={' text-white bg-blue-900 rounded-full hover:bg-blue-400 p-2 cursor-pointer -mt-2 mr-3'}> \r\n                Follow\r\n            </span>\r\n        }\r\n        </span>\r\n        </span>\r\n    \r\n        <span>\r\n            {userData?.imageUrl ? \r\n            <img src={userData?.imageUrl} width='100%' alt='imgurl' className='rounded' />\r\n            :<span className=''><BsPersonFill size={300} /></span>}\r\n        </span>\r\n        \r\n        \r\n    </div>\r\n    )\r\n}\r\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Posts from \"./components/Posts\";\nimport Twits from './components/Twits';\nimport Profile from './components/Profile';\n\nfunction App() {\n    const [loggedIn, setLoggedIn] = useState(JSON.parse(localStorage.getItem('loggedIn')));\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')) || false);\n      const username = localStorage.getItem('username');\n      // console.log(username)\n      Notification.requestPermission().then((result) => {\n        if (result === 'granted') {\n          randomNotification();\n        }\n      });\n\n    function randomNotification() {\n      const notifTitle = username ? `Hello, ${username}` : 'Hello !';\n      const notifBody = `Have you checked Twitee today?`;\n      const notifImg = `https://res.cloudinary.com/thevetdoctor/image/upload/v1599332593/g1rozhabxswegvhp59h3.jpg`;\n      const options = {\n        body: notifBody,\n        icon: notifImg,\n      };\n      new Notification(notifTitle, options);\n      setTimeout(randomNotification, 3 * 60 * 60 * 1000);\n    }\n  return (\n    <Router>\n        {/* <div className=\"h-full w-full m-0 max-w-sm mx-auto bg-blue-200 rounded-xl shadow-md flex\"> */}\n        {/* <div className=\"font-Roboto w-full m-0 max-w-xl max-h-xl my-0 mx-auto rounded-xl shadow-md -px-3\"> */}\n              {/* <div className=\"bg-gray-200 rounded-xl p-4\"> */}\n      <Switch>\n              <Route exact path=\"/\" component={Posts} />\n              <Route exact path=\"/twits\" component={Twits} />\n              <Route path=\"/:user\" component={Profile} />\n      </Switch>\n          {/* </div>ff */}\n        {/* </div>  */}\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n// import * as serviceWorker from \"./service-worker\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}