{"version":3,"sources":["components/GoogleAuth.js","components/chat.jpg","components/Posts.js","components/AttachImage.js","components/TwitForm.js","components/CommentForm.js","redux/actions.js","redux/reducer.js","redux/store.js","components/Twits.js","components/Profile.js","components/TopSearch.js","components/People.js","components/Followers.js","components/Following.js","components/UserTwits.js","App.js","serviceWorkerRegistration.js","index.js","helper.js"],"names":["dotenv","config","clientId","process","GoogleAuth","props","error","setError","setLoading","loading","useState","JSON","parse","localStorage","getItem","signup","apiUrl","baseUrl","history","useHistory","buttonText","onSuccess","res","authenticate","profileObj","email","name","imageUrl","onFailure","cookeiPolicy","style","marginTop","Logout","render","renderProps","size","onLogoutSuccess","a","google","password","setItem","axios","method","url","data","headers","catch","isAxiosError","response","search","auth","success","user","id","username","token","push","Posts","setEmail","setPassword","setSignup","handleChange","e","target","value","useEffect","fontFamily","fontWeight","className","fontSize","type","placeholder","onChange","color","height","width","onClick","src","chat","alt","borderRadius","AttachImage","setImageUrl","setUploading","imgUrl","setImgUrl","handleImage","serviceImage","files","FormData","append","fetch","body","json","imgLink","secure_url","accept","TwitForm","title","setTitle","text","setText","textArea","setTextArea","length","sendTwit","removeItem","setSync","sync","showForm","display","flexDirection","alignItems","border","required","rows","cols","maxLength","overflow","cursor","CommentForm","sendComment","twitId","showCommentForm","actions","setTwitData","setUserCount","setPeopleData","setSearchData","setUsersData","setNewsType","setPage","setTotalPages","setSearchQuery","setNetworkStatus","initialState","twits","users","peopleData","searchData","usersData","searchQuery","networkStatus","store","createStore","state","action","newsByType","newsData","filter","newsType","news","page","totalPages","Math","ceil","pageSize","newsBySearch","item","toLowerCase","indexOf","devToolsEnhancer","Twits","formActive","setFormActive","getState","dispatch","useSelector","userId","img","apiCallHook","getTwits","stringify","map","x","getUsers","count","checkOpenForms","twit","setTimeout","window","location","hash","replace","element","document","getElementById","scrollIntoView","split","backgroundColor","sort","b","Date","createdAt","getTime","idx","frontendUrl","Twit","link","likes","comments","updatedAt","commentFormActive","setCommentFormActive","editLoading","setEditLoading","likeLoading","setLikeLoading","deleteLoading","setDeleteLoading","storyText","setStoryText","editForm","setEditForm","linkCopied","setLinkCopied","more","setMore","viewComments","setViewComments","filteredComments","comment","isDeleted","isLiked","like","userlikes","showMore","editStory","likeCount","clipboardCopy","navigator","clipboard","writeText","fromNow","lineHeight","slice","href","Comment","usercomments","likecomments","LoadSpan","Profile","userData","setUserData","isFollower","setIsFollower","isFollowing","setIsFollowing","followerCount","setFollowerCount","followingCount","setFollowingCount","twitCount","setTwitCount","followLoading","setFollowLoading","useParams","userTwits","obj","userDataInStore","followers","follower","isFollowed","following","checkIsFollower","checkIsFollowing","goBack","followerId","TopSearch","People","searchResults","person","handleSearch","localeCompare","Follower","Following","UserTwits","twitData","userTwitData","App","onLine","Notification","requestPermission","then","result","exact","path","component","urlBase64ToUint8Array","require","base64String","base64","repeat","rawdata","atob","outputArray","Uint8Array","i","charCodeAt","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","console","log","serviceWorker","register","registration","pushManager","subscribe","userVisibleOnly","applicationServerKey","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","ReactDOM","StrictMode","URL","origin","addEventListener","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","host"],"mappings":"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","file":"static/js/main.ce391fb7.chunk.js","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\n// import GoogleButton from 'react-google-button'\r\nimport { authenticate } from './Posts';\r\nimport { baseUrl } from '../helper';\r\nimport dotenv from \"dotenv\";\r\nimport { FiLogOut } from 'react-icons/fi';\r\n\r\ndotenv.config();\r\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\n\r\nexport default function GoogleAuth(props) {\r\n    const { error, setError, loading, setLoading } = props;\r\n    \r\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')));\r\n    const apiUrl = `${baseUrl}/auth/${signup ? 'signup' : 'login'}`; \r\n    const history = useHistory(); \r\n\r\n    const onSuccess = (res) => {\r\n        authenticate(true, res.profileObj.email, null, apiUrl, error, setError, setLoading, history, res.profileObj.name, res.profileObj.imageUrl)\r\n    }\r\n    const onFailure = (res) => {\r\n        // console.log('login failed', res);\r\n    }\r\n    return (\r\n        <div>\r\n            <GoogleLogin \r\n                clientId={clientId}\r\n                buttonText={signup ? 'Signup with Google' : 'Login with Google'}\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                // isSignedIn={true}\r\n                cookeiPolicy={'single_host_origin'}\r\n                style={{marginTop: '160px'}}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Logout = () => {\r\n    \r\n    const onSuccess = (res) => {\r\n        // console.log(res, 'Logout suceeded');\r\n    }\r\n    return(\r\n    <div>\r\n              <GoogleLogout \r\n                clientId={clientId}\r\n                render={renderProps => (\r\n                    <span><FiLogOut size={25}/></span>\r\n                )}\r\n                buttonText='Signout' \r\n                onLogoutSuccess={onSuccess}\r\n                style={{marginTop: '160px'}}\r\n            />\r\n    </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/chat.7e8098f6.jpg\";","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport GoogleAuth from './GoogleAuth';\r\nimport { baseUrl } from '../helper';\r\n// import LinkedinAuth from './LinkedinAuth';\r\nimport dotenv from \"dotenv\";\r\nimport chat from './chat.jpg';\r\nimport { CgCopyright } from 'react-icons/cg';\r\n\r\ndotenv.config();\r\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\n\r\nexport const authenticate = async(google = false, email, password = null, apiUrl, error, setError, setLoading, history, name, imageUrl) => {\r\n    localStorage.setItem('img', imageUrl);\r\n    setLoading(true);\r\n    let res;\r\n    if(!google) {\r\n        if(!(email && password)) {\r\n            if(!email) {\r\n                setError('Email is required');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            setError('Password required');\r\n            setLoading(false);\r\n            return;\r\n        }\r\n        res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}`,\r\n            data: {email, password},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .catch(error => {\r\n            if(error.isAxiosError) {\r\n                if(error.response?.data?.error.search('NOTFOUND') >= 0) {\r\n                    setError('Please check your network');\r\n                } else {\r\n                    setError(error.response?.data?.error);\r\n                }\r\n            }\r\n        });\r\n    } else {\r\n        res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}`,\r\n            data: {email, password: 'passs', auth: 'google', name, imageUrl},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .catch(error => {\r\n            setError(error.response.data.error);\r\n        });\r\n\r\n    }\r\n        if(res && res.data.success) {\r\n            localStorage.setItem('email', email);\r\n            localStorage.setItem('img', res.data.data.user.imageUrl);\r\n            localStorage.setItem('userId', res.data.data.user.id);\r\n            localStorage.setItem('username', res.data.data.user?.username);\r\n            localStorage.setItem('token', res.data.data.token);\r\n            setLoading(false);\r\n            history.push('/twits');\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n}\r\n\r\nexport default function Posts(props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')));\r\n    const token = localStorage.getItem('token');\r\n    const history = useHistory();\r\nconst apiUrl = `${baseUrl}/auth/${signup ? 'signup' : 'login'}`; \r\n\r\nconst handleChange = (e) => {\r\n    if(e.target.name === 'email') {\r\n        setEmail(e.target.value);\r\n    } else {\r\n        setPassword(e.target.value);\r\n    }\r\n}\r\n\r\nconst handleSignupMode = () => {\r\n    if(!signup) {\r\n        setSignup(true);\r\n        localStorage.setItem('signup', true);\r\n    } else {\r\n        setSignup(false);\r\n        localStorage.setItem('signup', false);\r\n    }\r\n}\r\n\r\nuseEffect(() => {\r\n    if(token) {\r\n        history.push('/twits');\r\n    }\r\n    return () => {\r\n    }\r\n}, []);\r\n    return (\r\n        <div style={{fontFamily: 'Roboto', fontWeight: '600'}} className='font-Roboto text-center align-items-center'>\r\n             <p style={{fontFamily: 'Architects Daughter', fontWeight: '300'}} className='italic text-center mb-2'>\r\n                <span style={{fontSize: '1.8em'}} className='text-purple-900 font-bold'>Twitee<br/>\r\n                </span> \r\n                <span className='text-md'> Feel free, express yourself & network </span>\r\n            </p>\r\n            <h1 style={{fontSize: 20}} className='font-bold text-md mb-7'>\r\n                {signup ?  'Signup' : 'Login'}\r\n            </h1>\r\n            <input \r\n                type='text'\r\n                name='email'\r\n                value={email} \r\n                placeholder='email'\r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5'\r\n                /><br/>\r\n            <input \r\n                type='password'\r\n                name='password'\r\n                value={password} \r\n                placeholder='password' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5'\r\n            /><br/>\r\n            <div className='flex flex-col mb-3'>\r\n                {error && <span className='mb-2 text-red-600'>{error}</span>}\r\n                <div className='flex justify-center'>\r\n                    {!loading ?\r\n                    <span \r\n                        onClick={() => authenticate(false, email, password, apiUrl, error, setError, setLoading, history)}\r\n                        className='cursor-pointer mb-3 bg-green-500 hover:bg-green-400 py-1 px-6 rounded text-white'\r\n                    >    \r\n                        {signup ? 'Signup' : 'Login' }\r\n                        {/* {' '}{window.innerWidth} */}\r\n                    </span>\r\n                    :\r\n                    <span className=''>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n            </div>\r\n            {!token && <GoogleAuth\r\n                error={error}\r\n                setError={setError}\r\n                loading={loading}\r\n                setLoading={setLoading}\r\n            />}\r\n            {/* <LinkedinAuth /> */} \r\n            <div className='mt-7 mb-6 text-xs'>\r\n                    {signup ? 'Already signed up ?' : 'Not registered ?' }\r\n                    <span className='hover:bg-purple-400 bg-purple-500 ml-2 p-1 rounded text-white font-bold cursor-pointer' onClick={handleSignupMode}> \r\n                        {signup ? ' Switch to Login' : ' Switch to Signup!' }\r\n                    </span>\r\n            </div>\r\n          <img \r\n            src={chat}\r\n            alt='CHat'\r\n            className=''\r\n            style={{borderRadius: '5', width: '100'}}\r\n          />\r\n            <p className=\"text-white-400 bold flex text-center\"><CgCopyright /> Twitee</p>         \r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\n// import Loader from \"react-loader-spinner\";\r\nimport { FaCamera } from \"react-icons/fa\";\r\n\r\nexport default function AttachImage({imageUrl, setImageUrl}) {\r\n    \r\n    const [uploading, setUploading] = useState(\"\");\r\n    const [imgUrl, setImgUrl] = useState(\"\");\r\n\r\n    const handleImage = async(e) => {\r\n        setUploading(\"loading\");\r\n        const serviceImage = e.target.files[0];\r\n        const data = new FormData();\r\n        const url = \"https://api.cloudinary.com/v1_1/thevetdoctor/image/upload\";\r\n        data.append(\"file\", serviceImage);\r\n        data.append(\"upload_preset\", \"zunt8yrw\");\r\n        const res = await fetch(url, {\r\n          method: \"POST\",\r\n          body: data\r\n        });\r\n        const imgLink = await res.json();\r\n        setImgUrl(imgLink.secure_url);\r\n        setImageUrl(imgLink.secure_url);\r\n        // const images = [imgLink.secure_url, ...serviceImages];\r\n        // setServiceImages(images);\r\n        setUploading(\"done\");\r\n      }\r\n    return (\r\n        <div className=\"flex p-1 rounded ml-1\">\r\n            {imgUrl ? \r\n                <img \r\n                    src={imgUrl} alt='post' style={{width: '20em', height: '9em'}} className='rounded'\r\n                /> :\r\n                <>\r\n                {/* <span className='ml-3 cursor-pointer flex'><FaCamera size={25}  /> */}\r\n                <label className='ml-2 cursor-pointer flex'><FaCamera size={25} /> <span className='font-semibold ml-2 text-white pr-2'></span>\r\n\r\n                <input \r\n                    type=\"file\"\r\n                    placeholder=\"\"\r\n                    accept=\"image/*;capture\"\r\n                    className=\"hidden\"\r\n                    onChange={e => handleImage(e)}\r\n                    />\r\n                    </label>\r\n                {/* <span className='ml-2'>Add Image</span> */}\r\n                {/* </span> */}\r\n                </>\r\n            //   {uploading === \"loading\" &&\r\n            //   <Loader \r\n            //       type='TailSpin'\r\n            //       color='#000'\r\n            //       height={20} \r\n            //       width={20} \r\n            //   />}\r\n            //   {/* {<FaCheck />} */}\r\n            }</div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport { baseUrl } from '../helper';\r\nimport AttachImage from './AttachImage';\r\n\r\nexport default function TwitForm(props) {\r\n    const [title, setTitle] = useState(localStorage.getItem('twitTitle') ? localStorage.getItem('twitTitle') : '');\r\n    const [text, setText] = useState(localStorage.getItem('twitText') ? localStorage.getItem('twitText') : '');\r\n    const [imageUrl, setImageUrl] = useState(localStorage.getItem('twitImage') ? localStorage.getItem('twitImage') : '');\r\n    const [textArea, setTextArea] = useState(550);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const token = localStorage.getItem('token'); \r\n    \r\n    const apiUrl = `${baseUrl}/twits/post`; \r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'title') {\r\n            setTitle(e.target.value);\r\n            localStorage.setItem('twitTitle', e.target.value)\r\n        } else {\r\n            setText(e.target.value);\r\n            setTextArea(160 - e.target.value.length)\r\n            localStorage.setItem('twitText', e.target.value)\r\n        }\r\n    }\r\n\r\n    const sendTwit = async() => {\r\n            if(!(title && text)) {\r\n                if(!title) {\r\n                    setError('Title is required');\r\n                    return;\r\n                }\r\n                setError('Inputs required');\r\n                return;\r\n            }\r\n            setLoading(true);\r\n            const res = await axios({\r\n                method: 'POST',\r\n                url: `${apiUrl}`,\r\n                data: {title, text, imageUrl},\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                        setError(error.response.data.error);\r\n                });\r\n                if(res && res.data.success) {\r\n                    setLoading(false);\r\n                    localStorage.removeItem('twitTitle');\r\n                    localStorage.removeItem('twitText');\r\n                    props.setSync(!props.sync);\r\n                    props.showForm();\r\n                } else {\r\n                    setLoading(false);\r\n                }\r\n    }\r\n\r\n    return (\r\n        <div className='sticky w-full h-full bg-gray-200 p-1 -mb-2'>\r\n            <div className='text-center bg-blue-200 mt-3 pt-3 mb-1 pb-1 rounded'>\r\n            <h1 className='font-semibold text-md mb-3'>\r\n                New twit\r\n            </h1>\r\n            <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', borderRadius: '20%'}}>\r\n\r\n            <input \r\n                type='text'\r\n                name='title'\r\n                value={title} \r\n                placeholder='title'\r\n                onChange={handleChange}\r\n                className='px-3 py-1 rounded text-lg mb-2 font-bold'\r\n                style={{width: '16em', border: 'none'}}\r\n                required\r\n                />\r\n            <textarea \r\n                type='textarea'\r\n                name='text'\r\n                rows={4}\r\n                cols={3}\r\n                style={{width: '16em', height: `${imageUrl ? '5em' : '13em'}`, border: 'none'}}\r\n                maxLength={550}\r\n                value={text}\r\n                overflow=\"hidden\"\r\n                placeholder='Drop in your twit ...' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-1 text-lg text-black font-bold'\r\n                required\r\n            />\r\n                <span style={{display: 'flex', width: '20em'}} className='justify-between px-3 mt-2 mb-2 ml-4 mr-2'>\r\n                    <AttachImage imageUrl={imageUrl} setImageUrl={setImageUrl} />\r\n                <span className='mr-6'>{textArea}</span>\r\n                </span>\r\n                </div>\r\n            <div style={{flexDirection: 'column'}} className='flex mb-5'>\r\n                {error && <span className='mb-2 text-red-800 text-md'>{error}</span>}\r\n                <div className='justify-items-center mt-2'>\r\n                    {!loading ?\r\n                    <>\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={() => props.showForm()}\r\n                        className='hover:bg-gray-900 bg-gray-400 text-lg font-medium p-1 rounded text-white'\r\n                        >    \r\n                        Cancel\r\n                    </span>\r\n\r\n                    <span \r\n                    style={{cursor: 'pointer'}}\r\n                    onClick={sendTwit}\r\n                    className='hover:bg-green-900 bg-green-400 text-lg font-bold p-1 rounded text-white mx-2'\r\n                    >    \r\n                        Send\r\n                    </span>\r\n                    </>\r\n                    :\r\n                    <span className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport { baseUrl } from '../helper';\r\n\r\nexport default function CommentForm(props) {\r\n    const [text, setText] = useState('');\r\n    const [textArea, setTextArea] = useState(160);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const token = localStorage.getItem('token'); \r\n    \r\n    const apiUrl = `${baseUrl}/comments`; \r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'text') {\r\n            setText(e.target.value);\r\n            setTextArea(160 - e.target.value.length)\r\n        }\r\n    }\r\n\r\n    const sendComment = async() => {\r\n        if(!props.twitId) return;\r\n        if(!text) {\r\n            setError('Inputs required');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        const res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}/${props.twitId}`,\r\n            data: {text},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .catch(error => {\r\n                    setError(error.response.data.error);\r\n            });\r\n            if(res && res.data.success) {\r\n                setLoading(false);\r\n                props.setSync(!props.sync);\r\n                props.showCommentForm();\r\n            } else {\r\n                setLoading(false);\r\n            }\r\n    }\r\n\r\n    return (\r\n        <div className='text-center pt-4'>\r\n             <p style={{fontSize: '0.9em'}} className='font-bold text-xs mb-3'>\r\n                New Comment\r\n            </p>\r\n            <textarea \r\n                type='textarea'\r\n                name='text'\r\n                rows={5}\r\n                cols={8}\r\n                maxLength={160}\r\n                style={{width: '15em', height: '8em'}}\r\n                value={text} \r\n                placeholder='Drop in your comment ...' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5 h-20 text-md text-gray-600'\r\n                required\r\n            /><br/>\r\n            {textArea}\r\n            <div style={{flexDirection: 'column'}} className='flex mb-5'>\r\n                {error && <span className='mb-2 text-red-800 text-xs'>{error}</span>}\r\n                <div className='justify-items-center'>\r\n                    <span \r\n                        style={{cursor: 'pointer', fontSize: '0.9em'}}\r\n                        onClick={() => props.showCommentForm()}\r\n                        className='hover:bg-gray-900 bg-gray-400 font-medium p-1 rounded text-white'\r\n                    >    \r\n                        Cancel\r\n                    </span>\r\n\r\n                    {!loading ?\r\n                    <span \r\n                        style={{cursor: 'pointer', fontSize: '0.9em'}}\r\n                        onClick={sendComment}\r\n                        className='hover:bg-green-900 text-lg bg-green-400 font-medium p-1 rounded text-white mx-2'\r\n                    >    \r\n                        Send\r\n                    </span>\r\n                    :\r\n                    <span className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const actions = {\r\n    setTwitData: { type: 'SET_TWIT_DATA'},\r\n    setUserCount: { type: 'SET_USER_COUNT'},\r\n    setPeopleData: { type: 'SET_PEOPLE_DATA'},\r\n    setSearchData: { type: 'SET_SEARCH_DATA'},\r\n    setUsersData: { type: 'SET_USERS_DATA'},\r\n    setNewsType: { type: 'SET_NEWS_TYPE'},\r\n    setPage: { type: 'SET_PAGE'},\r\n    setTotalPages: { type: 'SET_TOTAL_PAGES'},\r\n    setSearchQuery: { type: 'SET_SEARCH_QUERY'},\r\n    setNetworkStatus: { type: 'SET_NETWORK_STATUS'}\r\n  }\r\n  \r\n  export default actions;\r\n  ","import actions from \"./actions\";\r\n\r\nexport default function reducer(state= initialState, action) {\r\n    switch(action.type) {\r\n        case actions.setTwitData.type:\r\n\r\n            return {\r\n              ...state,\r\n              twits: action.data\r\n            }          \r\n        case actions.setPeopleData.type:\r\n\r\n            return {\r\n              ...state,\r\n              peopleData: action.data\r\n            }          \r\n        case actions.setSearchData.type:\r\n\r\n            return {\r\n              ...state,\r\n              searchData: action.data\r\n            }          \r\n        case actions.setUsersData.type:\r\n\r\n            return {\r\n              ...state,\r\n              usersData: action.data\r\n            }          \r\n        case actions.setUserCount.type:\r\n\r\n            return {\r\n              ...state,\r\n              users: action.data\r\n            }          \r\n        case actions.setNewsType.type:\r\n            const newsByType = state.newsData.filter(type => (type.type === action.data));\r\n\r\n            return {\r\n              ...state,\r\n              newsType: action.data, news: newsByType, searchQuery: '', page: 1, totalPages: Math.ceil(newsByType.length / state.pageSize)\r\n            }          \r\n            case actions.setPage.type:\r\n            return {\r\n                ...state,\r\n                page: action.data\r\n            }                   \r\n            case actions.setTotalPages.type:\r\n            return {\r\n                ...state,\r\n                totalPages: action.data\r\n            }                   \r\n            case actions.setSearchQuery.type:\r\n                let newsBySearch;\r\n                if(state.newsType === 'Filter By Type') {\r\n                    if(action.data === '') {\r\n                        newsBySearch = state.newsData;\r\n                    } else {\r\n                        newsBySearch = state.newsData.filter(item => {\r\n                            return item?.text?.toLowerCase().indexOf(action.data.toLowerCase()) >= 0;\r\n                        });\r\n                    }\r\n                } else {\r\n                    newsBySearch = state.newsData.filter(item => (item?.text?.toLowerCase().indexOf(action.data.toLowerCase()) >= 0) && (item.type === state.newsType));\r\n                }\r\n                    \r\n                return {\r\n                    ...state,\r\n                    searchQuery: action.data, news: newsBySearch, page: 1, totalPages: Math.ceil(newsBySearch.length / state.pageSize)\r\n                }                   \r\n            case actions.setNetworkStatus.type:\r\n                \r\n            return {\r\n                ...state,\r\n                networkStatus: action.data\r\n            }                   \r\n            default:\r\n                return state;\r\n    }\r\n};\r\n \r\nexport const initialState = {\r\n    twits: [],\r\n    users: 0,\r\n    peopleData: [],\r\n    searchData: [],\r\n    usersData: [],\r\n    searchQuery: '',\r\n    networkStatus: false\r\n};\r\n","import { createStore } from 'redux';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer, devToolsEnhancer());\r\n\r\nexport default store;","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/jsx-no-target-blank  */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { BsPersonFill, BsChatText } from 'react-icons/bs';\r\nimport { AiTwotoneDelete, AiFillHome } from 'react-icons/ai';\r\nimport { IoIosPeople } from 'react-icons/io';\r\nimport { MdContentCopy } from 'react-icons/md';\r\nimport { BiLike } from 'react-icons/bi';\r\nimport { GrEdit } from 'react-icons/gr';\r\nimport { RiChatNewLine } from 'react-icons/ri';\r\nimport TwitForm from './TwitForm';\r\nimport CommentForm from './CommentForm';\r\nimport { baseUrl, frontendUrl } from '../helper';\r\nimport { Logout } from './GoogleAuth';\r\nimport Loader from 'react-loader-spinner';\r\nimport store from '../redux/store';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Twits() {\r\n    const [error, setError] = useState('');\r\n    const [formActive, setFormActive] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n\r\n    const {getState, dispatch} = store;\r\n    const state = getState();\r\n    const { twits, users, searchQuery, networkStatus } = useSelector(state => state);\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const userId = localStorage.getItem('email') ? localStorage.getItem('userId') : '';\r\n    const img = localStorage.getItem('img') ? localStorage.getItem('img') : '';\r\n    const history = useHistory();\r\n    const token = localStorage.getItem('token');\r\n\r\n    const apiUrl = `${baseUrl}/twits`;\r\n\r\n    const showForm = () => {\r\n        setFormActive(!formActive);\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        history.push('/');\r\n    }\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    setError(error.response?.data?.error);\r\n                }\r\n            });\r\n            setSync(!sync);\r\n    }\r\n\r\n    const getTwits = async() => {\r\n        if(!token) {\r\n            return;\r\n        }\r\n        const res = await axios({\r\n            method: 'GET',\r\n            url: `${apiUrl}`,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    setError(error.response?.data?.error);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                dispatch({\r\n                    type: 'SET_TWIT_DATA',\r\n                    data: res.data.data\r\n                });\r\n                localStorage.setItem('twits', JSON.stringify(res.data.data.map(x => {\r\n                    x.formActive = false;\r\n                    return x;\r\n                })));\r\n            } else {\r\n                setError('Please check your network');\r\n                dispatch({\r\n                    type: 'SET_TWIT_DATA',\r\n                    data: JSON.parse(localStorage.getItem('twits'))\r\n                });\r\n            }\r\n    }\r\n\r\n    const getUsers = async() => {\r\n        const res = await axios({\r\n            method: 'GET',\r\n            url: `${baseUrl}/auth/users`,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    setError(error.response?.data?.error);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                dispatch({\r\n                    type: 'SET_USER_COUNT',\r\n                    data: res.data.data.count\r\n                });\r\n                localStorage.setItem('userCount', res.data.data.count);\r\n            } else {\r\n                setError('Error found');\r\n                setError('Please check your network');\r\n                dispatch({\r\n                    type: 'SET_USER_COUNT',\r\n                    data: JSON.parse(localStorage.getItem('userCount'))\r\n                });\r\n            }\r\n    }\r\n\r\n    const checkOpenForms = () => {\r\n        let closedTwits = twits.map(twit => {\r\n            twit.formActive = false;\r\n            return twit;\r\n        });\r\n    }\r\n\r\nuseEffect(() => {\r\n    if(!token) {\r\n        history.push('/');\r\n    }\r\n    getUsers();\r\n    return () => {\r\n    }\r\n}, []);\r\n\r\nuseEffect(() => {\r\n    if(!token) {\r\n        history.push('/');\r\n    }\r\n    getUsers();\r\n    return () => {\r\n    }\r\n}, []);\r\n\r\nuseEffect(async() => {\r\n    getTwits();\r\n\r\n    return () => {\r\n    }\r\n}, [sync]);\r\n\r\nuseEffect(() => {\r\n    setTimeout(() => {\r\n        const id = window.location.hash.replace('#', '');\r\n        const element = document.getElementById(id);\r\n        if (element) element.scrollIntoView();\r\n      }, 0);\r\n});\r\n\r\n    return (\r\n        <div style={{fontFamily: 'Roboto', fontWeight: '600', height: '90vh'}} className='mb-5 p-3'>\r\n            <span style={{cursor: 'pointer', borderRadius: '50%'}} className='fixed bottom-16 right-4 bg-green-500 p-4 text-white'><RiChatNewLine size={25} onClick={showForm} /></span>\r\n            {formActive && <TwitForm error={error} showForm={showForm} sync={sync} setSync={setSync}/>}\r\n            \r\n            {!formActive && \r\n            <div>\r\n                <p style={{fontFamily: 'Architects Daughter', fontWeight: '300'}} className='italic text-center mb-2'>\r\n                    <span style={{fontSize: '1.8em'}} className='text-purple-900 font-bold'>Twitee<br/>\r\n                    </span> \r\n                    <span style={{fontSize: '1em'}}> Feel free, express yourself & network </span>\r\n                </p>\r\n                <div className='py-2 px-2 rounded mb-4 flex justify-between border-3 border shadow-md'>\r\n                    {img !== 'null' ? (\r\n                        <span className='cursor-pointer'  onClick= {e => history.push(`/${email.split('@')[0]}`)}>\r\n                            {error ? <BsPersonFill size={25} />:\r\n                            <img src={img} alt='Profile' style={{width: '30px', height: '30px', borderRadius: '50%'}} />}\r\n                        </span>) \r\n                        : <span className='text-left'><AiFillHome size={25} /></span>}\r\n                    {users > 0 && <span className='text-left flex cursor-pointer'  onClick= {e => history.push('people')}><IoIosPeople size={30}/><span className='pt-1 pl-1'>{users}</span></span>}\r\n                    \r\n                    <span style={{cursor: 'pointer'}} className='text-right' onClick={logout}><Logout />\r\n                    </span>\r\n                </div>\r\n                {error && <div style={{fontFamily: 'Roboto', backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 m-1 rounded'>Please check your network !</div>}\r\n\r\n                <div className=''>\r\n                {\r\n                    twits.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()).map((twit, idx) => \r\n                        <Twit key={idx} twit={twit} email={email} userId={userId} apiCallHook={apiCallHook} baseUrl={baseUrl} frontendUrl={frontendUrl} sync={sync} setSync={setSync} showForm={showForm} formActive={formActive} checkOpenForms={checkOpenForms} error={error} />\r\n                    )\r\n                }\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Twit = (props) => {\r\n    let { twit: {id, title, text, imageUrl, twits, likes, comments, createdAt, updatedAt }, email, userId, apiCallHook, baseUrl, frontendUrl, sync, setSync, checkOpenForms, error } = props;\r\n    const [commentFormActive, setCommentFormActive] = useState(false);\r\n    const [editLoading, setEditLoading] = useState(false);\r\n    const [likeLoading, setLikeLoading] = useState(false);\r\n    const [deleteLoading, setDeleteLoading] = useState(false);\r\n    const [storyText, setStoryText] = useState(text);\r\n    const [editForm, setEditForm] = useState(false);\r\n    const [linkCopied, setLinkCopied] = useState(false);\r\n    const [more, setMore] = useState(false);\r\n    const [viewComments, setViewComments] = useState(false);\r\n\r\n    const history = useHistory();\r\n    const filteredComments = comments.filter(comment => !comment.isDeleted);\r\n    const handleStoryChange = (e) => {\r\n        setStoryText(e.target.value);\r\n    }\r\n\r\n    let link;\r\n    if(text.search('http') >= 0) {\r\n        const http = text.split(' ').filter(x => x.search('http') >= 0);\r\n        link = http[0].split('\\n').filter(x => x.search('http') >= 0);\r\n        text = text.replace(link, '')\r\n    }\r\n    const isLiked = (() => {\r\n        const liked = likes.filter(like => like.userlikes.email === email && like.isLiked === true);\r\n       return liked.length ? true : false;\r\n    })();\r\n\r\n    const showMore = () => {\r\n        if(more) {\r\n            setMore(false);\r\n        } else {\r\n            setMore(true);\r\n        }\r\n    }\r\n\r\n    const showComments = () => {\r\n        if(viewComments) {\r\n            setViewComments(false);\r\n        } else {\r\n            setViewComments(true);\r\n        }\r\n    }\r\n\r\n    const copyTwitLink = () => {\r\n        clipboardCopy(`${frontendUrl}/#${id}`);\r\n        setTimeout(() => {\r\n            setLinkCopied(false);\r\n        }, 1000);\r\n    }\r\n\r\n    const editStory = () => {\r\n        setEditForm(!editForm);\r\n        setStoryText(text);\r\n    }\r\n   \r\n    const updateStory = () => {\r\n        apiCallHook('PATCH', `${baseUrl}/twits/${id}`, {text: storyText});\r\n        setEditLoading(true);\r\n        setTimeout(() => {\r\n            setEditLoading(false);\r\n            setEditForm(false);\r\n        }, 1000);\r\n    }\r\n    const likeCount = likes.filter(like => like.isLiked).length;\r\n    const showCommentForm = () => {\r\n        setCommentFormActive(!commentFormActive);\r\n        props.twit.formActive = !commentFormActive;\r\n    }\r\n    \r\n    const likeTwit = () => {\r\n        setLikeLoading(true);\r\n        setTimeout(() => {\r\n            setLikeLoading(false);\r\n        }, 1000);\r\n        apiCallHook('POST', `${baseUrl}/likes/like/${id}`);\r\n    }\r\n    const commentTwit = () => {\r\n        showCommentForm();\r\n    }\r\n    const deleteTwit = () => {\r\n        setDeleteLoading(true);\r\n        setTimeout(() => {\r\n            setDeleteLoading(false);\r\n        }, 1000);\r\n        apiCallHook('DELETE', `${baseUrl}/twits/${id}`);\r\n    }\r\n\r\n    const clipboardCopy = async (text) => {\r\n        if ('clipboard' in navigator) {\r\n            setLinkCopied(true);\r\n          return await navigator.clipboard.writeText(text);\r\n        } else {\r\n        }\r\n      }\r\n\r\n    return (\r\n    <div id={`${id}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-2'>\r\n            <span></span>\r\n            <span style={{fontFamily: 'Roboto Slab'}} className='text-xl font-bold self-center'>{title}</span>\r\n            <span className={!linkCopied ? 'mr-2 mb-1 invisible text-xs self-end' : 'mr-2 mb-1 text-xs self-end'}>copied</span>\r\n        </p>\r\n        <span className='text-xs mb-2 flex justify-between'>\r\n            <Moment fromNow>{createdAt}</Moment>\r\n            <span className='flex'>\r\n            {(email === twits.email) && !editForm && \r\n                <span className='cursor-pointer mr-2 text-black p-2 -mt-2 rounded-full' onClick={() => editStory()}> \r\n                    <GrEdit size={15} />\r\n                </span>\r\n            }\r\n                <span className={linkCopied ? 'flex-col rounded-full p-2 text-white bg-blue-900 cursor-pointer -mt-2 mr-1' : 'rounded-full p-2 cursor-pointer -mt-2 mr-1'} onClick={() => copyTwitLink()}> \r\n                    <MdContentCopy  size={15} />\r\n                </span>\r\n            </span>\r\n        </span>\r\n        {editForm && <div className='mb-5'>\r\n                <textarea \r\n                    className='border-gray-200 border-2 p-2 mb-2 rounded bg-white-300 focus:outline-none text-black'\r\n                    style={{width: '100%'}}\r\n                    cols={3}\r\n                    rows={4}\r\n                    maxLength={550}\r\n                    value={storyText}\r\n                    onChange={handleStoryChange}\r\n                    required={true}\r\n                    /><br />\r\n                {!editLoading ? \r\n                 <>\r\n                    <span \r\n                        className='text-xs cursor-pointer bg-gray-500 p-2 m-2 text-white rounded hover:bg-gray-400' onClick={() => editStory()}\r\n                    > \r\n                        Cancel \r\n                    </span>\r\n                    <span \r\n                    className='text-xs cursor-pointer bg-green-600 p-2 mb-2 text-white rounded hover:bg-green-400 hover:text-black' onClick={() => updateStory()}\r\n                    > \r\n                        Update Story \r\n                    </span>\r\n                </>\r\n                :\r\n                    <LoadSpan height={20} width={20} color='#00bfff' />}\r\n                </div>}\r\n\r\n        {!editForm && <div style={{fontSize: '0.9em', lineHeight: 2}} className='mt-2'>\r\n            {text.length > 100 ? text.slice(0, 100) : text}{link && <a className='underline' href={link} target='_blank'>link</a>}\r\n            {more ? \r\n                <>{text.slice(100)}\r\n                    <>{text.length > 100 && \r\n                        <span style={{color: 'gray', fontWeight: '0.3em'}} className='cursor-pointer' onClick={showMore}>\r\n                            ...<span className='underline'>See less</span>\r\n                        </span>\r\n                        }\r\n                    </>\r\n                </> :\r\n                <>\r\n                    {text.length > 100 && \r\n                        <span style={{color: 'gray', fontWeight: '0.3em'}} className='cursor-pointer' onClick={showMore}>\r\n                            ...<span className='underline'>See more</span>\r\n                        </span>\r\n                    }\r\n                </>\r\n            }\r\n        \r\n        <br />\r\n        {((new Date(updatedAt).getTime() - new Date(createdAt).getTime()) > 0) && <span className='text-xs'>Updated <Moment fromNow>{updatedAt}</Moment></span>}\r\n        </div>}\r\n        <span>\r\n            {imageUrl && <img style={{width: \"100%\"}} src={imageUrl} alt='imgurl' className='rounded h-40 md:h-80' />}\r\n        </span>\r\n        {/* likes and comments count section */}\r\n            {(likeCount > 0 || comments.length > 0) && \r\n            <div className='flex text-xs p-1 px-3 mt-1 -mx-4'>\r\n                {likeCount > 0 && <span className='mr-2'>{likeCount}{' '} {likeCount > 1 ? 'likes' : 'like'} </span>}\r\n                {filteredComments.length > 0 && <span className=''>{filteredComments.length}{' '} {filteredComments.length > 1 ? 'comments' : 'comment'} </span>}\r\n            </div>}\r\n\r\n        {/*  */}\r\n        <div style={{fontSize: '0.9em'}} className='justify-between text-gray-800 flex mt-1 pt-2 -mb-3 -ml-5 -mr-5 pt-1 border-t-2'>\r\n            <span className='mx-1 flex cursor-pointer'  onClick= {e => history.push(`/${twits.username}`)}>\r\n                {twits.imageUrl ? (\r\n                <span className='mr-1'>\r\n                    {error ? <BsPersonFill size={18}/>:\r\n                    <img src={twits.imageUrl} alt='Profile' style={{width: '20px', height: '20px', borderRadius: '50%'}} />}\r\n                </span>)\r\n                : <BsPersonFill size={18}/>}\r\n                {email === twits.email ? 'Me' : twits.username}\r\n            </span>\r\n            <span className='flex'>\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex' onClick={() => likeTwit()}>\r\n               {!likeLoading ? \r\n               <>\r\n               <span className={isLiked ? 'text-blue-500' : 'text-gray-500'}><BiLike size={20}/></span>\r\n                </>:\r\n                <LoadSpan height={20} width={18} color='#00bfff' />}\r\n            </span>\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex text-gray-500' onClick={() => commentTwit()}>\r\n                <BsChatText size={18}/>\r\n            </span>\r\n            {email === twits.email &&\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex hover:text-red-800' onClick={() => deleteTwit()}>\r\n                {!deleteLoading ? \r\n                <AiTwotoneDelete size={20} color='red'/>:\r\n                <LoadSpan height={20} width={20} color='#00bfff' />}\r\n            </span>}\r\n            </span>\r\n        </div>\r\n        {commentFormActive && <CommentForm twitId={id} showCommentForm={showCommentForm} sync={sync} setSync={setSync}/>}\r\n        \r\n        {filteredComments.length > 0 &&\r\n        <div className='mt-5'><span className='text-xs mt-4 -mb-2 cursor-pointer shadow-sm border-2 p-2' onClick={showComments}>{viewComments ? 'Hide Comments' : 'View Comments'}</span></div>\r\n        }\r\n        {viewComments && \r\n            <>{comments.length > 0 && \r\n                    (<div className='mt-4 rounded'>\r\n                        {filteredComments.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()).map((comment, idx) => (\r\n                            <Comment key={idx} comment={comment} apiCallHook={apiCallHook} email={email} userId={userId} />\r\n                        )\r\n                    )}\r\n                </div>)\r\n            }</>\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nconst Comment = (props) => {\r\n    const { comment: { id, text, usercomments, likecomments, createdAt }, email, userId, apiCallHook } = props;\r\n\r\n    const [likeLoading, setLikeLoading] = useState(false);\r\n    const [deleteLoading, setDeleteLoading] = useState(false);\r\n    const [more, setMore] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const showMore = () => {\r\n        if(more) {\r\n            setMore(false);\r\n        } else {\r\n            setMore(true);\r\n        }\r\n    }\r\n\r\n    const isLiked = (() => {\r\n        const liked = likecomments.filter(like => like.userId === userId && like.isLiked === true);\r\n       return liked.length ? true : false;\r\n    })();\r\n\r\n    const likeCount = likecomments?.filter(like => like.isLiked).length;\r\n    const likeComment = () => {\r\n        setLikeLoading(true);\r\n        setTimeout(() => {\r\n            setLikeLoading(false);\r\n        }, 1000);\r\n        apiCallHook('POST', `${baseUrl}/likecomments/like/${id}`);\r\n    }\r\n    const deleteComment = () => {\r\n        setDeleteLoading(true);\r\n        setTimeout(() => {\r\n            setLikeLoading(false);\r\n        }, 1000);\r\n        apiCallHook('DELETE', `${baseUrl}/comments/${id}`);\r\n    }\r\n\r\n    return(\r\n        <div className='border border-gray-200 shadow-lg mb-2 p-1 rounded'>\r\n            <span className='text-xs mb-2 ml-2'>\r\n            <Moment fromNow>{createdAt}</Moment>\r\n            </span>\r\n            <p style={{fontSize: '0.9em', lineHeight: 2}} className='p-2 font-semibold'>\r\n            {text.length > 100 ? text.slice(0, 100) : text}\r\n            {more ? \r\n                <>{text.slice(100)}\r\n                    <>{text.length > 100 && \r\n                        <span style={{color: 'gray', fontWeight: '0.3em'}} className='cursor-pointer' onClick={showMore}>\r\n                            ...<span className='underline'>See less</span>\r\n                        </span>\r\n                        }\r\n                    </>\r\n                </> :\r\n                <>\r\n                    {text.length > 100 && \r\n                        <span style={{color: 'gray', fontWeight: '0.3em'}} className='cursor-pointer' onClick={showMore}>\r\n                            ...<span className='underline'>See more</span>\r\n                        </span>\r\n                    }\r\n                </>\r\n            }\r\n            </p>\r\n\r\n        {/* likes and comments count section */}\r\n\r\n        {/* TODO refactor for replies count */}\r\n        {(likeCount > 0) && \r\n            <div className='flex text-xs p-1 px-3 mt-1 -mx-1'>\r\n                {likeCount > 0 && <span className='mr-2'>{likeCount}{' '} {likeCount > 1 ? 'likes' : 'like'} </span>}\r\n                {/* TODO refactor for replies count */}\r\n            </div>}\r\n\r\n        {/*  */}\r\n            <div style={{fontSize: '0.9em'}} className='flex justify-between text-gray-800 flex mt-1 mb-1 pt-2 -ml-1 -mr-1 border-t-2 border-gray-200'>\r\n                <span className='mx-1 flex cursor-pointer'  onClick= {e => history.push(`/${usercomments.username}`)}>\r\n                    {usercomments.imageUrl ? (\r\n                    <span className='mr-1'>\r\n                        {'error' ? <BsPersonFill size={20}/>:\r\n                        <img src={usercomments.imageUrl} alt='Profile' style={{width: '20px', height: '20px', borderRadius: '50%'}} />}\r\n                    </span>)\r\n                    : <BsPersonFill size={20}/>}\r\n                    {email === usercomments.email ? 'Me' : usercomments.username}\r\n                </span>\r\n                <span className='flex'>\r\n                <span style={{cursor: 'pointer'}} className='mx-2 flex' onClick={() => likeComment()}>\r\n                {!likeLoading ? \r\n                <>\r\n                <span className={isLiked ? 'text-blue-500' : 'text-gray-500'}><BiLike size={20}/></span>\r\n                    </>:\r\n                    <LoadSpan height={20} width={18} color='#00bfff' />}\r\n                </span>\r\n                {/* TODO Implement reply comment component */}\r\n             \r\n                {email === usercomments.email &&\r\n                <span style={{cursor: 'pointer'}} className='mx-2 flex hover:text-red-800' onClick={() => deleteComment()}>\r\n                    {!deleteLoading ? \r\n                    <AiTwotoneDelete size={20} color='red'/>:\r\n                    <LoadSpan height={20} width={20} color='#00bfff' />}\r\n                </span>}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const LoadSpan = ({height, width, color}) => (\r\n            <span \r\n            className='m-auto mr-4'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color={color}\r\n                        height={height} \r\n                        width={width} \r\n                        />\r\n            </span>\r\n            )","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { BsPersonFill } from 'react-icons/bs';\r\nimport { IoIosArrowBack, IoIosPeople } from 'react-icons/io';\r\nimport Moment from 'react-moment';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../helper';\r\nimport { LoadSpan } from './Twits';\r\nimport store from '../redux/store';\r\nimport { useSelector } from 'react-redux';\r\nimport { AiFillHome } from 'react-icons/ai';\r\n\r\nexport default function Profile() {\r\n    const [error, setError] = useState('');\r\n    const [ userData, setUserData ] = useState({});\r\n    const [ isFollower, setIsFollower ] = useState(false);\r\n    const [ isFollowing, setIsFollowing ] = useState(false);\r\n    const [ followerCount, setFollowerCount ] = useState(0);\r\n    const [ followingCount, setFollowingCount ] = useState(0);\r\n    const [ twitCount, setTwitCount ] = useState(0);\r\n    const [followLoading, setFollowLoading] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    let { user } = useParams();\r\n    const history = useHistory();\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const token = localStorage.getItem('token');\r\n    const {getState, dispatch} = store;\r\n    const state = getState();\r\n    const { twits } = useSelector(state => state);\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        const res = await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    setError(error.response?.data?.error);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                    if(method === 'GET') {\r\n                    dispatch({\r\n                        type: 'SET_USERS_DATA',\r\n                        data: res.data.data.users\r\n                    });\r\n                    localStorage.setItem('usersData', JSON.stringify(res.data.data.users));\r\n                    localStorage.setItem('users', JSON.stringify(res.data.data.users));\r\n                    const userTwits = twits.filter(obj => obj.twits.username === user);\r\n                    const userDataInStore = res.data.data.users.filter(obj => obj.username === user)[0];\r\n                    const followers = userDataInStore.followers.filter(user => user.follower.isFollowed);\r\n                    const following = userDataInStore.following.filter(user => user.follower.isFollowed);\r\n                    const checkIsFollower = followers.filter(user => user.email === email).length > 0;\r\n                    const checkIsFollowing = following.filter(user => user.email === email).length > 0;\r\n                    setUserData(userDataInStore);\r\n                    setFollowerCount(followers.length);\r\n                    setFollowingCount(following.length);\r\n                    setIsFollower(checkIsFollower);\r\n                    setIsFollowing(checkIsFollowing);\r\n                    setTwitCount(userTwits.length);\r\n\r\n                    setError('');\r\n                } else{\r\n                    setSync(!sync);\r\n                }\r\n            } else {\r\n                setError('Please check your network');\r\n                dispatch({\r\n                    type: 'SET_USERS_DATA',\r\n                    data: JSON.parse(localStorage.getItem('usersData'))\r\n                });\r\n                const userTwits = twits.filter(obj => obj.twits.username === user);\r\n                const userDataInStore = JSON.parse(localStorage.getItem('usersData')).filter(obj => obj.username === user)[0];\r\n                const followers = userDataInStore.followers.filter(user => user.follower.isFollowed);\r\n                const following = userDataInStore.following.filter(user => user.follower.isFollowed);\r\n                const checkIsFollower = followers.filter(user => user.email === email).length > 0;\r\n                const checkIsFollowing = following.filter(user => user.email === email).length > 0;\r\n                setUserData(userDataInStore);\r\n                setFollowerCount(followers.length);\r\n                setFollowingCount(following.length);\r\n                setIsFollower(checkIsFollower);\r\n                setIsFollowing(checkIsFollowing);\r\n                setTwitCount(userTwits.length);         \r\n            }\r\n    }\r\n\r\n    const handleFollow = () => {\r\n        setFollowLoading(true);\r\n        setTimeout(() => {\r\n            setFollowLoading(false);\r\n        }, 1000);\r\n        if(isFollower) {\r\n            apiCallHook('PATCH', `${baseUrl}/followers/unfollow`, {followerId: userData?.id});\r\n        } else {\r\n            apiCallHook('POST', `${baseUrl}/followers/follow`, {followerId: userData?.id});\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        apiCallHook('GET', `${baseUrl}/auth/users`);\r\n        return () => {\r\n        }\r\n    }, [sync]);\r\n\r\n\r\n    return (\r\n        <div id={`${user}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 h-full rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-6 border-3 border shadow-md p-2'>\r\n            <span className='cursor-pointer' onClick={() => history.goBack()}><IoIosArrowBack size={30} /></span>\r\n            {<span className='flex cursor-pointer' onClick= {e => history.push('people')}><IoIosPeople size={35}/></span>}\r\n            <span className='bg-black-400 cursor-pointer' onClick={() => history.push(\"/twits\")}><AiFillHome size={28} /></span>\r\n        </p>\r\n        <div className='mb-1'>\r\n        <>\r\n            {userData?.imageUrl ?\r\n            <span className='flex'>\r\n                    {error ? <BsPersonFill size={'1.7em'} color='black' />:\r\n                <img src={userData?.imageUrl} alt='Profile' style={{width: '2em', height: '2em', borderRadius: '50%'}} />}\r\n                <span className='text-xl font-semibold ml-2 mb-2'>{userData?.username}</span>\r\n            </span>\r\n            : \r\n            <span className='flex'>\r\n                <BsPersonFill size={30} />\r\n                <span className='text-xl font-semibold ml-2 mb-2'>{userData?.username}</span>\r\n            </span>}\r\n            </>\r\n        </div>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 mb-5 rounded'>{error}</div>}\r\n        <span className='text-sm mt-3 mb-1 flex justify-between'>\r\n            <span>\r\n                <span className=''>Member since : <Moment fromNow>{userData?.createdAt}</Moment></span><br />\r\n                {isFollowing && <span className='text-xs text-white bg-gray-500 rounded p-1 mb-3'> \r\n                    Follows you\r\n                </span>}\r\n            </span>\r\n            <span className='flex'>\r\n            {(email !== userData?.email) && \r\n                <>\r\n                {!followLoading ? \r\n                    <span className='flex flex-col'>\r\n                        <span className={'text-white bg-blue-900 rounded hover:bg-blue-400 p-1 cursor-pointer -mt-2 mr-1'} onClick={() => handleFollow()}> \r\n                        {!isFollower ? 'Follow' : 'Following'}\r\n                        </span>\r\n                        <span className={'invisible -mt-2 mr-1'}></span>\r\n                    </span>\r\n                    :\r\n                    <LoadSpan height={20} width={20} color='' />}\r\n                </>\r\n            }\r\n            </span>\r\n        </span>\r\n        <div className='flex justify-between text-sm mt-5'>\r\n            <span>\r\n                {followerCount > 0 && <span className={'text-white bg-blue-500 rounded hover:bg-blue-400 p-2 cursor-pointer mr-3'}  onClick= {e => history.push(`/follower/${user}`)}> \r\n                        {followerCount} {followerCount  > 1 ? 'followers' : 'follower'}\r\n                </span>}\r\n                {followingCount > 0 && <span className={' text-white bg-green-500 rounded hover:bg-green-400 p-2 cursor-pointer mr-3'}  onClick= {e => history.push(`/following/${user}`)}> \r\n                        {followingCount} following\r\n                </span>}\r\n                {twitCount > 0 && <span className={' text-white bg-yellow-500 rounded hover:bg-yellow-400 p-2 cursor-pointer mr-3'}  onClick= {e => history.push(`/twits/${user}`)}> \r\n                        {twitCount} {twitCount  > 1 ? 'posts' : 'post'}\r\n                </span>}\r\n            </span>\r\n           \r\n        </div>\r\n        <span>\r\n            {userData?.imageUrl ? \r\n            <>{error ? <BsPersonFill size={300} color='black' />:\r\n            <img src={userData?.imageUrl} width='100%' alt='imgurl' className='mt-3 rounded-lg' />}</>\r\n            :\r\n            <div className='flex'>\r\n                <span className='m-auto'><BsPersonFill size={300} /></span>\r\n            </div>}\r\n        </span>\r\n        \r\n        \r\n    </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n// import { FaSearch } from \"react-icons/fa\";\r\n\r\nexport default function TopSearch({searchQuery, setSearchQuery, handleChange}) {\r\n\r\n    return (\r\n        <div className=\"flex mb-2 rounded\">\r\n            <div className='flex-grow'>\r\n                <input \r\n                    type='text'\r\n                    name='top-search'\r\n                    value={searchQuery}\r\n                    placeholder='Search friends'\r\n                    required\r\n                    onChange={handleChange}\r\n                    className='p-2 text-dark-3 text-md rounded font-semibold text-center bg-white-200 w-full outline-none'\r\n                />\r\n            </div>\r\n            {searchQuery && <div className='flex text-white font-bold bg-blue-900 hover:bg-blue-500 cursor-pointer px-3 rounded items-center' onClick={() => setSearchQuery('')}>\r\n                {/* <FaSearch\r\n                    className='w-6 h-6 text-white' \r\n                /> */}\r\n                Clear\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { IoCloseCircle } from 'react-icons/io5';\r\nimport { BsPersonFill } from 'react-icons/bs';\r\nimport { IoIosArrowBack, IoIosPeople } from 'react-icons/io';\r\nimport Moment from 'react-moment';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../helper';\r\nimport { LoadSpan } from './Twits';\r\nimport TopSearch from './TopSearch';\r\nimport store from '../redux/store';\r\nimport { useSelector } from 'react-redux';\r\nimport { AiFillHome } from 'react-icons/ai';\r\n\r\nexport default function People() {\r\n    const [error, setError] = useState('');\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [ userData, setUserData ] = useState({});\r\n    // const [ searchData, setSearchData ] = useState([]);\r\n    // const [ peopleData, setPeopleData ] = useState([]);\r\n    const [ isFollower, setIsFollower ] = useState(false);\r\n    const [ isFollowing, setIsFollowing ] = useState(false);\r\n    const [ followerCount, setFollowerCount ] = useState(0);\r\n    const [ followingCount, setFollowingCount ] = useState(0);\r\n    const [followLoading, setFollowLoading] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    let { user } = useParams();\r\n    const history = useHistory();\r\n\r\n    const {getState, dispatch} = store;\r\n    const state = getState();\r\n    const { twits, users, peopleData, searchData, networkStatus } = useSelector(state => state);\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const token = localStorage.getItem('token');\r\n\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        setSearchQuery(value);\r\n      \r\n    }\r\n\r\n    const handleSearch = () => {\r\n        const searchResults = peopleData.filter(person => {\r\n            return person.username.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0;\r\n        });\r\n        dispatch({\r\n            type: 'SET_SEARCH_DATA',\r\n            data: searchResults\r\n        });\r\n        localStorage.setItem('searchData', JSON.stringify(searchResults));\r\n    }\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        const res = await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    setError(error.response?.data?.error);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                    if(method === 'GET') {\r\n                    setUserData(res.data.data.user);\r\n                    dispatch({\r\n                        type: 'SET_PEOPLE_DATA',\r\n                        data: res.data.data.users\r\n                    });\r\n                    localStorage.setItem('peopleData', JSON.stringify(res.data.data.users));\r\n                    dispatch({\r\n                        type: 'SET_SEARCH_DATA',\r\n                        data: res.data.data.users\r\n                    });\r\n                    localStorage.setItem('searchData', JSON.stringify(res.data.data.users));\r\n                    localStorage.setItem('users', JSON.stringify(res.data.data.users));\r\n                    setError('');\r\n                } else{\r\n                    setSync(!sync); \r\n                }\r\n            } else {\r\n                setError('Please check your network');\r\n                dispatch({\r\n                    type: 'SET_PEOPLE_DATA',\r\n                    data: JSON.parse(localStorage.getItem('peopleData'))\r\n                });            \r\n                dispatch({\r\n                    type: 'SET_SEARCH_DATA',\r\n                    data: JSON.parse(localStorage.getItem('peopleData'))\r\n                });            \r\n            }\r\n    }\r\n\r\n    const handleFollow = () => {\r\n        setFollowLoading(true);\r\n        setTimeout(() => {\r\n            setFollowLoading(false);\r\n        }, 1000);\r\n        if(isFollower) {\r\n            apiCallHook('PATCH', `${baseUrl}/followers/unfollow`, {followerId: userData?.id});\r\n        } else {\r\n            apiCallHook('POST', `${baseUrl}/followers/follow`, {followerId: userData?.id});\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        apiCallHook('GET', `${baseUrl}/auth/users`);\r\n        dispatch({\r\n            type: 'SET_SEARCH_DATA',\r\n            data: JSON.parse(localStorage.getItem('peopleData'))\r\n        });\r\n\r\n        return () => {\r\n        }\r\n    }, [sync]);\r\n  \r\n    useEffect(() => {\r\n        handleSearch();\r\n        \r\n        return () => {\r\n        }\r\n    }, [searchQuery]);\r\n    return (\r\n        <div id={`${user}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 h-full rounded p-5 mb-4'>\r\n        <p className='flex justify-between p-2 mb-6 border-3 border shadow-md'>\r\n            <span className='cursor-pointer text-left' onClick={() => history.goBack()}><IoIosArrowBack size={30} /></span>\r\n            {/* <span className='text-left'><IoIosPeople size={25} /></span> */}\r\n            <span style={{fontFamily: 'Roboto Slab'}} className='text-xl font-bold self-center'>People</span>\r\n            <span className='text-left bg-black-400 cursor-pointer hover:invisible' onClick={() => history.push(\"/twits\")}><AiFillHome size={28} /></span>\r\n        </p>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 m-1 rounded'>Please check your network !</div>}\r\n        <span className='text-sm mt-3 mb-5'>\r\n        </span>\r\n        <TopSearch searchQuery={searchQuery} handleChange={handleChange} setSearchQuery={setSearchQuery}/>\r\n        <div className='flex flex-col text-md'>\r\n            {searchData.sort((a, b) => a.email.localeCompare(b.email)).map((person, idx) => (\r\n                <span key={idx} \r\n                    className={'bg-gray-200 rounded hover:bg-gray-400 p-2 mb-2 cursor-pointer'} \r\n                    onClick= {() => history.push(`/${person.username}`)}\r\n                > \r\n                <span className='mx-2 flex cursor-pointer'  onClick= {e => history.push(`/${person.username}`)}>\r\n                {person.imageUrl ? (\r\n                <span className='mr-2'>\r\n                    {error ? <BsPersonFill size={'1.5em'} color='black' />:\r\n                    <img src={person.imageUrl} alt='Profile' style={{width: '1.5em', height: '1.5em', borderRadius: '50%'}} />}\r\n                </span>)\r\n                : <span className='mr-2 text-black'><BsPersonFill size={'1.5em'}/></span>}\r\n                {email === person.email ? 'Me' : person.username}\r\n            </span>\r\n                </span>\r\n            ))}\r\n        </div>\r\n        <div className='flex'>\r\n            <span className='m-auto'><IoIosPeople size={300} /></span>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { IoCloseCircle } from 'react-icons/io5';\r\nimport { BsPersonFill } from 'react-icons/bs';\r\nimport { IoIosArrowBack, IoIosPeople } from 'react-icons/io';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../helper';\r\nimport { LoadSpan } from './Twits';\r\nimport TopSearch from './TopSearch';\r\nimport { AiFillHome } from 'react-icons/ai';\r\n\r\nexport default function Follower() {\r\n    const [error, setError] = useState('');\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [ userData, setUserData ] = useState({});\r\n    const [ searchData, setSearchData ] = useState([]);\r\n    const [ peopleData, setPeopleData ] = useState([]);\r\n    const [followLoading, setFollowLoading] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    let { user } = useParams();\r\n    const history = useHistory();\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const token = localStorage.getItem('token');\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        setSearchQuery(value);  \r\n    }\r\n\r\n    const handleSearch = () => {\r\n        const searchResults = peopleData.filter(person => {\r\n            return person.username.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0;\r\n        });\r\n        setSearchData(searchResults);\r\n    }\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        const res = await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                    if(method === 'GET') {\r\n                    setUserData(res.data.data.user);\r\n                    setPeopleData(res.data.data.users);\r\n                    setSearchData(res.data.data.users);\r\n                    localStorage.setItem('users', JSON.stringify(res.data.data.users));\r\n                    setError('');\r\n                } else{\r\n                    setSync(!sync); \r\n                }\r\n            } else {\r\n                setError('Please check your network');\r\n            }\r\n    }\r\n\r\n    const handleFollow = () => {\r\n        setFollowLoading(true);\r\n        setTimeout(() => {\r\n            setFollowLoading(false);\r\n        }, 1000);\r\n            apiCallHook('PATCH', `${baseUrl}/followers/unfollow`, {followerId: userData?.id});\r\n    }\r\n  \r\n    useEffect(() => {\r\n        handleSearch();\r\n        \r\n        return () => {\r\n        }\r\n    }, [searchQuery]);\r\n    \r\n    useEffect(() => {\r\n        const userDataInStore = JSON.parse(localStorage.getItem('users')).filter(obj => obj.username === user)[0];\r\n        const followers = userDataInStore.followers.filter(user => user.follower.isFollowed);\r\n        setUserData(userDataInStore);\r\n        setSearchData(followers);\r\n        setPeopleData(followers);\r\n    }, []);\r\n    \r\n    return (\r\n        <div id={`${user}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 h-full rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-6 p-2 border-3 border shadow-md'>\r\n            <span className='cursor-pointer' onClick={() => history.goBack()}><IoIosArrowBack size={30} /></span>\r\n            {/* <span className='cursor-pointer' onClick= {e => history.push(`/${userData?.username}`)}> */}\r\n            {/* {userData?.imageUrl ?\r\n            <span>\r\n                <img src={userData?.imageUrl} alt='Profile' style={{width: '2em', height: '2em', borderRadius: '50%'}} />\r\n            </span>\r\n            : \r\n            <span className=''><BsPersonFill size={25} /></span>} */}\r\n            {/* </span> */}\r\n            <span className='text-xl font-bold -ml-8'>Followers</span>\r\n            <span className='text-left bg-black-400 cursor-pointer hover:invisible' onClick={() => history.push(\"/twits\")}><AiFillHome size={28} /></span>\r\n        </p>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 m-1 rounded'>Please check your network !</div>}\r\n        <span className='text-sm mt-3 mb-5'>\r\n        </span>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 mb-5 rounded'>{error}</div>}\r\n        <div className='mb-1'>\r\n        <>\r\n            {userData?.imageUrl ?\r\n            <span className='flex'>\r\n                    {error ? <BsPersonFill size={'1.7em'} color='black' />:\r\n                <img src={userData?.imageUrl} alt='Profile' style={{width: '2em', height: '2em', borderRadius: '50%'}} />}\r\n                <span className='text-xl font-semibold ml-2 mb-2'>{userData?.username}</span>\r\n            </span>\r\n            : \r\n            <span className='flex'>\r\n                <BsPersonFill size={30} />\r\n                <span className='text-xl font-semibold ml-2 mb-2'>{userData?.username}</span>\r\n            </span>}\r\n            </>\r\n        </div>\r\n        <TopSearch searchQuery={searchQuery} handleChange={handleChange} setSearchQuery={setSearchQuery}/>\r\n        <div className='flex flex-col text-md'>\r\n            {searchData.sort((a, b) => a.email.localeCompare(b.email)).map((person, idx) => (\r\n                <span key={idx} \r\n                    className={'bg-gray-200 rounded hover:bg-gray-400 p-2 mb-2 cursor-pointer'} \r\n                    onClick= {() => history.push(`/${person.username}`)}\r\n                > \r\n                <span className='mx-2 flex cursor-pointer'  onClick= {e => history.push(`/${person.username}`)}>{error}\r\n                {person.imageUrl ? (\r\n                <span className='mr-2'>\r\n                    {error ? <BsPersonFill size={'1.5em'} color='black' />:\r\n                    <img src={person.imageUrl} alt='Profile' style={{width: '1.5em', height: '1.5em', borderRadius: '50%'}} />}\r\n                </span>)\r\n                : <span className='mr-2 text-black'><BsPersonFill size={'1.5em'}/></span>}\r\n                {email === person.email ? 'Me' : person.username}{error}\r\n            </span>\r\n                </span>\r\n            ))}\r\n        </div>\r\n        <div className='flex'>\r\n            <span className='m-auto'><IoIosPeople size={300} /></span>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { IoCloseCircle } from 'react-icons/io5';\r\nimport { BsPersonFill } from 'react-icons/bs';\r\nimport { IoIosArrowBack, IoIosPeople } from 'react-icons/io';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../helper';\r\nimport { LoadSpan } from './Twits';\r\nimport TopSearch from './TopSearch';\r\nimport { AiFillHome } from 'react-icons/ai';\r\n\r\nexport default function Following() {\r\n    const [error, setError] = useState('');\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [ userData, setUserData ] = useState({});\r\n    const [ searchData, setSearchData ] = useState([]);\r\n    const [ peopleData, setPeopleData ] = useState([]);\r\n    const [followLoading, setFollowLoading] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    let { user } = useParams();\r\n    const history = useHistory();\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const token = localStorage.getItem('token');\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        setSearchQuery(value);  \r\n    }\r\n\r\n    const handleSearch = () => {\r\n        const searchResults = peopleData.filter(person => {\r\n            return person.username.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0;\r\n        });\r\n        setSearchData(searchResults);\r\n    }\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        const res = await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                    if(method === 'GET') {\r\n                    setUserData(res.data.data.user);\r\n                    setPeopleData(res.data.data.users);\r\n                    setSearchData(res.data.data.users);\r\n                    localStorage.setItem('users', JSON.stringify(res.data.data.users));\r\n                    setError('');\r\n                } else{\r\n                    setSync(!sync); \r\n                }\r\n            } else {\r\n                setError('Please check your network');\r\n            }\r\n    }\r\n\r\n    const handleFollow = () => {\r\n        setFollowLoading(true);\r\n        setTimeout(() => {\r\n            setFollowLoading(false);\r\n        }, 1000);\r\n            apiCallHook('PATCH', `${baseUrl}/followers/unfollow`, {followerId: userData?.id});\r\n    }\r\n  \r\n    useEffect(() => {\r\n        handleSearch();\r\n        \r\n        return () => {\r\n        }\r\n    }, [searchQuery]);\r\n    \r\n    useEffect(() => {\r\n        const userDataInStore = JSON.parse(localStorage.getItem('users')).filter(obj => obj.username === user)[0];\r\n        const following = userDataInStore.following.filter(user => user.follower.isFollowed);\r\n        setUserData(userDataInStore);\r\n        setSearchData(following);\r\n        setPeopleData(following);\r\n    }, []);\r\n    \r\n    return (\r\n        <div id={`${user}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 h-full rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-6 border-3 border shadow-md p-2'>\r\n            <span className='cursor-pointer' onClick={() => history.goBack()}><IoIosArrowBack size={30} /></span>\r\n            {/* <span className='cursor-pointer' onClick= {e => history.push(`/${userData?.username}`)}> */}\r\n            {/* {userData?.imageUrl ?\r\n            <span>\r\n                <img src={userData?.imageUrl} alt='Profile' style={{width: '2em', height: '2em', borderRadius: '50%'}} />\r\n            </span>\r\n            : \r\n            <span className=''><BsPersonFill size={25} /></span>} */}\r\n            {/* </span> */}\r\n            <span className='text-xl font-bold'>Following</span>\r\n            <span className='text-left bg-black-400 cursor-pointer hover:invisible' onClick={() => history.push(\"/twits\")}><AiFillHome size={28} /></span>\r\n        </p>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 m-1 rounded'>Please check your network !</div>}\r\n        <div className='mb-1'>\r\n        <>\r\n            {userData?.imageUrl ?\r\n            <span className='flex'>\r\n                    {error ? <BsPersonFill size={'1.7em'} color='black' />:\r\n                <img src={userData?.imageUrl} alt='Profile' style={{width: '2em', height: '2em', borderRadius: '50%'}} />}\r\n                <span className='text-xl font-semibold ml-2 mb-2'>{userData?.username}</span>\r\n            </span>\r\n            : \r\n            <span className='flex'>\r\n                <BsPersonFill size={30} />\r\n                <span className='text-xl font-semibold ml-2 mb-2'>{userData?.username}</span>\r\n            </span>}\r\n            </>\r\n        </div>\r\n        <TopSearch searchQuery={searchQuery} handleChange={handleChange} setSearchQuery={setSearchQuery}/>\r\n        <div className='flex flex-col text-md'>\r\n            {searchData.sort((a, b) => a.email.localeCompare(b.email)).map((person, idx) => (\r\n                <span key={idx} \r\n                    className={'bg-gray-200 rounded hover:bg-gray-400 p-2 mb-2 cursor-pointer'} \r\n                    onClick= {() => history.push(`/${person.username}`)}\r\n                > \r\n                <span className='mx-2 flex cursor-pointer' onClick= {e => history.push(`/${person.username}`)}>\r\n                {person.imageUrl ? (\r\n                <span className='mr-2'>\r\n                    {!error ? <BsPersonFill size={'1.5em'} color='black' />:\r\n                    <img src={person.imageUrl} alt='Profile' style={{width: '1.5em', height: '1.5em', borderRadius: '50%'}} />}\r\n                </span>)\r\n                : <span className='mr-2 text-black'><BsPersonFill size={'1.5em'}/></span>}\r\n                {email === person.email ? 'Me' : person.username}\r\n            </span>\r\n                </span>\r\n            ))}\r\n        </div>\r\n        <div className='flex'>\r\n            <span className='m-auto'><IoIosPeople size={300} /></span>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { BsPersonFill } from 'react-icons/bs';\r\nimport { IoIosArrowBack, IoIosPeople } from 'react-icons/io';\r\nimport axios from 'axios';\r\nimport { baseUrl, frontendUrl } from '../helper';\r\nimport { LoadSpan, Twit } from './Twits';\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport store from '../redux/store';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function UserTwits() {\r\n    const [error, setError] = useState('');\r\n    const [ userData, setUserData ] = useState({});\r\n    const [ twitData, setTwitData ] = useState([]);\r\n    const [sync, setSync] = useState(false);\r\n    let { user } = useParams();\r\n    const history = useHistory();\r\n\r\n    const {getState, dispatch} = store;\r\n    const state = getState();\r\n    const { twits } = useSelector(state => state);\r\n    \r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const token = localStorage.getItem('token');\r\n    const apiUrl = `${baseUrl}/twits`;\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        const res = await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                    if(method === 'GET') {\r\n                    setUserData(res.data.data.user);\r\n                    setTwitData(res.data.data.users);\r\n                    localStorage.setItem('users', JSON.stringify(res.data.data.users));\r\n                    setError('');\r\n                } else{\r\n                    setSync(!sync); \r\n                }\r\n            } else {\r\n                setError('Please check your network');\r\n            }\r\n    }\r\n\r\n    const getTwits = async() => {\r\n        if(!token) {\r\n            return;\r\n        }\r\n        const res = await axios({\r\n            method: 'GET',\r\n            url: `${apiUrl}`,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    setError(error.response?.data?.error);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                dispatch({\r\n                    type: 'SET_TWIT_DATA',\r\n                    data: res.data.data\r\n                });\r\n                localStorage.setItem('twits', JSON.stringify(res.data.data.map(x => {\r\n                    x.formActive = false;\r\n                    return x;\r\n                })));\r\n                const userTwitData = res.data.data.filter(obj => obj.twits.username === user);\r\n                setUserData(userTwitData[0]?.twits);\r\n                setTwitData(userTwitData);\r\n            } else {\r\n                setError('Please check your network');\r\n                dispatch({\r\n                    type: 'SET_TWIT_DATA',\r\n                    data: JSON.parse(localStorage.getItem('twits'))\r\n                });\r\n            }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const userTwitData = twits.filter(obj => obj.twits.username === user);\r\n        setUserData(userTwitData[0]?.twits);\r\n        setTwitData(userTwitData);\r\n    }, []);\r\n    \r\n    useEffect(async() => {\r\n        getTwits();\r\n    \r\n        return () => {\r\n        }\r\n    }, [sync]);\r\n\r\n    return (\r\n        <div id={`${user}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 h-full rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-6 border-3 border shadow-md p-2'>\r\n        <span className='cursor-pointer text-left' onClick={() => history.goBack()}><IoIosArrowBack size={30} /></span>\r\n            <span className='text-xl font-bold self-center'>Twits</span>\r\n            <span className='text-left bg-black-400 cursor-pointer hover:invisible' onClick={() => history.push(\"/twits\")}><AiFillHome size={28} /></span>\r\n        </p>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 m-1 rounded'>Please check your network !</div>}\r\n        <div className='mb-1'>\r\n        <>\r\n            {userData?.imageUrl ?\r\n            <span className='flex'>\r\n                    {error ? <BsPersonFill size={'1.7em'} color='black' />:\r\n                <img src={userData?.imageUrl} alt='Profile' style={{width: '2em', height: '2em', borderRadius: '50%'}} />}\r\n                <span className='text-xl font-semibold ml-2 mb-2'>{userData?.username}</span>\r\n            </span>\r\n            : \r\n            <span className='flex'>\r\n                <BsPersonFill size={30} />\r\n                <span className='text-xl font-semibold ml-2 mb-2'>{userData?.username}</span>\r\n            </span>}\r\n            </>\r\n        </div>\r\n        <div style={{fontFamily: 'Roboto'}} className='text-md'>\r\n        {\r\n                    twitData.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()).map((twit, idx) => \r\n                        <div  key={idx} style={{backgroundColor: 'white', fontWeight: 'bold'}}>\r\n                            <Twit key={idx} twit={twit} email={email} apiCallHook={apiCallHook} baseUrl={baseUrl} frontendUrl={frontendUrl} sync={sync} setSync={setSync} />\r\n                        </div>\r\n                    )\r\n                }\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Posts from \"./components/Posts\";\nimport Twits from './components/Twits';\nimport Profile from './components/Profile';\nimport People from './components/People';\nimport Follower from './components/Followers';\nimport Following from './components/Following';\nimport UserTwits from './components/UserTwits';\nimport store from './redux/store';\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n    const [loggedIn, setLoggedIn] = useState(JSON.parse(localStorage.getItem('loggedIn')));\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')) || false);\n    \n    const {getState, dispatch} = store;\n    const state = getState();\n    const { searchQuery, networkStatus } = useSelector(state => state);\n    // console.log(state);\n\n    useEffect(() => {\n      if(navigator.onLine) {\n        dispatch({\n          type: 'SET_NETWORK_STATUS',\n          data: true\n        });\n      } else {\n        dispatch({\n          type: 'SET_NETWORK_STATUS',\n          data: false\n        });\n      } \n    }, []);\n\n      const username = localStorage.getItem('username');\n      Notification.requestPermission().then((result) => {\n        if (result === 'granted') {\n          // randomNotification();\n        }\n      });\n\n    function randomNotification() {\n      const notifTitle = username ? `Hello, ${username}` : 'Hello !';\n      const notifBody = `Have you checked Twitee today?`;\n      const notifImg = `https://res.cloudinary.com/thevetdoctor/image/upload/v1599332593/g1rozhabxswegvhp59h3.jpg`;\n      const options = {\n        body: notifBody,\n        icon: notifImg,\n      };\n      new Notification(notifTitle, options);\n      setTimeout(randomNotification, 3 * 60 * 60 * 1000);\n    }\n  return (\n    <Router>\n        {/* <div className=\"h-full w-full m-0 max-w-sm mx-auto bg-blue-200 rounded-xl shadow-md flex\"> */}\n        {/* <div className=\"font-Roboto w-full m-0 max-w-xl max-h-xl my-0 mx-auto rounded-xl shadow-md -px-3\"> */}\n              {/* <div className=\"bg-gray-200 rounded-xl p-4\"> */}\n      <Switch>\n              <Route exact path=\"/\" component={Posts} />\n              <Route exact path=\"/twits\" component={Twits} />\n              <Route exact path=\"/people\" component={People} />\n              <Route path=\"/twits/:user\" component={UserTwits} />\n              <Route path=\"/following/:user\" component={Following} />\n              <Route path=\"/follower/:user\" component={Follower} />\n              <Route path=\"/:user\" component={Profile} />\n      </Switch>\n          {/* </div>ff */}\n        {/* </div>  */}\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst publicVapid = 'BNjjQs4mQL339-Dk2i5HF5jbv14xHn-jHrPbTa1LJ-HZZXZnArYQfR7ddcdB0oQ0ADQjgx8q_nN_cTW7jOq9k6Y';\nconst {baseUrl} = require('./helper');\n\nconst urlBase64ToUint8Array = (base64String) => {\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\n    const base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n\n    const rawdata = window.atob(base64);\n    const outputArray = new Uint8Array(rawdata.length);\n\n    for(let i = 0; i < rawdata.length; ++i) {\n        outputArray[i] = rawdata.charCodeAt(i);\n    }\n    return outputArray;\n}\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  console.log('Registering service worker');\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(async (registration) => {\n\n      console.log('Service worker registered');\n\n      console.log('Registering Push Manager');\n  \n      const subscription = registration.pushManager.subscribe({\n          userVisibleOnly: true,\n          applicationServerKey: urlBase64ToUint8Array(publicVapid)\n      });\n      console.log('Push Manager registered');\n  \n      console.log('Sending Push');\n  \n      // await fetch(`${baseUrl}/subscribe`, {\n      //     method: 'POST',\n      //     body: JSON.stringify(subscription),\n      //     headers: {\n      //         'content-type': 'application/json'\n      //     }\n      // });\n      console.log('Push Sent');\n\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// import reportWebVitals from './reportWebVitals';\n// import * as serviceWorker from \"./service-worker\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nserviceWorkerRegistration.register();\n","export const baseUrl = (() => {\r\n    if(window.location.host.indexOf('localhost') >= 0){\r\n    return 'http://localhost:4000';\r\n    } else {\r\n    return 'https://oba-twit.herokuapp.com';\r\n    }\r\n})();\r\n\r\nexport const frontendUrl = (() => {\r\n    if(window.location.host.indexOf('localhost') >= 0){\r\n    return 'http://localhost:3000/twits';\r\n    } else {\r\n    return 'https://peaceful-leakey-ce2e49.netlify.app/twits';\r\n    }\r\n})();"],"sourceRoot":""}