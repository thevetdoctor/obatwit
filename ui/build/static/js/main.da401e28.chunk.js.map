{"version":3,"sources":["helper.js","components/GoogleAuth.js","components/chat.jpg","components/Posts.js","components/AttachImage.js","components/TwitForm.js","components/CommentForm.js","components/Twits.js","components/Profile.js","components/TopSearch.js","components/People.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["baseUrl","dotenv","config","clientId","process","GoogleAuth","props","error","setError","setLoading","loading","useState","JSON","parse","localStorage","getItem","signup","apiUrl","history","useHistory","buttonText","onSuccess","res","console","log","authenticate","profileObj","email","name","imageUrl","onFailure","cookeiPolicy","style","marginTop","Logout","render","renderProps","size","onLogoutSuccess","a","google","password","setItem","axios","method","url","data","headers","catch","response","auth","success","user","username","token","push","Posts","setEmail","setPassword","setSignup","handleChange","e","target","value","useEffect","fontFamily","fontWeight","className","fontSize","type","placeholder","onChange","flexDirection","color","height","width","cursor","onClick","src","chat","alt","borderRadius","AttachImage","setImageUrl","setUploading","imgUrl","setImgUrl","handleImage","serviceImage","files","FormData","append","fetch","body","json","imgLink","secure_url","accept","TwitForm","title","setTitle","text","setText","textArea","setTextArea","length","sendTwit","removeItem","setSync","sync","showForm","display","alignItems","border","required","rows","cols","maxLength","overflow","CommentForm","sendComment","twitId","showCommentForm","Twits","twits","setTwits","formActive","setFormActive","users","setUsers","img","apiCallHook","isAxiosError","getTwits","map","x","stringify","getUsers","count","checkOpenForms","filter","twit","closedTwits","setTimeout","id","window","location","hash","replace","element","document","getElementById","scrollIntoView","split","backgroundColor","sort","b","Date","createdAt","getTime","idx","frontendUrl","Twit","likes","comments","updatedAt","commentFormActive","setCommentFormActive","editLoading","setEditLoading","likeLoading","setLikeLoading","deleteLoading","setDeleteLoading","storyText","setStoryText","editForm","setEditForm","linkCopied","setLinkCopied","editStory","likeCount","like","isLiked","clipboardCopy","navigator","clipboard","writeText","fromNow","comment","isDeleted","Comment","usercomments","likecomments","LoadSpan","Profile","userData","setUserData","isFollower","setIsFollower","isFollowing","setIsFollowing","followerCount","setFollowerCount","followingCount","setFollowingCount","followLoading","setFollowLoading","useParams","followers","follower","isFollowed","following","checkIsFollower","checkIsFollowing","followerId","TopSearch","searchQuery","setSearchQuery","People","searchData","setSearchData","peopleData","setPeopleData","searchResults","person","toLowerCase","indexOf","handleSearch","localeCompare","App","randomNotification","notifTitle","Notification","icon","requestPermission","then","result","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","ReactDOM","StrictMode","URL","href","origin","addEventListener","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.da401e28.chunk.js","sourcesContent":["export const baseUrl = 'https://oba-twit.herokuapp.com';\r\n// export const baseUrl = 'http://localhost:4000';\r\nexport const frontendUrl = 'https://peaceful-leakey-ce2e49.netlify.app/twits';\r\n// export const frontendUrl = 'http://localhost:3000/twits';","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\n// import GoogleButton from 'react-google-button'\r\nimport { authenticate } from './Posts';\r\nimport { baseUrl } from '../helper';\r\nimport dotenv from \"dotenv\";\r\nimport { FiLogOut } from 'react-icons/fi';\r\n\r\ndotenv.config();\r\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\n// console.log('id', clientId);\r\n\r\nexport default function GoogleAuth(props) {\r\n    const { error, setError, loading, setLoading } = props;\r\n    \r\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')));\r\n    const apiUrl = `${baseUrl}/auth/${signup ? 'signup' : 'login'}`; \r\n    const history = useHistory(); \r\n\r\n    const onSuccess = (res) => {\r\n        console.log('login suceeded');\r\n        authenticate(true, res.profileObj.email, null, apiUrl, error, setError, setLoading, history, res.profileObj.name, res.profileObj.imageUrl)\r\n    }\r\n    const onFailure = (res) => {\r\n        console.log('login failed', res);\r\n    }\r\n    return (\r\n        <div>\r\n            <GoogleLogin \r\n                clientId={clientId}\r\n                buttonText={signup ? 'Signup with Google' : 'Login with Google'}\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                // isSignedIn={true}\r\n                cookeiPolicy={'single_host_origin'}\r\n                style={{marginTop: '160px'}}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Logout = () => {\r\n    \r\n    const onSuccess = (res) => {\r\n        console.log(res, 'Logout suceeded');\r\n    }\r\n    return(\r\n    <div>\r\n              <GoogleLogout \r\n                clientId={clientId}\r\n                render={renderProps => (\r\n                    <span><FiLogOut size={25}/></span>\r\n                )}\r\n                buttonText='Signout' \r\n                onLogoutSuccess={onSuccess}\r\n                style={{marginTop: '160px'}}\r\n            />\r\n    </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/chat.7e8098f6.jpg\";","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport GoogleAuth from './GoogleAuth';\r\nimport { baseUrl } from '../helper';\r\n// import LinkedinAuth from './LinkedinAuth';\r\nimport dotenv from \"dotenv\";\r\nimport chat from './chat.jpg';\r\nimport { CgCopyright } from 'react-icons/cg';\r\n\r\ndotenv.config();\r\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\n// console.log('id', clientId, process.env);\r\n\r\nexport const authenticate = async(google = false, email, password = null, apiUrl, error, setError, setLoading, history, name, imageUrl) => {\r\n    localStorage.setItem('img', imageUrl);\r\n    setLoading(true);\r\n    let res;\r\n    if(!google) {\r\n        res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}`,\r\n            data: {email, password},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .catch(error => {\r\n            if(error.response) {\r\n                setError(error.response?.data?.error);\r\n                // setTimeout(() => {\r\n                //     setError('');\r\n                // }, 1000);\r\n            } else {\r\n                setError('Please check your network');\r\n                // setTimeout(() => {\r\n                //     setError('');\r\n                // }, 1000);\r\n            }\r\n        });\r\n    } else {\r\n        res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}`,\r\n            data: {email, password: 'passs', auth: 'google', name, imageUrl},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .catch(error => {\r\n            setError(error.response.data.error);\r\n            // setTimeout(() => {\r\n            //     setError('');\r\n            // }, 1000);\r\n        });\r\n\r\n    }\r\n        if(res && res.data.success) {\r\n            localStorage.setItem('email', email);\r\n            localStorage.setItem('img', res.data.data.user.imageUrl);\r\n            localStorage.setItem('username', res.data.data.user?.username);\r\n            localStorage.setItem('token', res.data.data.token);\r\n            setLoading(false);\r\n            history.push('/twits');\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n}\r\n\r\nexport default function Posts(props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')));\r\n    const token = localStorage.getItem('token');\r\n    const history = useHistory();\r\n//   console.log(token);\r\nconst apiUrl = `${baseUrl}/auth/${signup ? 'signup' : 'login'}`; \r\n\r\nconst handleChange = (e) => {\r\n    if(e.target.name === 'email') {\r\n        setEmail(e.target.value);\r\n    } else {\r\n        setPassword(e.target.value);\r\n    }\r\n}\r\n\r\nconst handleSignupMode = () => {\r\n    if(!signup) {\r\n        setSignup(true);\r\n        localStorage.setItem('signup', true);\r\n    } else {\r\n        setSignup(false);\r\n        localStorage.setItem('signup', false);\r\n    }\r\n}\r\n\r\nuseEffect(() => {\r\n    if(token) {\r\n        // history.push('/');\r\n        history.push('/twits');\r\n    }\r\n    return () => {\r\n    }\r\n}, []);\r\n\r\n    return (\r\n        <div style={{fontFamily: 'Roboto', fontWeight: '600'}} className='font-Roboto text-center align-items-center'>\r\n             <p style={{fontFamily: 'Architects Daughter', fontWeight: '300'}} className='italic text-center mb-2'>\r\n                <span style={{fontSize: '1.8em'}} className='text-purple-900 font-bold'>Twitee<br/>\r\n                </span> \r\n                <span style={{fontSize: '1em'}}>.... Feel free, express yourself, network ....</span>\r\n            </p>\r\n            <h1 style={{fontSize: 20}} className='font-bold text-md mb-7'>\r\n                {signup ?  'Signup' : 'Login'}\r\n            </h1>\r\n            <input \r\n                type='text'\r\n                name='email'\r\n                value={email} \r\n                placeholder='email'\r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5'\r\n                /><br/>\r\n            <input \r\n                type='password'\r\n                name='password'\r\n                value={password} \r\n                placeholder='password' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5'\r\n            /><br/>\r\n            <div style={{flexDirection: 'column'}} className='flex'>\r\n                {error && <span className='mb-2 text-red-600'>{error}</span>}\r\n                <div>\r\n                    {!loading ?\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={() => authenticate(false, email, password, apiUrl, error, setError, setLoading, history)}\r\n                        className='hover:bg-green-900 bg-green-400 font-medium p-2 rounded w-6 h-3 text-white'\r\n                    >    \r\n                        {signup ? 'Signup' : 'Login' }\r\n                    </span>\r\n                    :\r\n                    <span className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n                <span className='mt-4 mb-4'>\r\n                {signup ? 'Already signed up ?' : 'Not registered ?' }\r\n                     \r\n                <span \r\n                    className='focus:text-md font-bold cursor-pointer'\r\n                    onClick={handleSignupMode}\r\n                > \r\n                    {signup ? ' Login here' : ' Signup here!' }\r\n                </span></span>\r\n            </div>\r\n            {!token && <GoogleAuth \r\n                error={error}\r\n                setError={setError}\r\n                loading={loading}\r\n                setLoading={setLoading}\r\n            />}\r\n            {/* <LinkedinAuth /> */}\r\n            \r\n          <img \r\n            src={chat}\r\n            alt='CHat'\r\n            className=''\r\n            style={{borderRadius: '5', width: '100'}}\r\n          />\r\n            <p className=\"text-white-400 bold flex text-center\"><CgCopyright /> Twitee</p>         \r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\n// import Loader from \"react-loader-spinner\";\r\nimport { FaCamera } from \"react-icons/fa\";\r\n\r\nexport default function AttachImage({imageUrl, setImageUrl}) {\r\n    \r\n    const [uploading, setUploading] = useState(\"\");\r\n    const [imgUrl, setImgUrl] = useState(\"\");\r\n\r\n    const handleImage = async(e) => {\r\n        console.log(e.target)\r\n        setUploading(\"loading\");\r\n        const serviceImage = e.target.files[0];\r\n        const data = new FormData();\r\n        const url = \"https://api.cloudinary.com/v1_1/thevetdoctor/image/upload\";\r\n        data.append(\"file\", serviceImage);\r\n        data.append(\"upload_preset\", \"zunt8yrw\");\r\n        const res = await fetch(url, {\r\n          method: \"POST\",\r\n          body: data\r\n        });\r\n        const imgLink = await res.json();\r\n        setImgUrl(imgLink.secure_url);\r\n        setImageUrl(imgLink.secure_url);\r\n        // console.log('image uploaded' ,imgLink.secure_url);\r\n        // const images = [imgLink.secure_url, ...serviceImages];\r\n        // setServiceImages(images);\r\n        setUploading(\"done\");\r\n        // console.log(imgUrl);\r\n      }\r\n    return (\r\n        <div className=\"flex\">\r\n            {imgUrl ? \r\n                <img \r\n                    src={imgUrl} alt='post' style={{width: '20em', height: '9em'}} className='rounded'\r\n                /> :\r\n                <>\r\n                {/* <span className='ml-3 cursor-pointer flex'><FaCamera size={25}  /> */}\r\n                <label className='ml-3 cursor-pointer flex'><FaCamera size={25}  />{' '} <span className='ml-2'>Add Image</span>\r\n\r\n                <input\r\n                    type=\"file\"\r\n                    placeholder=\"\"\r\n                    accept=\"image/*;capture\"\r\n                    className=\"hidden\"\r\n                    onChange={e => handleImage(e)}\r\n                    />\r\n                    </label>\r\n                {/* <span className='ml-2'>Add Image</span> */}\r\n                {/* </span> */}\r\n                </>\r\n            //   {uploading === \"loading\" &&\r\n            //   <Loader \r\n            //       type='TailSpin'\r\n            //       color='#000'\r\n            //       height={20} \r\n            //       width={20} \r\n            //   />}\r\n            //   {/* {<FaCheck />} */}\r\n            }</div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport { baseUrl } from '../helper';\r\nimport AttachImage from './AttachImage';\r\n\r\nexport default function TwitForm(props) {\r\n    const [title, setTitle] = useState(localStorage.getItem('twitTitle') ? localStorage.getItem('twitTitle') : '');\r\n    const [text, setText] = useState(localStorage.getItem('twitText') ? localStorage.getItem('twitText') : '');\r\n    const [imageUrl, setImageUrl] = useState(localStorage.getItem('twitImage') ? localStorage.getItem('twitImage') : '');\r\n    const [textArea, setTextArea] = useState(160);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const token = localStorage.getItem('token'); \r\n    \r\n    const apiUrl = `${baseUrl}/twits/post`; \r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'title') {\r\n            setTitle(e.target.value);\r\n            localStorage.setItem('twitTitle', e.target.value)\r\n        } else {\r\n            setText(e.target.value);\r\n            setTextArea(160 - e.target.value.length)\r\n            localStorage.setItem('twitText', e.target.value)\r\n        }\r\n    }\r\n\r\n    const sendTwit = async() => {\r\n            if(!(title && text)) {\r\n                if(!title) {\r\n                    setError('Title is required');\r\n                    return;\r\n                }\r\n                setError('Inputs required');\r\n                return;\r\n            }\r\n            setLoading(true);\r\n            const res = await axios({\r\n                method: 'POST',\r\n                url: `${apiUrl}`,\r\n                data: {title, text, imageUrl},\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                        console.log(error.response);\r\n                        setError(error.response.data.error);\r\n                });\r\n                // console.log(res);\r\n                if(res && res.data.success) {\r\n                    setLoading(false);\r\n                    localStorage.removeItem('twitTitle');\r\n                    localStorage.removeItem('twitText');\r\n                    props.setSync(!props.sync);\r\n                    props.showForm();\r\n                } else {\r\n                    setLoading(false);\r\n                    console.log('Error found'); \r\n                }\r\n    }\r\n\r\n    return (\r\n        <div className='text-center sticky top-0 rounded pb-1 bg-blue-200 mt-3 pt-3 mb-1'>\r\n             <h1 style={{fontSize: '1.5em'}} className='font-bold text-base mb-3'>\r\n                New twit\r\n            </h1>\r\n            <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', borderRadius: '20%'}}>\r\n\r\n            <input \r\n                type='text'\r\n                name='title'\r\n                value={title} \r\n                placeholder='title'\r\n                onChange={handleChange}\r\n                className='px-3 py-1 rounded mb-2'\r\n                style={{width: '20em', border: 'none'}}\r\n                required\r\n                />\r\n            <textarea \r\n                type='textarea'\r\n                name='text'\r\n                rows={4}\r\n                cols={3}\r\n                style={{width: '20em', height: `${imageUrl ? '5em' : '13em'}`, border: 'none'}}\r\n                maxLength={160}\r\n                value={text}\r\n                overflow=\"hidden\"\r\n                placeholder='Drop in your twit ...' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-1 text-md text-gray-600'\r\n                required\r\n            />\r\n                <span style={{display: 'flex', width: '20em'}} className='justify-between px-3 mt-2 mb-2'>\r\n                    <AttachImage imageUrl={imageUrl} setImageUrl={setImageUrl} />\r\n                <span>{textArea}</span>\r\n                </span>\r\n                </div>\r\n            <div style={{flexDirection: 'column'}} className='flex mb-5'>\r\n                {error && <span className='mb-2 text-red-800 text-md'>{error}</span>}\r\n                <div className='justify-items-center mt-2'>\r\n                    {!loading ?\r\n                    <>\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={() => props.showForm()}\r\n                        className='hover:bg-gray-900 bg-gray-400 font-medium p-1 rounded text-white'\r\n                        >    \r\n                        Cancel\r\n                    </span>\r\n\r\n                    <span \r\n                    style={{cursor: 'pointer'}}\r\n                    onClick={sendTwit}\r\n                    className='hover:bg-green-900 bg-green-400 font-medium p-1 rounded text-white mx-2'\r\n                    >    \r\n                        Send\r\n                    </span>\r\n                    </>\r\n                    :\r\n                    <span className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport { baseUrl } from '../helper';\r\n\r\nexport default function CommentForm(props) {\r\n    const [text, setText] = useState('');\r\n    const [textArea, setTextArea] = useState(160);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const token = localStorage.getItem('token'); \r\n    \r\n    const apiUrl = `${baseUrl}/comments`; \r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'text') {\r\n            setText(e.target.value);\r\n            setTextArea(160 - e.target.value.length)\r\n        }\r\n    }\r\n\r\n    const sendComment = async() => {\r\n        if(!props.twitId) return;\r\n        if(!text) {\r\n            setError('Inputs required');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        const res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}/${props.twitId}`,\r\n            data: {text},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .catch(error => {\r\n                    console.log(error.response);\r\n                    setError(error.response.data.error);\r\n            });\r\n            console.log(res);\r\n            if(res && res.data.success) {\r\n                setLoading(false);\r\n                props.setSync(!props.sync);\r\n                props.showCommentForm();\r\n            } else {\r\n                setLoading(false);\r\n                console.log('Error found'); \r\n            }\r\n    }\r\n\r\n    return (\r\n        <div className='text-center'>\r\n             <p style={{fontSize: 20}} className='font-bold text-xs mb-3'>\r\n                New Comment\r\n            </p>\r\n            <textarea \r\n                type='textarea'\r\n                name='text'\r\n                rows={5}\r\n                cols={8}\r\n                maxLength={160}\r\n                style={{width: '15em', height: '8em'}}\r\n                value={text} \r\n                placeholder='Drop in your comment ...' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5 h-20 text-md text-gray-600'\r\n                required\r\n            /><br/>\r\n            {textArea}\r\n            <div style={{flexDirection: 'column'}} className='flex mb-5'>\r\n                {error && <span className='mb-2 text-red-800 text-xs'>{error}</span>}\r\n                <div className='justify-items-center'>\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={() => props.showCommentForm()}\r\n                        className='hover:bg-gray-900 bg-gray-400 font-medium p-1 rounded text-white'\r\n                    >    \r\n                        Cancel\r\n                    </span>\r\n\r\n                    {!loading ?\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={sendComment}\r\n                        className='hover:bg-green-900 bg-green-400 font-medium p-1 rounded text-white mx-2'\r\n                    >    \r\n                        Send\r\n                    </span>\r\n                    :\r\n                    <span className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { BsPersonFill, BsChatTextFill, BsShareFill } from 'react-icons/bs';\r\nimport { AiTwotoneLike, AiTwotoneDelete, AiFillHome } from 'react-icons/ai';\r\nimport { IoIosPeople } from 'react-icons/io';\r\nimport { GrEdit } from 'react-icons/gr';\r\nimport { RiChatNewLine } from 'react-icons/ri';\r\nimport TwitForm from './TwitForm';\r\nimport CommentForm from './CommentForm';\r\nimport { baseUrl, frontendUrl } from '../helper';\r\nimport { Logout } from './GoogleAuth';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function Twits() {\r\n    const [error, setError] = useState('');\r\n    const [twits, setTwits] = useState(JSON.parse(localStorage.getItem('twits')) || []);\r\n    const [formActive, setFormActive] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    const [users, setUsers] = useState(0);\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const img = localStorage.getItem('img') ? localStorage.getItem('img') : '';\r\n    const history = useHistory();\r\n    const token = localStorage.getItem('token');\r\n\r\n    const apiUrl = `${baseUrl}/twits`;\r\n\r\n    const showForm = () => {\r\n        setFormActive(!formActive);\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        history.push('/');\r\n    }\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.isAxiosError);\r\n                }\r\n            });\r\n            setSync(!sync);\r\n    }\r\n\r\n    const getTwits = async() => {\r\n        if(!token) {\r\n            console.log('Not loggedin');\r\n            return;\r\n        }\r\n        const res = await axios({\r\n            method: 'GET',\r\n            url: `${apiUrl}`,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.isAxiosError);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                setTwits(res.data.data.map(x => {\r\n                    x.formActive = false;\r\n                    return x;\r\n                }));\r\n                localStorage.setItem('twits', JSON.stringify(res.data.data.map(x => {\r\n                    x.formActive = false;\r\n                    return x;\r\n                })));\r\n            } else {\r\n                console.log('Error found'); \r\n                setError('Error found');\r\n                setError('Please check your network');\r\n            }\r\n    }\r\n\r\n    const getUsers = async() => {\r\n        const res = await axios({\r\n            method: 'GET',\r\n            url: `${baseUrl}/auth/users`,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.isAxiosError);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                setUsers(res.data.data.count);\r\n            } else {\r\n                console.log('Error found');\r\n                setError('Error found');\r\n                setError('Please check your network');\r\n            }\r\n    }\r\n\r\n    const checkOpenForms = () => {\r\n        console.log('checking open forms', twits.filter(twit => twit.formActive));\r\n        let closedTwits = twits.map(twit => {\r\n            twit.formActive = false;\r\n            return twit;\r\n        });\r\n        setTwits(closedTwits);\r\n        console.log('closing open forms', twits.filter(twit => twit.formActive));\r\n    }\r\n\r\nuseEffect(() => {\r\n    if(!token) {\r\n        history.push('/');\r\n    }\r\n    getUsers();\r\n    return () => {\r\n        console.log('cleanup twits 1');\r\n    }\r\n}, []);\r\n\r\nuseEffect(async() => {\r\n    // if(!twits.length) {\r\n    //     console.log('no twits');\r\n    //     getTwits();\r\n    // }\r\n    getTwits();\r\n\r\n    return () => {\r\n        console.log('cleanup twits 2');\r\n    }\r\n}, [sync]);\r\n\r\nuseEffect(() => {\r\n    setTimeout(() => {\r\n        const id = window.location.hash.replace('#', '');\r\n        const element = document.getElementById(id);\r\n        if (element) element.scrollIntoView();\r\n      }, 0);\r\n});\r\n\r\n    return (\r\n        <div style={{fontFamily: 'Roboto', fontWeight: '600', height: '90vh'}} className='mb-5 p-3'>\r\n            <span style={{cursor: 'pointer', borderRadius: '50%'}} className='fixed bottom-16 right-4 bg-green-500 p-4 text-white'><RiChatNewLine size={25} onClick={showForm} /></span>\r\n            {formActive && <TwitForm error={error} showForm={showForm} sync={sync} setSync={setSync}/>}\r\n            \r\n            {!formActive && \r\n            <div>\r\n                <p style={{fontFamily: 'Architects Daughter', fontWeight: '300'}} className='italic text-center mb-2'>\r\n                    <span style={{fontSize: '1.8em'}} className='text-purple-900 font-bold'>Twitee<br/>\r\n                    </span> \r\n                    <span style={{fontSize: '1em'}}>.... Feel free, express yourself, network ....</span>\r\n                </p>\r\n                <div className='py-2 px-2 rounded mb-4 flex justify-between'>\r\n                    {img !== 'null' ? (\r\n                        <span className='cursor-pointer'  onClick= {e => history.push(`/${email.split('@')[0]}`)}>\r\n                            <img src={img} alt='Profile' style={{width: '30px', height: '30px', borderRadius: '50%'}} />\r\n                        </span>) \r\n                        : <span className='text-left'><AiFillHome size={25} /></span>}\r\n                    {users > 0 && <span className='text-left flex cursor-pointer'  onClick= {e => history.push('people')}><IoIosPeople size={25}/>{users}</span>}\r\n                    \r\n                    <span style={{cursor: 'pointer'}} className='text-right' onClick={logout}><Logout />\r\n                    </span>\r\n                </div>\r\n                {error && <div style={{fontFamily: 'Roboto', backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 m-1 rounded'>Please check your network !</div>}\r\n\r\n                <div className=''>\r\n                {\r\n                    twits.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()).map((twit, idx) => \r\n                        <Twit key={idx} twit={twit} email={email} apiCallHook={apiCallHook} baseUrl={baseUrl} frontendUrl={frontendUrl} sync={sync} setSync={setSync} showForm={showForm} formActive={formActive} checkOpenForms={checkOpenForms} />\r\n                    )\r\n                }\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Twit = (props) => {\r\n    const { twit: {id, title, text, imageUrl, twits, likes, comments, createdAt, updatedAt }, email, apiCallHook, baseUrl, frontendUrl, sync, setSync, checkOpenForms } = props;\r\n    const [commentFormActive, setCommentFormActive] = useState(false);\r\n    const [editLoading, setEditLoading] = useState(false);\r\n    const [likeLoading, setLikeLoading] = useState(false);\r\n    const [deleteLoading, setDeleteLoading] = useState(false);\r\n    const [storyText, setStoryText] = useState(text);\r\n    const [editForm, setEditForm] = useState(false);\r\n    const [linkCopied, setLinkCopied] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const handleStoryChange = (e) => {\r\n        setStoryText(e.target.value);\r\n    }\r\n\r\n    const copyTwitLink = () => {\r\n        clipboardCopy(`${frontendUrl}/#${id}`);\r\n        setTimeout(() => {\r\n            setLinkCopied(false);\r\n        }, 1000);\r\n    }\r\n\r\n    const editStory = () => {\r\n        setEditForm(!editForm);\r\n        setStoryText(text);\r\n    }\r\n   \r\n    const updateStory = () => {\r\n        apiCallHook('PATCH', `${baseUrl}/twits/${id}`, {text: storyText});\r\n        setEditLoading(true);\r\n        setTimeout(() => {\r\n            setEditLoading(false);\r\n            setEditForm(false);\r\n        }, 1000);\r\n    }\r\n    const likeCount = likes.filter(like => like.isLiked).length;\r\n    const showCommentForm = () => {\r\n        setCommentFormActive(!commentFormActive);\r\n        props.twit.formActive = !commentFormActive;\r\n    }\r\n    \r\n    const likeTwit = () => {\r\n        setLikeLoading(true);\r\n        setTimeout(() => {\r\n            setLikeLoading(false);\r\n        }, 1000);\r\n        apiCallHook('POST', `${baseUrl}/likes/like/${id}`);\r\n    }\r\n    const commentTwit = () => {\r\n        checkOpenForms();\r\n        showCommentForm();\r\n    }\r\n    const deleteTwit = () => {\r\n        setDeleteLoading(true);\r\n        setTimeout(() => {\r\n            setDeleteLoading(false);\r\n        }, 1000);\r\n        apiCallHook('DELETE', `${baseUrl}/twits/${id}`);\r\n    }\r\n\r\n    const clipboardCopy = async (text) => {\r\n        if ('clipboard' in navigator) {\r\n            console.log('Link copied');\r\n            setLinkCopied(true);\r\n          return await navigator.clipboard.writeText(text);\r\n        } else {\r\n            console.log('Link copy is not supported');\r\n        }\r\n      }\r\n    return (\r\n    <div id={`${id}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-2'>\r\n            <span></span>\r\n            <span style={{fontFamily: 'Roboto Slab'}} className='text-xl font-bold self-center'>{title}</span>\r\n            <span className={!linkCopied ? 'mr-2 mb-1 invisible text-xs self-end' : 'mr-2 mb-1 text-xs self-end'}>copied</span>\r\n        </p>\r\n        <span className='text-xs mb-5 flex justify-between'>\r\n            <Moment fromNow>{createdAt}</Moment>\r\n        <span className='flex'>\r\n        {(email === twits.email) && !editForm && \r\n            <span className='cursor-pointer mr-3 hover:bg-blue-400 text-black hover:text-white p-2 -mt-2 rounded-full' onClick={() => editStory()}> \r\n                <GrEdit size={20} />\r\n            </span>\r\n        }\r\n            <span className={linkCopied ? 'flex-col hover:bg-blue-400 rounded-full p-2 text-white bg-blue-900 cursor-pointer -mt-2 mr-3' : 'rounded-full hover:bg-blue-400 p-2 cursor-pointer -mt-2 mr-3'} onClick={() => copyTwitLink()}> \r\n                <BsShareFill size={20} />\r\n            </span>\r\n        </span>\r\n        </span>\r\n        {editForm && <div className='mb-5'>\r\n                <textarea \r\n                    className='border-gray-200 border-2 p-2 mb-2 rounded bg-white-300 focus:outline-none'\r\n                    style={{width: '100%'}}\r\n                    cols={3}\r\n                    rows={4}\r\n                    maxLength={160}\r\n                    value={storyText}\r\n                    onChange={handleStoryChange}\r\n                    required={true}\r\n                    /><br />\r\n                {!editLoading ? \r\n                 <>\r\n                    <span \r\n                        className='cursor-pointer bg-gray-500 p-2 m-2 text-white rounded hover:bg-gray-400' onClick={() => editStory()}\r\n                    > \r\n                        Cancel \r\n                    </span>\r\n                    <span \r\n                    className='cursor-pointer bg-green-600 p-2 mb-2 text-white rounded hover:bg-green-400 hover:text-black' onClick={() => updateStory()}\r\n                    > \r\n                        Update Story \r\n                    </span>\r\n                </>\r\n                :\r\n                    <LoadSpan height={20} width={20} color='#00bfff' />}\r\n                </div>}\r\n\r\n        {!editForm && <div className='p-3 font-semibold'>{text}<br />\r\n        {((new Date(updatedAt).getTime() - new Date(createdAt).getTime()) > 0) && <span className='text-xs'>Updated <Moment fromNow>{updatedAt}</Moment></span>}\r\n        </div>}\r\n        <span>\r\n            {imageUrl && <img src={imageUrl} width='100%' alt='imgurl' className='rounded' />}\r\n        </span>\r\n        <div style={{fontSize: '0.8em'}} className='text-xs text-gray-800 flex mt-2'>\r\n            <span className='mx-2 flex cursor-pointer'  onClick= {e => history.push(`/${twits.username}`)}>\r\n                {twits.imageUrl ? (\r\n                <span className='mr-1'>\r\n                    <img src={twits.imageUrl} alt='Profile' style={{width: '20px', height: '20px', borderRadius: '50%'}} />\r\n                </span>)\r\n                : <BsPersonFill size={15}/>}\r\n                {email === twits.email ? 'Me' : twits.username}\r\n            </span>\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex' onClick={() => likeTwit()}>\r\n               {!likeLoading ? \r\n               <>\r\n               <AiTwotoneLike color={likeCount > 0 ? 'blue' : 'gray'} size={15}/>\r\n                <span className='text-xs'>{likeCount}</span>\r\n                </>:\r\n                <LoadSpan height={20} width={20} color='#00bfff' />}\r\n            </span>\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex' onClick={() => commentTwit()}>\r\n                <BsChatTextFill size={15}/>\r\n            </span>\r\n            {email === twits.email &&\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex hover:text-red-800' onClick={() => deleteTwit()}>\r\n                {!deleteLoading ? \r\n                <AiTwotoneDelete size={15} color='red'/>:\r\n                <LoadSpan height={20} width={20} color='#00bfff' />}\r\n            </span>}\r\n        </div>\r\n        {commentFormActive && <CommentForm twitId={id} showCommentForm={showCommentForm} sync={sync} setSync={setSync}/>}\r\n\r\n        {comments.length > 0 && \r\n                (<div className='mt-2 rounded'>\r\n                    {comments.filter(comment => !comment.isDeleted).map((comment, idx) => (\r\n                        <Comment key={idx} comment={comment} apiCallHook={apiCallHook} email={email} />\r\n                    )\r\n                )}\r\n            </div>)\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nconst Comment = (props) => {\r\n    const { comment: { id, text, usercomments, likecomments, createdAt }, email, apiCallHook } = props;\r\n\r\n    const [likeLoading, setLikeLoading] = useState(false);\r\n    const [deleteLoading, setDeleteLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const likeCount = likecomments?.filter(like => like.isLiked).length;\r\n    const likeComment = () => {\r\n        setLikeLoading(true);\r\n        setTimeout(() => {\r\n            setLikeLoading(false);\r\n        }, 1000);\r\n        apiCallHook('POST', `${baseUrl}/likecomments/like/${id}`);\r\n    }\r\n    const deleteComment = () => {\r\n        setDeleteLoading(true);\r\n        setTimeout(() => {\r\n            setLikeLoading(false);\r\n        }, 1000);\r\n        // console.log('delete twit with id: ', id);\r\n        apiCallHook('DELETE', `${baseUrl}/comments/${id}`);\r\n    }\r\n\r\n    return(\r\n        <div className='bg-blue-200 mb-2 p-2 rounded'>\r\n            <span className='text-xs mb-2'>\r\n            <Moment fromNow>{createdAt}</Moment>\r\n            </span>\r\n            <p className='p-3 font-semibold'>{text}</p>\r\n            <span style={{fontSize: '0.8em'}} className='mx-2 flex items-justify text-xs mt-2'>\r\n                {usercomments.imageUrl ?\r\n                <span className='mr-1 cursor-pointer' onClick= {e => history.push(`/${usercomments.username}`)}>\r\n                    <img src={usercomments.imageUrl} alt='Profile' style={{width: '20px', height: '20px', borderRadius: '50%'}} />\r\n                </span>\r\n                : <BsPersonFill size={15}/>}\r\n                <span className='cursor-pointer' onClick= {e => history.push(`/${usercomments.username}`)}>\r\n                    {email === usercomments.email ? 'Me' : usercomments.username}\r\n                </span>\r\n                <span style={{cursor: 'pointer'}} className='mx-2 flex' onClick={() => likeComment()}>\r\n                {!likeLoading ? \r\n                    <>\r\n                    <AiTwotoneLike color={likeCount > 0 ? 'blue' : 'gray'} size={15}/>\r\n                    <span className='text-xs'>{likeCount}</span>\r\n                    </>:\r\n                    <LoadSpan height={20} width={20} color='white' />}\r\n                </span>\r\n                {email === usercomments.email &&\r\n                <span style={{cursor: 'pointer'}} className='mx-2 flex hover:text-red-800' onClick={() => deleteComment()}>\r\n                {!deleteLoading ? \r\n                    <AiTwotoneDelete size={15} color='red'/>\r\n                    :\r\n                    <LoadSpan height={20} width={20} color='white' />}\r\n                </span>}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const LoadSpan = ({height, width, color}) => (\r\n            <span \r\n            className='m-auto mr-4'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color={color}\r\n                        height={height} \r\n                        width={width} \r\n                        />\r\n            </span>\r\n            )","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { IoCloseCircle } from 'react-icons/io5';\r\nimport { BsPersonFill } from 'react-icons/bs';\r\nimport { IoIosPeople } from 'react-icons/io';\r\nimport Moment from 'react-moment';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../helper';\r\nimport { LoadSpan } from './Twits';\r\n\r\nexport default function Profile() {\r\n    const [error, setError] = useState('');\r\n    const [ userData, setUserData ] = useState({});\r\n    const [ isFollower, setIsFollower ] = useState(false);\r\n    const [ isFollowing, setIsFollowing ] = useState(false);\r\n    // const [ followerz, setFollowerz ] = useState([]);\r\n    // const [ followingz, setFollowingz ] = useState([]);\r\n    const [ followerCount, setFollowerCount ] = useState(0);\r\n    const [ followingCount, setFollowingCount ] = useState(0);\r\n    const [followLoading, setFollowLoading] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    let { user } = useParams();\r\n    const history = useHistory();\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const token = localStorage.getItem('token');\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        const res = await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.isAxiosError);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                    if(method === 'GET') {\r\n                    setUserData(res.data.data.user);\r\n                    const followers = res.data.data.user.followers.filter(user => user.follower.isFollowed);\r\n                    const following = res.data.data.user.following.filter(user => user.follower.isFollowed);\r\n                    // setFollowerz(followers);\r\n                    // setFollowingz(following);\r\n                    setFollowerCount(followers.length);\r\n                    setFollowingCount(following.length);\r\n                    const checkIsFollower = followers.filter(user => user.email === email).length > 0;\r\n                    const checkIsFollowing = following.filter(user => user.email === email).length > 0;\r\n                    setIsFollower(checkIsFollower);\r\n                    setIsFollowing(checkIsFollowing);\r\n                    // console.log(followers, following, checkIsFollower, checkIsFollowing, isFollower, isFollowing);\r\n                    setError('');\r\n                } else{\r\n                    setSync(!sync);\r\n                }\r\n            } else {\r\n                setError('Please check your network');\r\n            }\r\n    }\r\n\r\n    const handleFollow = () => {\r\n        setFollowLoading(true);\r\n        setTimeout(() => {\r\n            setFollowLoading(false);\r\n        }, 1000);\r\n        if(isFollower) {\r\n            apiCallHook('PATCH', `${baseUrl}/followers/unfollow`, {followerId: userData?.id});\r\n        } else {\r\n            apiCallHook('POST', `${baseUrl}/followers/follow`, {followerId: userData?.id});\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        apiCallHook('GET', `${baseUrl}/auth/users/${user}`);\r\n        return () => {\r\n            console.log('cleanup profile page');\r\n        }\r\n    }, [sync]);\r\n\r\n    return (\r\n        <div id={`${user}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 bg-gray-200 h-full rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-2'>\r\n            {userData?.imageUrl ?\r\n            <span>\r\n                <img src={userData?.imageUrl} alt='Profile' style={{width: '3em', height: '3em', borderRadius: '50%'}} />\r\n            </span>\r\n            : \r\n            <span className='text-left'><BsPersonFill size={25} /></span>}\r\n            <span style={{fontFamily: 'Roboto Slab'}} className='text-xl font-bold self-center'>{userData?.username}</span>\r\n            {<span className='text-left flex cursor-pointer' onClick= {e => history.push('people')}><IoIosPeople size={30}/></span>}\r\n            <span className='text-left bg-black-400 cursor-pointer hover:invisible' onClick={() => history.push(\"/twits\")}><IoCloseCircle size={35} /></span>\r\n        </p>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 mb-5 rounded'>Please check your network !</div>}\r\n        <span className='text-sm mt-3 mb-5 flex justify-between'>\r\n            <span>Member since : <Moment fromNow>{userData?.createdAt}</Moment></span>\r\n            <span className='flex'>\r\n            {(email !== userData?.email) && \r\n                <>{!followLoading ? <span className={' text-white bg-blue-900 rounded-lg hover:bg-blue-400 p-2 cursor-pointer -mt-2 mr-1'} onClick={() => handleFollow()}> \r\n                   {!isFollower ? 'Follow' : 'Following'}\r\n                </span>:\r\n                <LoadSpan height={20} width={20} color='' />}\r\n                </>\r\n            }\r\n            </span>\r\n        </span>\r\n        <div className='flex justify-between text-xs'>\r\n            <span>\r\n                {followerCount > 0 && <span className={'text-xs text-white bg-blue-500 rounded hover:bg-blue-400 p-2 cursor-pointer'}> \r\n                        {followerCount} {followerCount  > 1 ? 'followers' : 'follower'}\r\n                </span>}\r\n                {followingCount > 0 && <span className={' text-white bg-green-500 rounded hover:bg-green-400 p-2 cursor-pointer m-3'}> \r\n                        {followingCount} following\r\n                </span>}\r\n            </span>\r\n            <span>\r\n                {isFollowing && <span className={' text-white bg-gray-500 rounded p-2 cursor-pointer m-1'}> \r\n                        Follows you\r\n                </span>}\r\n            </span>\r\n        </div>\r\n        <span>\r\n            {userData?.imageUrl ? \r\n            <img src={userData?.imageUrl} width='100%' alt='imgurl' className='mt-3 rounded-lg' />\r\n            :\r\n            <div className='flex'>\r\n                <span className='m-auto'><BsPersonFill size={300} /></span>\r\n            </div>}\r\n        </span>\r\n        \r\n        \r\n    </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n// import { FaSearch } from \"react-icons/fa\";\r\n\r\nexport default function TopSearch({searchQuery, setSearchQuery, handleChange}) {\r\n\r\n    return (\r\n        <div className=\"flex mb-2 rounded\">\r\n            <div className='flex-grow'>\r\n                <input \r\n                    type='text'\r\n                    name='top-search'\r\n                    value={searchQuery}\r\n                    placeholder='Search friends'\r\n                    required\r\n                    onChange={handleChange}\r\n                    className='p-2 text-dark-3 text-md rounded font-semibold text-center bg-white-200 w-full outline-none'\r\n                />\r\n            </div>\r\n            {searchQuery && <div className='flex text-white font-bold bg-blue-900 hover:bg-blue-500 cursor-pointer px-3 rounded items-center' onClick={() => setSearchQuery('')}>\r\n                {/* <FaSearch\r\n                    className='w-6 h-6 text-white' \r\n                /> */}\r\n                Clear\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { IoCloseCircle } from 'react-icons/io5';\r\nimport { BsPersonFill } from 'react-icons/bs';\r\nimport { IoIosPeople } from 'react-icons/io';\r\nimport Moment from 'react-moment';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../helper';\r\nimport { LoadSpan } from './Twits';\r\nimport TopSearch from './TopSearch';\r\n\r\nexport default function People() {\r\n    const [error, setError] = useState('');\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [ userData, setUserData ] = useState({});\r\n    const [ searchData, setSearchData ] = useState([]);\r\n    const [ peopleData, setPeopleData ] = useState([]);\r\n    const [ isFollower, setIsFollower ] = useState(false);\r\n    const [ isFollowing, setIsFollowing ] = useState(false);\r\n    // const [ followerz, setFollowerz ] = useState([]);\r\n    // const [ followingz, setFollowingz ] = useState([]);\r\n    const [ followerCount, setFollowerCount ] = useState(0);\r\n    const [ followingCount, setFollowingCount ] = useState(0);\r\n    const [followLoading, setFollowLoading] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    let { user } = useParams();\r\n    const history = useHistory();\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const token = localStorage.getItem('token');\r\n\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        setSearchQuery(value);\r\n      \r\n    }\r\n\r\n    const handleSearch = () => {\r\n        const searchResults = peopleData.filter(person => {\r\n            return person.username.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0;\r\n        });\r\n        // console.log(searchQuery, searchData, searchResults);\r\n        setSearchData(searchResults);\r\n    }\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        const res = await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.isAxiosError);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                    if(method === 'GET') {\r\n                    setUserData(res.data.data.user);\r\n                    setPeopleData(res.data.data.users);\r\n                    setSearchData(res.data.data.users);\r\n                    // console.log(res.data.data.users);\r\n                    // const followers = res.data.data.user.followers.filter(user => user.follower.isFollowed);\r\n                    // const following = res.data.data.user.following.filter(user => user.follower.isFollowed);\r\n                    // setFollowerz(followers);\r\n                    // setFollowingz(following);\r\n                    // setFollowerCount(followers.length);\r\n                    // setFollowingCount(following.length);\r\n                    // const checkIsFollower = followers.filter(user => user.email === email).length > 0;\r\n                    // const checkIsFollowing = following.filter(user => user.email === email).length > 0;\r\n                    // setIsFollower(checkIsFollower);\r\n                    // setIsFollowing(checkIsFollowing);\r\n                    // console.log(followers, following, checkIsFollower, checkIsFollowing, isFollower, isFollowing);\r\n                    setError('');\r\n                } else{\r\n                    setSync(!sync); \r\n                }\r\n            } else {\r\n                setError('Please check your network');\r\n            }\r\n    }\r\n\r\n    const handleFollow = () => {\r\n        setFollowLoading(true);\r\n        setTimeout(() => {\r\n            setFollowLoading(false);\r\n        }, 1000);\r\n        if(isFollower) {\r\n            apiCallHook('PATCH', `${baseUrl}/followers/unfollow`, {followerId: userData?.id});\r\n        } else {\r\n            apiCallHook('POST', `${baseUrl}/followers/follow`, {followerId: userData?.id});\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        apiCallHook('GET', `${baseUrl}/auth/users`);\r\n        setSearchData(peopleData);\r\n\r\n        return () => {\r\n            console.log('cleanup people page1');\r\n        }\r\n    }, [sync]);\r\n  \r\n    useEffect(() => {\r\n        handleSearch();\r\n        \r\n        return () => {\r\n            console.log('cleanup people page2');\r\n        }\r\n    }, [searchQuery]);\r\n    return (\r\n        <div id={`${user}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 bg-gray-200 h-full rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-2'>\r\n            <span className='text-left'><IoIosPeople size={25} /></span>\r\n            <span style={{fontFamily: 'Roboto Slab'}} className='text-xl font-bold self-center'>People</span>\r\n            <span className='text-left bg-black-400 cursor-pointer hover:invisible' onClick={() => history.push(\"/twits\")}><IoCloseCircle size={35} /></span>\r\n        </p>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 m-1 rounded'>Please check your network !</div>}\r\n        <span className='text-sm mt-3 mb-5'>\r\n        </span>\r\n        <TopSearch searchQuery={searchQuery} handleChange={handleChange} setSearchQuery={setSearchQuery}/>\r\n        <div className='flex flex-col text-md'>\r\n            {searchData.sort((a, b) => a.email.localeCompare(b.email)).map((person, idx) => (\r\n                <span key={idx} \r\n                    className={'text-white bg-blue-400 rounded hover:bg-blue-400 p-2 mb-2 cursor-pointer'} \r\n                    onClick= {() => history.push(`/${person.username}`)}\r\n                > \r\n                <span className='mx-2 flex cursor-pointer'  onClick= {e => history.push(`/${person.username}`)}>\r\n                {person.imageUrl ? (\r\n                <span className='mr-2'>\r\n                    <img src={person.imageUrl} alt='Profile' style={{width: '1.5em', height: '1.5em', borderRadius: '50%'}} />\r\n                </span>)\r\n                : <span className='mr-2 text-black'><BsPersonFill size={'1.5em'}/></span>}\r\n                {email === person.email ? 'Me' : person.username}\r\n            </span>\r\n                </span>\r\n            ))}\r\n        </div>\r\n        <div className='flex'>\r\n            <span className='m-auto'><IoIosPeople size={300} /></span>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Posts from \"./components/Posts\";\nimport Twits from './components/Twits';\nimport Profile from './components/Profile';\nimport People from './components/People';\n\nfunction App() {\n    const [loggedIn, setLoggedIn] = useState(JSON.parse(localStorage.getItem('loggedIn')));\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')) || false);\n      const username = localStorage.getItem('username');\n      // console.log(username)\n      Notification.requestPermission().then((result) => {\n        if (result === 'granted') {\n          randomNotification();\n        }\n      });\n\n    function randomNotification() {\n      const notifTitle = username ? `Hello, ${username}` : 'Hello !';\n      const notifBody = `Have you checked Twitee today?`;\n      const notifImg = `https://res.cloudinary.com/thevetdoctor/image/upload/v1599332593/g1rozhabxswegvhp59h3.jpg`;\n      const options = {\n        body: notifBody,\n        icon: notifImg,\n      };\n      new Notification(notifTitle, options);\n      setTimeout(randomNotification, 3 * 60 * 60 * 1000);\n    }\n  return (\n    <Router>\n        {/* <div className=\"h-full w-full m-0 max-w-sm mx-auto bg-blue-200 rounded-xl shadow-md flex\"> */}\n        {/* <div className=\"font-Roboto w-full m-0 max-w-xl max-h-xl my-0 mx-auto rounded-xl shadow-md -px-3\"> */}\n              {/* <div className=\"bg-gray-200 rounded-xl p-4\"> */}\n      <Switch>\n              <Route exact path=\"/\" component={Posts} />\n              <Route exact path=\"/twits\" component={Twits} />\n              <Route exact path=\"/people\" component={People} />\n              <Route path=\"/:user\" component={Profile} />\n      </Switch>\n          {/* </div>ff */}\n        {/* </div>  */}\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n// import * as serviceWorker from \"./service-worker\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}