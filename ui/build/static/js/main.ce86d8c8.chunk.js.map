{"version":3,"sources":["helper.js","components/GoogleAuth.js","components/chat.jpg","components/Posts.js","components/AttachImage.js","components/TwitForm.js","components/CommentForm.js","redux/actions.js","redux/reducer.js","redux/store.js","components/Twits.js","components/Profile.js","components/TopSearch.js","components/People.js","components/Followers.js","components/Following.js","components/UserTwits.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["baseUrl","window","location","host","indexOf","frontendUrl","dotenv","config","clientId","process","GoogleAuth","props","error","setError","setLoading","loading","useState","JSON","parse","localStorage","getItem","signup","apiUrl","history","useHistory","buttonText","onSuccess","res","authenticate","profileObj","email","name","imageUrl","onFailure","cookeiPolicy","style","marginTop","Logout","render","renderProps","size","onLogoutSuccess","a","google","password","setItem","axios","method","url","data","headers","catch","isAxiosError","response","search","auth","success","user","id","username","token","push","Posts","setEmail","setPassword","setSignup","handleChange","e","target","value","useEffect","fontFamily","fontWeight","className","fontSize","type","placeholder","onChange","color","height","width","onClick","src","chat","alt","borderRadius","AttachImage","setImageUrl","setUploading","imgUrl","setImgUrl","handleImage","serviceImage","files","FormData","append","fetch","body","json","imgLink","secure_url","accept","TwitForm","title","setTitle","text","setText","textArea","setTextArea","length","sendTwit","removeItem","setSync","sync","showForm","display","flexDirection","alignItems","border","required","rows","cols","maxLength","overflow","cursor","CommentForm","sendComment","twitId","showCommentForm","actions","setTwitData","setUserCount","setPeopleData","setSearchData","setUsersData","setNewsType","setPage","setTotalPages","setSearchQuery","setNetworkStatus","initialState","twits","users","peopleData","searchData","usersData","searchQuery","networkStatus","store","createStore","state","action","newsByType","newsData","filter","newsType","news","page","totalPages","Math","ceil","pageSize","newsBySearch","item","toLowerCase","devToolsEnhancer","Twits","formActive","setFormActive","getState","dispatch","useSelector","userId","img","apiCallHook","getTwits","stringify","map","x","getUsers","count","checkOpenForms","twit","setTimeout","hash","replace","element","document","getElementById","scrollIntoView","split","backgroundColor","sort","b","Date","createdAt","getTime","idx","Twit","link","likes","comments","updatedAt","commentFormActive","setCommentFormActive","editLoading","setEditLoading","likeLoading","setLikeLoading","deleteLoading","setDeleteLoading","storyText","setStoryText","editForm","setEditForm","linkCopied","setLinkCopied","more","setMore","viewComments","setViewComments","filteredComments","comment","isDeleted","isLiked","like","userlikes","showMore","editStory","likeCount","clipboardCopy","navigator","clipboard","writeText","fromNow","lineHeight","slice","href","Comment","usercomments","likecomments","LoadSpan","Profile","userData","setUserData","isFollower","setIsFollower","isFollowing","setIsFollowing","followerCount","setFollowerCount","followingCount","setFollowingCount","twitCount","setTwitCount","followLoading","setFollowLoading","useParams","userTwits","obj","userDataInStore","followers","follower","isFollowed","following","checkIsFollower","checkIsFollowing","goBack","followerId","TopSearch","People","searchResults","person","handleSearch","localeCompare","Follower","Following","UserTwits","twitData","userTwitData","App","onLine","Notification","requestPermission","then","result","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","ReactDOM","StrictMode","URL","origin","addEventListener","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.ce86d8c8.chunk.js","sourcesContent":["export const baseUrl = (() => {\r\n    if(window.location.host.indexOf('localhost') >= 0){\r\n    return 'http://localhost:4000';\r\n    } else {\r\n    return 'https://oba-twit.herokuapp.com';\r\n    }\r\n})();\r\n\r\nexport const frontendUrl = (() => {\r\n    if(window.location.host.indexOf('localhost') >= 0){\r\n    return 'http://localhost:3000/twits';\r\n    } else {\r\n    return 'https://peaceful-leakey-ce2e49.netlify.app/twits';\r\n    }\r\n})();","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\n// import GoogleButton from 'react-google-button'\r\nimport { authenticate } from './Posts';\r\nimport { baseUrl } from '../helper';\r\nimport dotenv from \"dotenv\";\r\nimport { FiLogOut } from 'react-icons/fi';\r\n\r\ndotenv.config();\r\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\n\r\nexport default function GoogleAuth(props) {\r\n    const { error, setError, loading, setLoading } = props;\r\n    \r\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')));\r\n    const apiUrl = `${baseUrl}/auth/${signup ? 'signup' : 'login'}`; \r\n    const history = useHistory(); \r\n\r\n    const onSuccess = (res) => {\r\n        authenticate(true, res.profileObj.email, null, apiUrl, error, setError, setLoading, history, res.profileObj.name, res.profileObj.imageUrl)\r\n    }\r\n    const onFailure = (res) => {\r\n        // console.log('login failed', res);\r\n    }\r\n    return (\r\n        <div>\r\n            <GoogleLogin \r\n                clientId={clientId}\r\n                buttonText={signup ? 'Signup with Google' : 'Login with Google'}\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                // isSignedIn={true}\r\n                cookeiPolicy={'single_host_origin'}\r\n                style={{marginTop: '160px'}}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Logout = () => {\r\n    \r\n    const onSuccess = (res) => {\r\n        // console.log(res, 'Logout suceeded');\r\n    }\r\n    return(\r\n    <div>\r\n              <GoogleLogout \r\n                clientId={clientId}\r\n                render={renderProps => (\r\n                    <span><FiLogOut size={25}/></span>\r\n                )}\r\n                buttonText='Signout' \r\n                onLogoutSuccess={onSuccess}\r\n                style={{marginTop: '160px'}}\r\n            />\r\n    </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/chat.7e8098f6.jpg\";","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport GoogleAuth from './GoogleAuth';\r\nimport { baseUrl } from '../helper';\r\n// import LinkedinAuth from './LinkedinAuth';\r\nimport dotenv from \"dotenv\";\r\nimport chat from './chat.jpg';\r\nimport { CgCopyright } from 'react-icons/cg';\r\n\r\ndotenv.config();\r\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\n\r\nexport const authenticate = async(google = false, email, password = null, apiUrl, error, setError, setLoading, history, name, imageUrl) => {\r\n    localStorage.setItem('img', imageUrl);\r\n    setLoading(true);\r\n    let res;\r\n    if(!google) {\r\n        if(!(email && password)) {\r\n            if(!email) {\r\n                setError('Email is required');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            setError('Password required');\r\n            setLoading(false);\r\n            return;\r\n        }\r\n        res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}`,\r\n            data: {email, password},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .catch(error => {\r\n            if(error.isAxiosError) {\r\n                if(error.response?.data?.error.search('NOTFOUND') >= 0) {\r\n                    setError('Please check your network');\r\n                } else {\r\n                    setError(error.response?.data?.error);\r\n                }\r\n            }\r\n        });\r\n    } else {\r\n        res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}`,\r\n            data: {email, password: 'passs', auth: 'google', name, imageUrl},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .catch(error => {\r\n            setError(error.response.data.error);\r\n        });\r\n\r\n    }\r\n        if(res && res.data.success) {\r\n            localStorage.setItem('email', email);\r\n            localStorage.setItem('img', res.data.data.user.imageUrl);\r\n            localStorage.setItem('userId', res.data.data.user.id);\r\n            localStorage.setItem('username', res.data.data.user?.username);\r\n            localStorage.setItem('token', res.data.data.token);\r\n            setLoading(false);\r\n            history.push('/twits');\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n}\r\n\r\nexport default function Posts(props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')));\r\n    const token = localStorage.getItem('token');\r\n    const history = useHistory();\r\nconst apiUrl = `${baseUrl}/auth/${signup ? 'signup' : 'login'}`; \r\n\r\nconst handleChange = (e) => {\r\n    if(e.target.name === 'email') {\r\n        setEmail(e.target.value);\r\n    } else {\r\n        setPassword(e.target.value);\r\n    }\r\n}\r\n\r\nconst handleSignupMode = () => {\r\n    if(!signup) {\r\n        setSignup(true);\r\n        localStorage.setItem('signup', true);\r\n    } else {\r\n        setSignup(false);\r\n        localStorage.setItem('signup', false);\r\n    }\r\n}\r\n\r\nuseEffect(() => {\r\n    if(token) {\r\n        history.push('/twits');\r\n    }\r\n    return () => {\r\n    }\r\n}, []);\r\n    return (\r\n        <div style={{fontFamily: 'Roboto', fontWeight: '600'}} className='font-Roboto text-center align-items-center'>\r\n             <p style={{fontFamily: 'Architects Daughter', fontWeight: '300'}} className='italic text-center mb-2'>\r\n                <span style={{fontSize: '1.8em'}} className='text-purple-900 font-bold'>Twitee<br/>\r\n                </span> \r\n                <span className='text-md'> Feel free, express yourself & network </span>\r\n            </p>\r\n            <h1 style={{fontSize: 20}} className='font-bold text-md mb-7'>\r\n                {signup ?  'Signup' : 'Login'}\r\n            </h1>\r\n            <input \r\n                type='text'\r\n                name='email'\r\n                value={email} \r\n                placeholder='email'\r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5'\r\n                /><br/>\r\n            <input \r\n                type='password'\r\n                name='password'\r\n                value={password} \r\n                placeholder='password' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5'\r\n            /><br/>\r\n            <div className='flex flex-col mb-3'>\r\n                {error && <span className='mb-2 text-red-600'>{error}</span>}\r\n                <div className='flex justify-center'>\r\n                    {!loading ?\r\n                    <span \r\n                        onClick={() => authenticate(false, email, password, apiUrl, error, setError, setLoading, history)}\r\n                        className='cursor-pointer mb-3 bg-green-500 hover:bg-green-400 py-1 px-6 rounded text-white'\r\n                    >    \r\n                        {signup ? 'Signup' : 'Login' }\r\n                        {/* {' '}{window.innerWidth} */}\r\n                    </span>\r\n                    :\r\n                    <span className=''>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n            </div>\r\n            {!token && <GoogleAuth\r\n                error={error}\r\n                setError={setError}\r\n                loading={loading}\r\n                setLoading={setLoading}\r\n            />}\r\n            {/* <LinkedinAuth /> */} \r\n            <div className='mt-7 mb-6 text-xs'>\r\n                    {signup ? 'Already signed up ?' : 'Not registered ?' }\r\n                    <span className='hover:bg-purple-400 bg-purple-500 ml-2 p-1 rounded text-white font-bold cursor-pointer' onClick={handleSignupMode}> \r\n                        {signup ? ' Switch to Login' : ' Switch to Signup!' }\r\n                    </span>\r\n            </div>\r\n          <img \r\n            src={chat}\r\n            alt='CHat'\r\n            className=''\r\n            style={{borderRadius: '5', width: '100'}}\r\n          />\r\n            <p className=\"text-white-400 bold flex text-center\"><CgCopyright /> Twitee</p>         \r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\n// import Loader from \"react-loader-spinner\";\r\nimport { FaCamera } from \"react-icons/fa\";\r\n\r\nexport default function AttachImage({imageUrl, setImageUrl}) {\r\n    \r\n    const [uploading, setUploading] = useState(\"\");\r\n    const [imgUrl, setImgUrl] = useState(\"\");\r\n\r\n    const handleImage = async(e) => {\r\n        setUploading(\"loading\");\r\n        const serviceImage = e.target.files[0];\r\n        const data = new FormData();\r\n        const url = \"https://api.cloudinary.com/v1_1/thevetdoctor/image/upload\";\r\n        data.append(\"file\", serviceImage);\r\n        data.append(\"upload_preset\", \"zunt8yrw\");\r\n        const res = await fetch(url, {\r\n          method: \"POST\",\r\n          body: data\r\n        });\r\n        const imgLink = await res.json();\r\n        setImgUrl(imgLink.secure_url);\r\n        setImageUrl(imgLink.secure_url);\r\n        // const images = [imgLink.secure_url, ...serviceImages];\r\n        // setServiceImages(images);\r\n        setUploading(\"done\");\r\n      }\r\n    return (\r\n        <div className=\"flex p-1 rounded ml-1\">\r\n            {imgUrl ? \r\n                <img \r\n                    src={imgUrl} alt='post' style={{width: '20em', height: '9em'}} className='rounded'\r\n                /> :\r\n                <>\r\n                {/* <span className='ml-3 cursor-pointer flex'><FaCamera size={25}  /> */}\r\n                <label className='ml-2 cursor-pointer flex'><FaCamera size={25} /> <span className='font-semibold ml-2 text-white pr-2'></span>\r\n\r\n                <input \r\n                    type=\"file\"\r\n                    placeholder=\"\"\r\n                    accept=\"image/*;capture\"\r\n                    className=\"hidden\"\r\n                    onChange={e => handleImage(e)}\r\n                    />\r\n                    </label>\r\n                {/* <span className='ml-2'>Add Image</span> */}\r\n                {/* </span> */}\r\n                </>\r\n            //   {uploading === \"loading\" &&\r\n            //   <Loader \r\n            //       type='TailSpin'\r\n            //       color='#000'\r\n            //       height={20} \r\n            //       width={20} \r\n            //   />}\r\n            //   {/* {<FaCheck />} */}\r\n            }</div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport { baseUrl } from '../helper';\r\nimport AttachImage from './AttachImage';\r\n\r\nexport default function TwitForm(props) {\r\n    const [title, setTitle] = useState(localStorage.getItem('twitTitle') ? localStorage.getItem('twitTitle') : '');\r\n    const [text, setText] = useState(localStorage.getItem('twitText') ? localStorage.getItem('twitText') : '');\r\n    const [imageUrl, setImageUrl] = useState(localStorage.getItem('twitImage') ? localStorage.getItem('twitImage') : '');\r\n    const [textArea, setTextArea] = useState(550);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const token = localStorage.getItem('token'); \r\n    \r\n    const apiUrl = `${baseUrl}/twits/post`; \r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'title') {\r\n            setTitle(e.target.value);\r\n            localStorage.setItem('twitTitle', e.target.value)\r\n        } else {\r\n            setText(e.target.value);\r\n            setTextArea(160 - e.target.value.length)\r\n            localStorage.setItem('twitText', e.target.value)\r\n        }\r\n    }\r\n\r\n    const sendTwit = async() => {\r\n            if(!(title && text)) {\r\n                if(!title) {\r\n                    setError('Title is required');\r\n                    return;\r\n                }\r\n                setError('Inputs required');\r\n                return;\r\n            }\r\n            setLoading(true);\r\n            const res = await axios({\r\n                method: 'POST',\r\n                url: `${apiUrl}`,\r\n                data: {title, text, imageUrl},\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                        setError(error.response.data.error);\r\n                });\r\n                if(res && res.data.success) {\r\n                    setLoading(false);\r\n                    localStorage.removeItem('twitTitle');\r\n                    localStorage.removeItem('twitText');\r\n                    props.setSync(!props.sync);\r\n                    props.showForm();\r\n                } else {\r\n                    setLoading(false);\r\n                }\r\n    }\r\n\r\n    return (\r\n        <div className='sticky w-full h-full bg-gray-200 p-1 -mb-2'>\r\n            <div className='text-center bg-blue-200 mt-3 pt-3 mb-1 pb-1 rounded'>\r\n            <h1 className='font-semibold text-md mb-3'>\r\n                New twit\r\n            </h1>\r\n            <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', borderRadius: '20%'}}>\r\n\r\n            <input \r\n                type='text'\r\n                name='title'\r\n                value={title} \r\n                placeholder='title'\r\n                onChange={handleChange}\r\n                className='px-3 py-1 rounded text-lg mb-2 font-bold'\r\n                style={{width: '16em', border: 'none'}}\r\n                required\r\n                />\r\n            <textarea \r\n                type='textarea'\r\n                name='text'\r\n                rows={4}\r\n                cols={3}\r\n                style={{width: '16em', height: `${imageUrl ? '5em' : '13em'}`, border: 'none'}}\r\n                maxLength={550}\r\n                value={text}\r\n                overflow=\"hidden\"\r\n                placeholder='Drop in your twit ...' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-1 text-lg text-black font-bold'\r\n                required\r\n            />\r\n                <span style={{display: 'flex', width: '20em'}} className='justify-between px-3 mt-2 mb-2 ml-4 mr-2'>\r\n                    <AttachImage imageUrl={imageUrl} setImageUrl={setImageUrl} />\r\n                <span className='mr-6'>{textArea}</span>\r\n                </span>\r\n                </div>\r\n            <div style={{flexDirection: 'column'}} className='flex mb-5'>\r\n                {error && <span className='mb-2 text-red-800 text-md'>{error}</span>}\r\n                <div className='justify-items-center mt-2'>\r\n                    {!loading ?\r\n                    <>\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={() => props.showForm()}\r\n                        className='hover:bg-gray-900 bg-gray-400 text-lg font-medium p-1 rounded text-white'\r\n                        >    \r\n                        Cancel\r\n                    </span>\r\n\r\n                    <span \r\n                    style={{cursor: 'pointer'}}\r\n                    onClick={sendTwit}\r\n                    className='hover:bg-green-900 bg-green-400 text-lg font-bold p-1 rounded text-white mx-2'\r\n                    >    \r\n                        Send\r\n                    </span>\r\n                    </>\r\n                    :\r\n                    <span className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport { baseUrl } from '../helper';\r\n\r\nexport default function CommentForm(props) {\r\n    const [text, setText] = useState('');\r\n    const [textArea, setTextArea] = useState(160);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const token = localStorage.getItem('token'); \r\n    \r\n    const apiUrl = `${baseUrl}/comments`; \r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'text') {\r\n            setText(e.target.value);\r\n            setTextArea(160 - e.target.value.length)\r\n        }\r\n    }\r\n\r\n    const sendComment = async() => {\r\n        if(!props.twitId) return;\r\n        if(!text) {\r\n            setError('Inputs required');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        const res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}/${props.twitId}`,\r\n            data: {text},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .catch(error => {\r\n                    setError(error.response.data.error);\r\n            });\r\n            if(res && res.data.success) {\r\n                setLoading(false);\r\n                props.setSync(!props.sync);\r\n                props.showCommentForm();\r\n            } else {\r\n                setLoading(false);\r\n            }\r\n    }\r\n\r\n    return (\r\n        <div className='text-center pt-4'>\r\n             <p style={{fontSize: '0.9em'}} className='font-bold text-xs mb-3'>\r\n                New Comment\r\n            </p>\r\n            <textarea \r\n                type='textarea'\r\n                name='text'\r\n                rows={5}\r\n                cols={8}\r\n                maxLength={160}\r\n                style={{width: '15em', height: '8em'}}\r\n                value={text} \r\n                placeholder='Drop in your comment ...' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5 h-20 text-md text-gray-600'\r\n                required\r\n            /><br/>\r\n            {textArea}\r\n            <div style={{flexDirection: 'column'}} className='flex mb-5'>\r\n                {error && <span className='mb-2 text-red-800 text-xs'>{error}</span>}\r\n                <div className='justify-items-center'>\r\n                    <span \r\n                        style={{cursor: 'pointer', fontSize: '0.9em'}}\r\n                        onClick={() => props.showCommentForm()}\r\n                        className='hover:bg-gray-900 bg-gray-400 font-medium p-1 rounded text-white'\r\n                    >    \r\n                        Cancel\r\n                    </span>\r\n\r\n                    {!loading ?\r\n                    <span \r\n                        style={{cursor: 'pointer', fontSize: '0.9em'}}\r\n                        onClick={sendComment}\r\n                        className='hover:bg-green-900 text-lg bg-green-400 font-medium p-1 rounded text-white mx-2'\r\n                    >    \r\n                        Send\r\n                    </span>\r\n                    :\r\n                    <span className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const actions = {\r\n    setTwitData: { type: 'SET_TWIT_DATA'},\r\n    setUserCount: { type: 'SET_USER_COUNT'},\r\n    setPeopleData: { type: 'SET_PEOPLE_DATA'},\r\n    setSearchData: { type: 'SET_SEARCH_DATA'},\r\n    setUsersData: { type: 'SET_USERS_DATA'},\r\n    setNewsType: { type: 'SET_NEWS_TYPE'},\r\n    setPage: { type: 'SET_PAGE'},\r\n    setTotalPages: { type: 'SET_TOTAL_PAGES'},\r\n    setSearchQuery: { type: 'SET_SEARCH_QUERY'},\r\n    setNetworkStatus: { type: 'SET_NETWORK_STATUS'}\r\n  }\r\n  \r\n  export default actions;\r\n  ","import actions from \"./actions\";\r\n\r\nexport default function reducer(state= initialState, action) {\r\n    switch(action.type) {\r\n        case actions.setTwitData.type:\r\n\r\n            return {\r\n              ...state,\r\n              twits: action.data\r\n            }          \r\n        case actions.setPeopleData.type:\r\n\r\n            return {\r\n              ...state,\r\n              peopleData: action.data\r\n            }          \r\n        case actions.setSearchData.type:\r\n\r\n            return {\r\n              ...state,\r\n              searchData: action.data\r\n            }          \r\n        case actions.setUsersData.type:\r\n\r\n            return {\r\n              ...state,\r\n              usersData: action.data\r\n            }          \r\n        case actions.setUserCount.type:\r\n\r\n            return {\r\n              ...state,\r\n              users: action.data\r\n            }          \r\n        case actions.setNewsType.type:\r\n            const newsByType = state.newsData.filter(type => (type.type === action.data));\r\n\r\n            return {\r\n              ...state,\r\n              newsType: action.data, news: newsByType, searchQuery: '', page: 1, totalPages: Math.ceil(newsByType.length / state.pageSize)\r\n            }          \r\n            case actions.setPage.type:\r\n            return {\r\n                ...state,\r\n                page: action.data\r\n            }                   \r\n            case actions.setTotalPages.type:\r\n            return {\r\n                ...state,\r\n                totalPages: action.data\r\n            }                   \r\n            case actions.setSearchQuery.type:\r\n                let newsBySearch;\r\n                if(state.newsType === 'Filter By Type') {\r\n                    if(action.data === '') {\r\n                        newsBySearch = state.newsData;\r\n                    } else {\r\n                        newsBySearch = state.newsData.filter(item => {\r\n                            return item?.text?.toLowerCase().indexOf(action.data.toLowerCase()) >= 0;\r\n                        });\r\n                    }\r\n                } else {\r\n                    newsBySearch = state.newsData.filter(item => (item?.text?.toLowerCase().indexOf(action.data.toLowerCase()) >= 0) && (item.type === state.newsType));\r\n                }\r\n                    \r\n                return {\r\n                    ...state,\r\n                    searchQuery: action.data, news: newsBySearch, page: 1, totalPages: Math.ceil(newsBySearch.length / state.pageSize)\r\n                }                   \r\n            case actions.setNetworkStatus.type:\r\n                \r\n            return {\r\n                ...state,\r\n                networkStatus: action.data\r\n            }                   \r\n            default:\r\n                return state;\r\n    }\r\n};\r\n \r\nexport const initialState = {\r\n    twits: [],\r\n    users: 0,\r\n    peopleData: [],\r\n    searchData: [],\r\n    usersData: [],\r\n    searchQuery: '',\r\n    networkStatus: false\r\n};\r\n","import { createStore } from 'redux';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer, devToolsEnhancer());\r\n\r\nexport default store;","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react/jsx-no-target-blank  */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { BsPersonFill, BsChatText } from 'react-icons/bs';\r\nimport { AiTwotoneDelete, AiFillHome } from 'react-icons/ai';\r\nimport { IoIosPeople } from 'react-icons/io';\r\nimport { MdContentCopy } from 'react-icons/md';\r\nimport { BiLike } from 'react-icons/bi';\r\nimport { GrEdit } from 'react-icons/gr';\r\nimport { RiChatNewLine } from 'react-icons/ri';\r\nimport TwitForm from './TwitForm';\r\nimport CommentForm from './CommentForm';\r\nimport { baseUrl, frontendUrl } from '../helper';\r\nimport { Logout } from './GoogleAuth';\r\nimport Loader from 'react-loader-spinner';\r\nimport store from '../redux/store';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Twits() {\r\n    const [error, setError] = useState('');\r\n    const [formActive, setFormActive] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n\r\n    const {getState, dispatch} = store;\r\n    const state = getState();\r\n    const { twits, users, searchQuery, networkStatus } = useSelector(state => state);\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const userId = localStorage.getItem('email') ? localStorage.getItem('userId') : '';\r\n    const img = localStorage.getItem('img') ? localStorage.getItem('img') : '';\r\n    const history = useHistory();\r\n    const token = localStorage.getItem('token');\r\n\r\n    const apiUrl = `${baseUrl}/twits`;\r\n\r\n    const showForm = () => {\r\n        setFormActive(!formActive);\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        history.push('/');\r\n    }\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    setError(error.response?.data?.error);\r\n                }\r\n            });\r\n            setSync(!sync);\r\n    }\r\n\r\n    const getTwits = async() => {\r\n        if(!token) {\r\n            return;\r\n        }\r\n        const res = await axios({\r\n            method: 'GET',\r\n            url: `${apiUrl}`,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    setError(error.response?.data?.error);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                dispatch({\r\n                    type: 'SET_TWIT_DATA',\r\n                    data: res.data.data\r\n                });\r\n                localStorage.setItem('twits', JSON.stringify(res.data.data.map(x => {\r\n                    x.formActive = false;\r\n                    return x;\r\n                })));\r\n            } else {\r\n                setError('Please check your network');\r\n                dispatch({\r\n                    type: 'SET_TWIT_DATA',\r\n                    data: JSON.parse(localStorage.getItem('twits'))\r\n                });\r\n            }\r\n    }\r\n\r\n    const getUsers = async() => {\r\n        const res = await axios({\r\n            method: 'GET',\r\n            url: `${baseUrl}/auth/users`,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    setError(error.response?.data?.error);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                dispatch({\r\n                    type: 'SET_USER_COUNT',\r\n                    data: res.data.data.count\r\n                });\r\n                localStorage.setItem('userCount', res.data.data.count);\r\n            } else {\r\n                setError('Error found');\r\n                setError('Please check your network');\r\n                dispatch({\r\n                    type: 'SET_USER_COUNT',\r\n                    data: JSON.parse(localStorage.getItem('userCount'))\r\n                });\r\n            }\r\n    }\r\n\r\n    const checkOpenForms = () => {\r\n        let closedTwits = twits.map(twit => {\r\n            twit.formActive = false;\r\n            return twit;\r\n        });\r\n    }\r\n\r\nuseEffect(() => {\r\n    if(!token) {\r\n        history.push('/');\r\n    }\r\n    getUsers();\r\n    return () => {\r\n    }\r\n}, []);\r\n\r\nuseEffect(() => {\r\n    if(!token) {\r\n        history.push('/');\r\n    }\r\n    getUsers();\r\n    return () => {\r\n    }\r\n}, []);\r\n\r\nuseEffect(async() => {\r\n    getTwits();\r\n\r\n    return () => {\r\n    }\r\n}, [sync]);\r\n\r\nuseEffect(() => {\r\n    setTimeout(() => {\r\n        const id = window.location.hash.replace('#', '');\r\n        const element = document.getElementById(id);\r\n        if (element) element.scrollIntoView();\r\n      }, 0);\r\n});\r\n\r\n    return (\r\n        <div style={{fontFamily: 'Roboto', fontWeight: '600', height: '90vh'}} className='mb-5 p-3'>\r\n            <span style={{cursor: 'pointer', borderRadius: '50%'}} className='fixed bottom-16 right-4 bg-green-500 p-4 text-white'><RiChatNewLine size={25} onClick={showForm} /></span>\r\n            {formActive && <TwitForm error={error} showForm={showForm} sync={sync} setSync={setSync}/>}\r\n            \r\n            {!formActive && \r\n            <div>\r\n                <p style={{fontFamily: 'Architects Daughter', fontWeight: '300'}} className='italic text-center mb-2'>\r\n                    <span style={{fontSize: '1.8em'}} className='text-purple-900 font-bold'>Twitee<br/>\r\n                    </span> \r\n                    <span style={{fontSize: '1em'}}> Feel free, express yourself & network </span>\r\n                </p>\r\n                <div className='py-2 px-2 rounded mb-4 flex justify-between border-3 border shadow-md'>\r\n                    {img !== 'null' ? (\r\n                        <span className='cursor-pointer'  onClick= {e => history.push(`/${email.split('@')[0]}`)}>\r\n                            {error ? <BsPersonFill size={25} />:\r\n                            <img src={img} alt='Profile' style={{width: '30px', height: '30px', borderRadius: '50%'}} />}\r\n                        </span>) \r\n                        : <span className='text-left'><AiFillHome size={25} /></span>}\r\n                    {users > 0 && <span className='text-left flex cursor-pointer'  onClick= {e => history.push('people')}><IoIosPeople size={30}/><span className='pt-1 pl-1'>{users}</span></span>}\r\n                    \r\n                    <span style={{cursor: 'pointer'}} className='text-right' onClick={logout}><Logout />\r\n                    </span>\r\n                </div>\r\n                {error && <div style={{fontFamily: 'Roboto', backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 m-1 rounded'>Please check your network !</div>}\r\n\r\n                <div className=''>\r\n                {\r\n                    twits.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()).map((twit, idx) => \r\n                        <Twit key={idx} twit={twit} email={email} userId={userId} apiCallHook={apiCallHook} baseUrl={baseUrl} frontendUrl={frontendUrl} sync={sync} setSync={setSync} showForm={showForm} formActive={formActive} checkOpenForms={checkOpenForms} error={error} />\r\n                    )\r\n                }\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Twit = (props) => {\r\n    let { twit: {id, title, text, imageUrl, twits, likes, comments, createdAt, updatedAt }, email, userId, apiCallHook, baseUrl, frontendUrl, sync, setSync, checkOpenForms, error } = props;\r\n    const [commentFormActive, setCommentFormActive] = useState(false);\r\n    const [editLoading, setEditLoading] = useState(false);\r\n    const [likeLoading, setLikeLoading] = useState(false);\r\n    const [deleteLoading, setDeleteLoading] = useState(false);\r\n    const [storyText, setStoryText] = useState(text);\r\n    const [editForm, setEditForm] = useState(false);\r\n    const [linkCopied, setLinkCopied] = useState(false);\r\n    const [more, setMore] = useState(false);\r\n    const [viewComments, setViewComments] = useState(false);\r\n\r\n    const history = useHistory();\r\n    const filteredComments = comments.filter(comment => !comment.isDeleted);\r\n    const handleStoryChange = (e) => {\r\n        setStoryText(e.target.value);\r\n    }\r\n\r\n    let link;\r\n    if(text.search('http') >= 0) {\r\n        const http = text.split(' ').filter(x => x.search('http') >= 0);\r\n        link = http[0].split('\\n').filter(x => x.search('http') >= 0);\r\n        text = text.replace(link, '')\r\n    }\r\n    const isLiked = (() => {\r\n        const liked = likes.filter(like => like.userlikes.email === email && like.isLiked === true);\r\n       return liked.length ? true : false;\r\n    })();\r\n\r\n    const showMore = () => {\r\n        if(more) {\r\n            setMore(false);\r\n        } else {\r\n            setMore(true);\r\n        }\r\n    }\r\n\r\n    const showComments = () => {\r\n        if(viewComments) {\r\n            setViewComments(false);\r\n        } else {\r\n            setViewComments(true);\r\n        }\r\n    }\r\n\r\n    const copyTwitLink = () => {\r\n        clipboardCopy(`${frontendUrl}/#${id}`);\r\n        setTimeout(() => {\r\n            setLinkCopied(false);\r\n        }, 1000);\r\n    }\r\n\r\n    const editStory = () => {\r\n        setEditForm(!editForm);\r\n        setStoryText(text);\r\n    }\r\n   \r\n    const updateStory = () => {\r\n        apiCallHook('PATCH', `${baseUrl}/twits/${id}`, {text: storyText});\r\n        setEditLoading(true);\r\n        setTimeout(() => {\r\n            setEditLoading(false);\r\n            setEditForm(false);\r\n        }, 1000);\r\n    }\r\n    const likeCount = likes.filter(like => like.isLiked).length;\r\n    const showCommentForm = () => {\r\n        setCommentFormActive(!commentFormActive);\r\n        props.twit.formActive = !commentFormActive;\r\n    }\r\n    \r\n    const likeTwit = () => {\r\n        setLikeLoading(true);\r\n        setTimeout(() => {\r\n            setLikeLoading(false);\r\n        }, 1000);\r\n        apiCallHook('POST', `${baseUrl}/likes/like/${id}`);\r\n    }\r\n    const commentTwit = () => {\r\n        showCommentForm();\r\n    }\r\n    const deleteTwit = () => {\r\n        setDeleteLoading(true);\r\n        setTimeout(() => {\r\n            setDeleteLoading(false);\r\n        }, 1000);\r\n        apiCallHook('DELETE', `${baseUrl}/twits/${id}`);\r\n    }\r\n\r\n    const clipboardCopy = async (text) => {\r\n        if ('clipboard' in navigator) {\r\n            setLinkCopied(true);\r\n          return await navigator.clipboard.writeText(text);\r\n        } else {\r\n        }\r\n      }\r\n\r\n    return (\r\n    <div id={`${id}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-2'>\r\n            <span></span>\r\n            <span style={{fontFamily: 'Roboto Slab'}} className='text-xl font-bold self-center'>{title}</span>\r\n            <span className={!linkCopied ? 'mr-2 mb-1 invisible text-xs self-end' : 'mr-2 mb-1 text-xs self-end'}>copied</span>\r\n        </p>\r\n        <span className='text-xs mb-2 flex justify-between'>\r\n            <Moment fromNow>{createdAt}</Moment>\r\n            <span className='flex'>\r\n            {(email === twits.email) && !editForm && \r\n                <span className='cursor-pointer mr-2 text-black p-2 -mt-2 rounded-full' onClick={() => editStory()}> \r\n                    <GrEdit size={15} />\r\n                </span>\r\n            }\r\n                <span className={linkCopied ? 'flex-col rounded-full p-2 text-white bg-blue-900 cursor-pointer -mt-2 mr-1' : 'rounded-full p-2 cursor-pointer -mt-2 mr-1'} onClick={() => copyTwitLink()}> \r\n                    <MdContentCopy  size={15} />\r\n                </span>\r\n            </span>\r\n        </span>\r\n        {editForm && <div className='mb-5'>\r\n                <textarea \r\n                    className='border-gray-200 border-2 p-2 mb-2 rounded bg-white-300 focus:outline-none text-black'\r\n                    style={{width: '100%'}}\r\n                    cols={3}\r\n                    rows={4}\r\n                    maxLength={550}\r\n                    value={storyText}\r\n                    onChange={handleStoryChange}\r\n                    required={true}\r\n                    /><br />\r\n                {!editLoading ? \r\n                 <>\r\n                    <span \r\n                        className='text-xs cursor-pointer bg-gray-500 p-2 m-2 text-white rounded hover:bg-gray-400' onClick={() => editStory()}\r\n                    > \r\n                        Cancel \r\n                    </span>\r\n                    <span \r\n                    className='text-xs cursor-pointer bg-green-600 p-2 mb-2 text-white rounded hover:bg-green-400 hover:text-black' onClick={() => updateStory()}\r\n                    > \r\n                        Update Story \r\n                    </span>\r\n                </>\r\n                :\r\n                    <LoadSpan height={20} width={20} color='#00bfff' />}\r\n                </div>}\r\n\r\n        {!editForm && <div style={{fontSize: '0.9em', lineHeight: 2}} className='mt-2'>\r\n            {text.length > 100 ? text.slice(0, 100) : text}{link && <a className='underline' href={link} target='_blank'>link</a>}\r\n            {more ? \r\n                <>{text.slice(100)}\r\n                    <>{text.length > 100 && \r\n                        <span style={{color: 'gray', fontWeight: '0.3em'}} className='cursor-pointer' onClick={showMore}>\r\n                            ...<span className='underline'>See less</span>\r\n                        </span>\r\n                        }\r\n                    </>\r\n                </> :\r\n                <>\r\n                    {text.length > 100 && \r\n                        <span style={{color: 'gray', fontWeight: '0.3em'}} className='cursor-pointer' onClick={showMore}>\r\n                            ...<span className='underline'>See more</span>\r\n                        </span>\r\n                    }\r\n                </>\r\n            }\r\n        \r\n        <br />\r\n        {((new Date(updatedAt).getTime() - new Date(createdAt).getTime()) > 0) && <span className='text-xs'>Updated <Moment fromNow>{updatedAt}</Moment></span>}\r\n        </div>}\r\n        <span>\r\n            {imageUrl && <img src={imageUrl} width='100%' alt='imgurl' className='rounded' />}\r\n        </span>\r\n        {/* likes and comments count section */}\r\n            {(likeCount > 0 || comments.length > 0) && \r\n            <div className='flex text-xs p-1 px-3 mt-1 -mx-4'>\r\n                {likeCount > 0 && <span className='mr-2'>{likeCount}{' '} {likeCount > 1 ? 'likes' : 'like'} </span>}\r\n                {filteredComments.length > 0 && <span className=''>{filteredComments.length}{' '} {filteredComments.length > 1 ? 'comments' : 'comment'} </span>}\r\n            </div>}\r\n\r\n        {/*  */}\r\n        <div style={{fontSize: '0.9em'}} className='justify-between text-gray-800 flex mt-1 pt-2 -mb-3 -ml-5 -mr-5 pt-1 border-t-2'>\r\n            <span className='mx-1 flex cursor-pointer'  onClick= {e => history.push(`/${twits.username}`)}>\r\n                {twits.imageUrl ? (\r\n                <span className='mr-1'>\r\n                    {error ? <BsPersonFill size={18}/>:\r\n                    <img src={twits.imageUrl} alt='Profile' style={{width: '20px', height: '20px', borderRadius: '50%'}} />}\r\n                </span>)\r\n                : <BsPersonFill size={18}/>}\r\n                {email === twits.email ? 'Me' : twits.username}\r\n            </span>\r\n            <span className='flex'>\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex' onClick={() => likeTwit()}>\r\n               {!likeLoading ? \r\n               <>\r\n               <span className={isLiked ? 'text-blue-500' : 'text-gray-500'}><BiLike size={20}/></span>\r\n                </>:\r\n                <LoadSpan height={20} width={18} color='#00bfff' />}\r\n            </span>\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex text-gray-500' onClick={() => commentTwit()}>\r\n                <BsChatText size={18}/>\r\n            </span>\r\n            {email === twits.email &&\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex hover:text-red-800' onClick={() => deleteTwit()}>\r\n                {!deleteLoading ? \r\n                <AiTwotoneDelete size={20} color='red'/>:\r\n                <LoadSpan height={20} width={20} color='#00bfff' />}\r\n            </span>}\r\n            </span>\r\n        </div>\r\n        {commentFormActive && <CommentForm twitId={id} showCommentForm={showCommentForm} sync={sync} setSync={setSync}/>}\r\n        \r\n        {filteredComments.length > 0 &&\r\n        <div className='mt-5'><span className='text-xs mt-4 -mb-2 cursor-pointer shadow-sm border-2 p-2' onClick={showComments}>{viewComments ? 'Hide Comments' : 'View Comments'}</span></div>\r\n        }\r\n        {viewComments && \r\n            <>{comments.length > 0 && \r\n                    (<div className='mt-4 rounded'>\r\n                        {filteredComments.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()).map((comment, idx) => (\r\n                            <Comment key={idx} comment={comment} apiCallHook={apiCallHook} email={email} userId={userId} />\r\n                        )\r\n                    )}\r\n                </div>)\r\n            }</>\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nconst Comment = (props) => {\r\n    const { comment: { id, text, usercomments, likecomments, createdAt }, email, userId, apiCallHook } = props;\r\n\r\n    const [likeLoading, setLikeLoading] = useState(false);\r\n    const [deleteLoading, setDeleteLoading] = useState(false);\r\n    const [more, setMore] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const showMore = () => {\r\n        if(more) {\r\n            setMore(false);\r\n        } else {\r\n            setMore(true);\r\n        }\r\n    }\r\n\r\n    const isLiked = (() => {\r\n        const liked = likecomments.filter(like => like.userId === userId && like.isLiked === true);\r\n       return liked.length ? true : false;\r\n    })();\r\n\r\n    const likeCount = likecomments?.filter(like => like.isLiked).length;\r\n    const likeComment = () => {\r\n        setLikeLoading(true);\r\n        setTimeout(() => {\r\n            setLikeLoading(false);\r\n        }, 1000);\r\n        apiCallHook('POST', `${baseUrl}/likecomments/like/${id}`);\r\n    }\r\n    const deleteComment = () => {\r\n        setDeleteLoading(true);\r\n        setTimeout(() => {\r\n            setLikeLoading(false);\r\n        }, 1000);\r\n        apiCallHook('DELETE', `${baseUrl}/comments/${id}`);\r\n    }\r\n\r\n    return(\r\n        <div className='border border-gray-200 shadow-lg mb-2 p-1 rounded'>\r\n            <span className='text-xs mb-2 ml-2'>\r\n            <Moment fromNow>{createdAt}</Moment>\r\n            </span>\r\n            <p style={{fontSize: '0.9em', lineHeight: 2}} className='p-2 font-semibold'>\r\n            {text.length > 100 ? text.slice(0, 100) : text}\r\n            {more ? \r\n                <>{text.slice(100)}\r\n                    <>{text.length > 100 && \r\n                        <span style={{color: 'gray', fontWeight: '0.3em'}} className='cursor-pointer' onClick={showMore}>\r\n                            ...<span className='underline'>See less</span>\r\n                        </span>\r\n                        }\r\n                    </>\r\n                </> :\r\n                <>\r\n                    {text.length > 100 && \r\n                        <span style={{color: 'gray', fontWeight: '0.3em'}} className='cursor-pointer' onClick={showMore}>\r\n                            ...<span className='underline'>See more</span>\r\n                        </span>\r\n                    }\r\n                </>\r\n            }\r\n            </p>\r\n\r\n        {/* likes and comments count section */}\r\n\r\n        {/* TODO refactor for replies count */}\r\n        {(likeCount > 0) && \r\n            <div className='flex text-xs p-1 px-3 mt-1 -mx-1'>\r\n                {likeCount > 0 && <span className='mr-2'>{likeCount}{' '} {likeCount > 1 ? 'likes' : 'like'} </span>}\r\n                {/* TODO refactor for replies count */}\r\n            </div>}\r\n\r\n        {/*  */}\r\n            <div style={{fontSize: '0.9em'}} className='flex justify-between text-gray-800 flex mt-1 mb-1 pt-2 -ml-1 -mr-1 border-t-2 border-gray-200'>\r\n                <span className='mx-1 flex cursor-pointer'  onClick= {e => history.push(`/${usercomments.username}`)}>\r\n                    {usercomments.imageUrl ? (\r\n                    <span className='mr-1'>\r\n                        {'error' ? <BsPersonFill size={20}/>:\r\n                        <img src={usercomments.imageUrl} alt='Profile' style={{width: '20px', height: '20px', borderRadius: '50%'}} />}\r\n                    </span>)\r\n                    : <BsPersonFill size={20}/>}\r\n                    {email === usercomments.email ? 'Me' : usercomments.username}\r\n                </span>\r\n                <span className='flex'>\r\n                <span style={{cursor: 'pointer'}} className='mx-2 flex' onClick={() => likeComment()}>\r\n                {!likeLoading ? \r\n                <>\r\n                <span className={isLiked ? 'text-blue-500' : 'text-gray-500'}><BiLike size={20}/></span>\r\n                    </>:\r\n                    <LoadSpan height={20} width={18} color='#00bfff' />}\r\n                </span>\r\n                {/* TODO Implement reply comment component */}\r\n             \r\n                {email === usercomments.email &&\r\n                <span style={{cursor: 'pointer'}} className='mx-2 flex hover:text-red-800' onClick={() => deleteComment()}>\r\n                    {!deleteLoading ? \r\n                    <AiTwotoneDelete size={20} color='red'/>:\r\n                    <LoadSpan height={20} width={20} color='#00bfff' />}\r\n                </span>}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const LoadSpan = ({height, width, color}) => (\r\n            <span \r\n            className='m-auto mr-4'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color={color}\r\n                        height={height} \r\n                        width={width} \r\n                        />\r\n            </span>\r\n            )","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { BsPersonFill } from 'react-icons/bs';\r\nimport { IoIosArrowBack, IoIosPeople } from 'react-icons/io';\r\nimport Moment from 'react-moment';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../helper';\r\nimport { LoadSpan } from './Twits';\r\nimport store from '../redux/store';\r\nimport { useSelector } from 'react-redux';\r\nimport { AiFillHome } from 'react-icons/ai';\r\n\r\nexport default function Profile() {\r\n    const [error, setError] = useState('');\r\n    const [ userData, setUserData ] = useState({});\r\n    const [ isFollower, setIsFollower ] = useState(false);\r\n    const [ isFollowing, setIsFollowing ] = useState(false);\r\n    const [ followerCount, setFollowerCount ] = useState(0);\r\n    const [ followingCount, setFollowingCount ] = useState(0);\r\n    const [ twitCount, setTwitCount ] = useState(0);\r\n    const [followLoading, setFollowLoading] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    let { user } = useParams();\r\n    const history = useHistory();\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const token = localStorage.getItem('token');\r\n    const {getState, dispatch} = store;\r\n    const state = getState();\r\n    const { twits } = useSelector(state => state);\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        const res = await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    setError(error.response?.data?.error);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                    if(method === 'GET') {\r\n                    dispatch({\r\n                        type: 'SET_USERS_DATA',\r\n                        data: res.data.data.users\r\n                    });\r\n                    localStorage.setItem('usersData', JSON.stringify(res.data.data.users));\r\n                    localStorage.setItem('users', JSON.stringify(res.data.data.users));\r\n                    const userTwits = twits.filter(obj => obj.twits.username === user);\r\n                    const userDataInStore = res.data.data.users.filter(obj => obj.username === user)[0];\r\n                    const followers = userDataInStore.followers.filter(user => user.follower.isFollowed);\r\n                    const following = userDataInStore.following.filter(user => user.follower.isFollowed);\r\n                    const checkIsFollower = followers.filter(user => user.email === email).length > 0;\r\n                    const checkIsFollowing = following.filter(user => user.email === email).length > 0;\r\n                    setUserData(userDataInStore);\r\n                    setFollowerCount(followers.length);\r\n                    setFollowingCount(following.length);\r\n                    setIsFollower(checkIsFollower);\r\n                    setIsFollowing(checkIsFollowing);\r\n                    setTwitCount(userTwits.length);\r\n\r\n                    setError('');\r\n                } else{\r\n                    setSync(!sync);\r\n                }\r\n            } else {\r\n                setError('Please check your network');\r\n                dispatch({\r\n                    type: 'SET_USERS_DATA',\r\n                    data: JSON.parse(localStorage.getItem('usersData'))\r\n                });\r\n                const userTwits = twits.filter(obj => obj.twits.username === user);\r\n                const userDataInStore = JSON.parse(localStorage.getItem('usersData')).filter(obj => obj.username === user)[0];\r\n                const followers = userDataInStore.followers.filter(user => user.follower.isFollowed);\r\n                const following = userDataInStore.following.filter(user => user.follower.isFollowed);\r\n                const checkIsFollower = followers.filter(user => user.email === email).length > 0;\r\n                const checkIsFollowing = following.filter(user => user.email === email).length > 0;\r\n                setUserData(userDataInStore);\r\n                setFollowerCount(followers.length);\r\n                setFollowingCount(following.length);\r\n                setIsFollower(checkIsFollower);\r\n                setIsFollowing(checkIsFollowing);\r\n                setTwitCount(userTwits.length);         \r\n            }\r\n    }\r\n\r\n    const handleFollow = () => {\r\n        setFollowLoading(true);\r\n        setTimeout(() => {\r\n            setFollowLoading(false);\r\n        }, 1000);\r\n        if(isFollower) {\r\n            apiCallHook('PATCH', `${baseUrl}/followers/unfollow`, {followerId: userData?.id});\r\n        } else {\r\n            apiCallHook('POST', `${baseUrl}/followers/follow`, {followerId: userData?.id});\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        apiCallHook('GET', `${baseUrl}/auth/users`);\r\n        return () => {\r\n        }\r\n    }, [sync]);\r\n\r\n\r\n    return (\r\n        <div id={`${user}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 h-full rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-6'>\r\n            <span className='cursor-pointer' onClick={() => history.goBack()}><IoIosArrowBack size={30} /></span>\r\n            {<span className='flex cursor-pointer' onClick= {e => history.push('people')}><IoIosPeople size={35}/></span>}\r\n            <span className='bg-black-400 cursor-pointer' onClick={() => history.push(\"/twits\")}><AiFillHome size={28} /></span>\r\n        </p>\r\n        <div className='-mt-4 mb-1'>\r\n        <>\r\n            {userData?.imageUrl ?\r\n            <span className='flex'>\r\n                    {error ? <BsPersonFill size={'1.7em'} color='black' />:\r\n                <img src={userData?.imageUrl} alt='Profile' style={{width: '2em', height: '2em', borderRadius: '50%'}} />}\r\n                <span className='text-xl font-semibold ml-2 mb-2'>{userData?.username}</span>\r\n            </span>\r\n            : \r\n            <span className='flex'>\r\n                <BsPersonFill size={30} />\r\n                <span className='text-xl font-semibold ml-2 mb-2'>{userData?.username}</span>\r\n            </span>}\r\n            </>\r\n        </div>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 mb-5 rounded'>{error}</div>}\r\n        <span className='text-sm mt-3 mb-1 flex justify-between'>\r\n            <span>\r\n                <span className=''>Member since : <Moment fromNow>{userData?.createdAt}</Moment></span><br />\r\n                {isFollowing && <span className='text-xs text-white bg-gray-500 rounded p-1 mb-3'> \r\n                    Follows you\r\n                </span>}\r\n            </span>\r\n            <span className='flex'>\r\n            {(email !== userData?.email) && \r\n                <>\r\n                {!followLoading ? \r\n                    <span className='flex flex-col'>\r\n                        <span className={'text-white bg-blue-900 rounded hover:bg-blue-400 p-1 cursor-pointer -mt-2 mr-1'} onClick={() => handleFollow()}> \r\n                        {!isFollower ? 'Follow' : 'Following'}\r\n                        </span>\r\n                        <span className={'invisible -mt-2 mr-1'}></span>\r\n                    </span>\r\n                    :\r\n                    <LoadSpan height={20} width={20} color='' />}\r\n                </>\r\n            }\r\n            </span>\r\n        </span>\r\n        <div className='flex justify-between text-sm mt-5'>\r\n            <span>\r\n                {followerCount > 0 && <span className={'text-white bg-blue-500 rounded hover:bg-blue-400 p-2 cursor-pointer mr-3'}  onClick= {e => history.push(`/follower/${user}`)}> \r\n                        {followerCount} {followerCount  > 1 ? 'followers' : 'follower'}\r\n                </span>}\r\n                {followingCount > 0 && <span className={' text-white bg-green-500 rounded hover:bg-green-400 p-2 cursor-pointer mr-3'}  onClick= {e => history.push(`/following/${user}`)}> \r\n                        {followingCount} following\r\n                </span>}\r\n                {twitCount > 0 && <span className={' text-white bg-yellow-500 rounded hover:bg-yellow-400 p-2 cursor-pointer mr-3'}  onClick= {e => history.push(`/twits/${user}`)}> \r\n                        {twitCount} {twitCount  > 1 ? 'posts' : 'post'}\r\n                </span>}\r\n            </span>\r\n           \r\n        </div>\r\n        <span>\r\n            {userData?.imageUrl ? \r\n            <>{error ? <BsPersonFill size={300} color='black' />:\r\n            <img src={userData?.imageUrl} width='100%' alt='imgurl' className='mt-3 rounded-lg' />}</>\r\n            :\r\n            <div className='flex'>\r\n                <span className='m-auto'><BsPersonFill size={300} /></span>\r\n            </div>}\r\n        </span>\r\n        \r\n        \r\n    </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n// import { FaSearch } from \"react-icons/fa\";\r\n\r\nexport default function TopSearch({searchQuery, setSearchQuery, handleChange}) {\r\n\r\n    return (\r\n        <div className=\"flex mb-2 rounded\">\r\n            <div className='flex-grow'>\r\n                <input \r\n                    type='text'\r\n                    name='top-search'\r\n                    value={searchQuery}\r\n                    placeholder='Search friends'\r\n                    required\r\n                    onChange={handleChange}\r\n                    className='p-2 text-dark-3 text-md rounded font-semibold text-center bg-white-200 w-full outline-none'\r\n                />\r\n            </div>\r\n            {searchQuery && <div className='flex text-white font-bold bg-blue-900 hover:bg-blue-500 cursor-pointer px-3 rounded items-center' onClick={() => setSearchQuery('')}>\r\n                {/* <FaSearch\r\n                    className='w-6 h-6 text-white' \r\n                /> */}\r\n                Clear\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { IoCloseCircle } from 'react-icons/io5';\r\nimport { BsPersonFill } from 'react-icons/bs';\r\nimport { IoIosArrowBack, IoIosPeople } from 'react-icons/io';\r\nimport Moment from 'react-moment';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../helper';\r\nimport { LoadSpan } from './Twits';\r\nimport TopSearch from './TopSearch';\r\nimport store from '../redux/store';\r\nimport { useSelector } from 'react-redux';\r\nimport { AiFillHome } from 'react-icons/ai';\r\n\r\nexport default function People() {\r\n    const [error, setError] = useState('');\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [ userData, setUserData ] = useState({});\r\n    // const [ searchData, setSearchData ] = useState([]);\r\n    // const [ peopleData, setPeopleData ] = useState([]);\r\n    const [ isFollower, setIsFollower ] = useState(false);\r\n    const [ isFollowing, setIsFollowing ] = useState(false);\r\n    const [ followerCount, setFollowerCount ] = useState(0);\r\n    const [ followingCount, setFollowingCount ] = useState(0);\r\n    const [followLoading, setFollowLoading] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    let { user } = useParams();\r\n    const history = useHistory();\r\n\r\n    const {getState, dispatch} = store;\r\n    const state = getState();\r\n    const { twits, users, peopleData, searchData, networkStatus } = useSelector(state => state);\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const token = localStorage.getItem('token');\r\n\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        setSearchQuery(value);\r\n      \r\n    }\r\n\r\n    const handleSearch = () => {\r\n        const searchResults = peopleData.filter(person => {\r\n            return person.username.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0;\r\n        });\r\n        dispatch({\r\n            type: 'SET_SEARCH_DATA',\r\n            data: searchResults\r\n        });\r\n        localStorage.setItem('searchData', JSON.stringify(searchResults));\r\n    }\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        const res = await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    setError(error.response?.data?.error);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                    if(method === 'GET') {\r\n                    setUserData(res.data.data.user);\r\n                    dispatch({\r\n                        type: 'SET_PEOPLE_DATA',\r\n                        data: res.data.data.users\r\n                    });\r\n                    localStorage.setItem('peopleData', JSON.stringify(res.data.data.users));\r\n                    dispatch({\r\n                        type: 'SET_SEARCH_DATA',\r\n                        data: res.data.data.users\r\n                    });\r\n                    localStorage.setItem('searchData', JSON.stringify(res.data.data.users));\r\n                    localStorage.setItem('users', JSON.stringify(res.data.data.users));\r\n                    setError('');\r\n                } else{\r\n                    setSync(!sync); \r\n                }\r\n            } else {\r\n                setError('Please check your network');\r\n                dispatch({\r\n                    type: 'SET_PEOPLE_DATA',\r\n                    data: JSON.parse(localStorage.getItem('peopleData'))\r\n                });            \r\n                dispatch({\r\n                    type: 'SET_SEARCH_DATA',\r\n                    data: JSON.parse(localStorage.getItem('peopleData'))\r\n                });            \r\n            }\r\n    }\r\n\r\n    const handleFollow = () => {\r\n        setFollowLoading(true);\r\n        setTimeout(() => {\r\n            setFollowLoading(false);\r\n        }, 1000);\r\n        if(isFollower) {\r\n            apiCallHook('PATCH', `${baseUrl}/followers/unfollow`, {followerId: userData?.id});\r\n        } else {\r\n            apiCallHook('POST', `${baseUrl}/followers/follow`, {followerId: userData?.id});\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        apiCallHook('GET', `${baseUrl}/auth/users`);\r\n        dispatch({\r\n            type: 'SET_SEARCH_DATA',\r\n            data: JSON.parse(localStorage.getItem('peopleData'))\r\n        });\r\n\r\n        return () => {\r\n        }\r\n    }, [sync]);\r\n  \r\n    useEffect(() => {\r\n        handleSearch();\r\n        \r\n        return () => {\r\n        }\r\n    }, [searchQuery]);\r\n    return (\r\n        <div id={`${user}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 h-full rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-6'>\r\n            <span className='cursor-pointer text-left' onClick={() => history.goBack()}><IoIosArrowBack size={30} /></span>\r\n            {/* <span className='text-left'><IoIosPeople size={25} /></span> */}\r\n            <span style={{fontFamily: 'Roboto Slab'}} className='text-xl font-bold self-center'>People</span>\r\n            <span className='text-left bg-black-400 cursor-pointer hover:invisible' onClick={() => history.push(\"/twits\")}><AiFillHome size={28} /></span>\r\n        </p>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 m-1 rounded'>Please check your network !</div>}\r\n        <span className='text-sm mt-3 mb-5'>\r\n        </span>\r\n        <TopSearch searchQuery={searchQuery} handleChange={handleChange} setSearchQuery={setSearchQuery}/>\r\n        <div className='flex flex-col text-md'>\r\n            {searchData.sort((a, b) => a.email.localeCompare(b.email)).map((person, idx) => (\r\n                <span key={idx} \r\n                    className={'bg-gray-200 rounded hover:bg-gray-400 p-2 mb-2 cursor-pointer'} \r\n                    onClick= {() => history.push(`/${person.username}`)}\r\n                > \r\n                <span className='mx-2 flex cursor-pointer'  onClick= {e => history.push(`/${person.username}`)}>\r\n                {person.imageUrl ? (\r\n                <span className='mr-2'>\r\n                    {error ? <BsPersonFill size={'1.5em'} color='black' />:\r\n                    <img src={person.imageUrl} alt='Profile' style={{width: '1.5em', height: '1.5em', borderRadius: '50%'}} />}\r\n                </span>)\r\n                : <span className='mr-2 text-black'><BsPersonFill size={'1.5em'}/></span>}\r\n                {email === person.email ? 'Me' : person.username}\r\n            </span>\r\n                </span>\r\n            ))}\r\n        </div>\r\n        <div className='flex'>\r\n            <span className='m-auto'><IoIosPeople size={300} /></span>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { IoCloseCircle } from 'react-icons/io5';\r\nimport { BsPersonFill } from 'react-icons/bs';\r\nimport { IoIosArrowBack, IoIosPeople } from 'react-icons/io';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../helper';\r\nimport { LoadSpan } from './Twits';\r\nimport TopSearch from './TopSearch';\r\nimport { AiFillHome } from 'react-icons/ai';\r\n\r\nexport default function Follower() {\r\n    const [error, setError] = useState('');\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [ userData, setUserData ] = useState({});\r\n    const [ searchData, setSearchData ] = useState([]);\r\n    const [ peopleData, setPeopleData ] = useState([]);\r\n    const [followLoading, setFollowLoading] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    let { user } = useParams();\r\n    const history = useHistory();\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const token = localStorage.getItem('token');\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        setSearchQuery(value);  \r\n    }\r\n\r\n    const handleSearch = () => {\r\n        const searchResults = peopleData.filter(person => {\r\n            return person.username.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0;\r\n        });\r\n        setSearchData(searchResults);\r\n    }\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        const res = await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                    if(method === 'GET') {\r\n                    setUserData(res.data.data.user);\r\n                    setPeopleData(res.data.data.users);\r\n                    setSearchData(res.data.data.users);\r\n                    localStorage.setItem('users', JSON.stringify(res.data.data.users));\r\n                    setError('');\r\n                } else{\r\n                    setSync(!sync); \r\n                }\r\n            } else {\r\n                setError('Please check your network');\r\n            }\r\n    }\r\n\r\n    const handleFollow = () => {\r\n        setFollowLoading(true);\r\n        setTimeout(() => {\r\n            setFollowLoading(false);\r\n        }, 1000);\r\n            apiCallHook('PATCH', `${baseUrl}/followers/unfollow`, {followerId: userData?.id});\r\n    }\r\n  \r\n    useEffect(() => {\r\n        handleSearch();\r\n        \r\n        return () => {\r\n        }\r\n    }, [searchQuery]);\r\n    \r\n    useEffect(() => {\r\n        const userDataInStore = JSON.parse(localStorage.getItem('users')).filter(obj => obj.username === user)[0];\r\n        const followers = userDataInStore.followers.filter(user => user.follower.isFollowed);\r\n        setUserData(userDataInStore);\r\n        setSearchData(followers);\r\n        setPeopleData(followers);\r\n    }, []);\r\n    \r\n    return (\r\n        <div id={`${user}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 h-full rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-6'>\r\n            <span className='cursor-pointer' onClick={() => history.goBack()}><IoIosArrowBack size={30} /></span>\r\n            {/* <span className='cursor-pointer' onClick= {e => history.push(`/${userData?.username}`)}> */}\r\n            {/* {userData?.imageUrl ?\r\n            <span>\r\n                <img src={userData?.imageUrl} alt='Profile' style={{width: '2em', height: '2em', borderRadius: '50%'}} />\r\n            </span>\r\n            : \r\n            <span className=''><BsPersonFill size={25} /></span>} */}\r\n            {/* </span> */}\r\n            <span className='text-xl font-bold -ml-8'>Followers</span>\r\n            <span className='text-left bg-black-400 cursor-pointer hover:invisible' onClick={() => history.push(\"/twits\")}><AiFillHome size={28} /></span>\r\n        </p>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 m-1 rounded'>Please check your network !</div>}\r\n        <span className='text-sm mt-3 mb-5'>\r\n        </span>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 mb-5 rounded'>{error}</div>}\r\n        <div className='-mt-4 mb-1'>\r\n        <>\r\n            {userData?.imageUrl ?\r\n            <span className='flex'>\r\n                    {error ? <BsPersonFill size={'1.7em'} color='black' />:\r\n                <img src={userData?.imageUrl} alt='Profile' style={{width: '2em', height: '2em', borderRadius: '50%'}} />}\r\n                <span className='text-xl font-semibold ml-2 mb-2'>{userData?.username}</span>\r\n            </span>\r\n            : \r\n            <span className='flex'>\r\n                <BsPersonFill size={30} />\r\n                <span className='text-xl font-semibold ml-2 mb-2'>{userData?.username}</span>\r\n            </span>}\r\n            </>\r\n        </div>\r\n        <TopSearch searchQuery={searchQuery} handleChange={handleChange} setSearchQuery={setSearchQuery}/>\r\n        <div className='flex flex-col text-md'>\r\n            {searchData.sort((a, b) => a.email.localeCompare(b.email)).map((person, idx) => (\r\n                <span key={idx} \r\n                    className={'bg-gray-200 rounded hover:bg-gray-400 p-2 mb-2 cursor-pointer'} \r\n                    onClick= {() => history.push(`/${person.username}`)}\r\n                > \r\n                <span className='mx-2 flex cursor-pointer'  onClick= {e => history.push(`/${person.username}`)}>{error}\r\n                {person.imageUrl ? (\r\n                <span className='mr-2'>\r\n                    {error ? <BsPersonFill size={'1.5em'} color='black' />:\r\n                    <img src={person.imageUrl} alt='Profile' style={{width: '1.5em', height: '1.5em', borderRadius: '50%'}} />}\r\n                </span>)\r\n                : <span className='mr-2 text-black'><BsPersonFill size={'1.5em'}/></span>}\r\n                {email === person.email ? 'Me' : person.username}{error}\r\n            </span>\r\n                </span>\r\n            ))}\r\n        </div>\r\n        <div className='flex'>\r\n            <span className='m-auto'><IoIosPeople size={300} /></span>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { IoCloseCircle } from 'react-icons/io5';\r\nimport { BsPersonFill } from 'react-icons/bs';\r\nimport { IoIosArrowBack, IoIosPeople } from 'react-icons/io';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../helper';\r\nimport { LoadSpan } from './Twits';\r\nimport TopSearch from './TopSearch';\r\nimport { AiFillHome } from 'react-icons/ai';\r\n\r\nexport default function Following() {\r\n    const [error, setError] = useState('');\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [ userData, setUserData ] = useState({});\r\n    const [ searchData, setSearchData ] = useState([]);\r\n    const [ peopleData, setPeopleData ] = useState([]);\r\n    const [followLoading, setFollowLoading] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    let { user } = useParams();\r\n    const history = useHistory();\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const token = localStorage.getItem('token');\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        setSearchQuery(value);  \r\n    }\r\n\r\n    const handleSearch = () => {\r\n        const searchResults = peopleData.filter(person => {\r\n            return person.username.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0;\r\n        });\r\n        setSearchData(searchResults);\r\n    }\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        const res = await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                    if(method === 'GET') {\r\n                    setUserData(res.data.data.user);\r\n                    setPeopleData(res.data.data.users);\r\n                    setSearchData(res.data.data.users);\r\n                    localStorage.setItem('users', JSON.stringify(res.data.data.users));\r\n                    setError('');\r\n                } else{\r\n                    setSync(!sync); \r\n                }\r\n            } else {\r\n                setError('Please check your network');\r\n            }\r\n    }\r\n\r\n    const handleFollow = () => {\r\n        setFollowLoading(true);\r\n        setTimeout(() => {\r\n            setFollowLoading(false);\r\n        }, 1000);\r\n            apiCallHook('PATCH', `${baseUrl}/followers/unfollow`, {followerId: userData?.id});\r\n    }\r\n  \r\n    useEffect(() => {\r\n        handleSearch();\r\n        \r\n        return () => {\r\n        }\r\n    }, [searchQuery]);\r\n    \r\n    useEffect(() => {\r\n        const userDataInStore = JSON.parse(localStorage.getItem('users')).filter(obj => obj.username === user)[0];\r\n        const following = userDataInStore.following.filter(user => user.follower.isFollowed);\r\n        setUserData(userDataInStore);\r\n        setSearchData(following);\r\n        setPeopleData(following);\r\n    }, []);\r\n    \r\n    return (\r\n        <div id={`${user}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 h-full rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-6'>\r\n            <span className='cursor-pointer' onClick={() => history.goBack()}><IoIosArrowBack size={30} /></span>\r\n            {/* <span className='cursor-pointer' onClick= {e => history.push(`/${userData?.username}`)}> */}\r\n            {/* {userData?.imageUrl ?\r\n            <span>\r\n                <img src={userData?.imageUrl} alt='Profile' style={{width: '2em', height: '2em', borderRadius: '50%'}} />\r\n            </span>\r\n            : \r\n            <span className=''><BsPersonFill size={25} /></span>} */}\r\n            {/* </span> */}\r\n            <span className='text-xl font-bold'>Following</span>\r\n            <span className='text-left bg-black-400 cursor-pointer hover:invisible' onClick={() => history.push(\"/twits\")}><AiFillHome size={28} /></span>\r\n        </p>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 m-1 rounded'>Please check your network !</div>}\r\n        <div className='-mt-4 mb-1'>\r\n        <>\r\n            {userData?.imageUrl ?\r\n            <span className='flex'>\r\n                    {error ? <BsPersonFill size={'1.7em'} color='black' />:\r\n                <img src={userData?.imageUrl} alt='Profile' style={{width: '2em', height: '2em', borderRadius: '50%'}} />}\r\n                <span className='text-xl font-semibold ml-2 mb-2'>{userData?.username}</span>\r\n            </span>\r\n            : \r\n            <span className='flex'>\r\n                <BsPersonFill size={30} />\r\n                <span className='text-xl font-semibold ml-2 mb-2'>{userData?.username}</span>\r\n            </span>}\r\n            </>\r\n        </div>\r\n        <TopSearch searchQuery={searchQuery} handleChange={handleChange} setSearchQuery={setSearchQuery}/>\r\n        <div className='flex flex-col text-md'>\r\n            {searchData.sort((a, b) => a.email.localeCompare(b.email)).map((person, idx) => (\r\n                <span key={idx} \r\n                    className={'bg-gray-200 rounded hover:bg-gray-400 p-2 mb-2 cursor-pointer'} \r\n                    onClick= {() => history.push(`/${person.username}`)}\r\n                > \r\n                <span className='mx-2 flex cursor-pointer' onClick= {e => history.push(`/${person.username}`)}>\r\n                {person.imageUrl ? (\r\n                <span className='mr-2'>\r\n                    {!error ? <BsPersonFill size={'1.5em'} color='black' />:\r\n                    <img src={person.imageUrl} alt='Profile' style={{width: '1.5em', height: '1.5em', borderRadius: '50%'}} />}\r\n                </span>)\r\n                : <span className='mr-2 text-black'><BsPersonFill size={'1.5em'}/></span>}\r\n                {email === person.email ? 'Me' : person.username}\r\n            </span>\r\n                </span>\r\n            ))}\r\n        </div>\r\n        <div className='flex'>\r\n            <span className='m-auto'><IoIosPeople size={300} /></span>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { BsPersonFill } from 'react-icons/bs';\r\nimport { IoIosArrowBack, IoIosPeople } from 'react-icons/io';\r\nimport axios from 'axios';\r\nimport { baseUrl, frontendUrl } from '../helper';\r\nimport { LoadSpan, Twit } from './Twits';\r\nimport { AiFillHome } from 'react-icons/ai';\r\nimport store from '../redux/store';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function UserTwits() {\r\n    const [error, setError] = useState('');\r\n    const [ userData, setUserData ] = useState({});\r\n    const [ twitData, setTwitData ] = useState([]);\r\n    const [sync, setSync] = useState(false);\r\n    let { user } = useParams();\r\n    const history = useHistory();\r\n\r\n    const {getState, dispatch} = store;\r\n    const state = getState();\r\n    const { twits } = useSelector(state => state);\r\n    \r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const token = localStorage.getItem('token');\r\n    const apiUrl = `${baseUrl}/twits`;\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        const res = await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                    if(method === 'GET') {\r\n                    setUserData(res.data.data.user);\r\n                    setTwitData(res.data.data.users);\r\n                    localStorage.setItem('users', JSON.stringify(res.data.data.users));\r\n                    setError('');\r\n                } else{\r\n                    setSync(!sync); \r\n                }\r\n            } else {\r\n                setError('Please check your network');\r\n            }\r\n    }\r\n\r\n    const getTwits = async() => {\r\n        if(!token) {\r\n            return;\r\n        }\r\n        const res = await axios({\r\n            method: 'GET',\r\n            url: `${apiUrl}`,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    setError(error.response?.data?.error);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                dispatch({\r\n                    type: 'SET_TWIT_DATA',\r\n                    data: res.data.data\r\n                });\r\n                localStorage.setItem('twits', JSON.stringify(res.data.data.map(x => {\r\n                    x.formActive = false;\r\n                    return x;\r\n                })));\r\n                const userTwitData = res.data.data.filter(obj => obj.twits.username === user);\r\n                setUserData(userTwitData[0]?.twits);\r\n                setTwitData(userTwitData);\r\n            } else {\r\n                setError('Please check your network');\r\n                dispatch({\r\n                    type: 'SET_TWIT_DATA',\r\n                    data: JSON.parse(localStorage.getItem('twits'))\r\n                });\r\n            }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        const userTwitData = twits.filter(obj => obj.twits.username === user);\r\n        setUserData(userTwitData[0]?.twits);\r\n        setTwitData(userTwitData);\r\n    }, []);\r\n    \r\n    useEffect(async() => {\r\n        getTwits();\r\n    \r\n        return () => {\r\n        }\r\n    }, [sync]);\r\n\r\n    return (\r\n        <div id={`${user}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 h-full rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-6'>\r\n        <span className='cursor-pointer text-left' onClick={() => history.goBack()}><IoIosArrowBack size={30} /></span>\r\n            <span className='text-xl font-bold self-center'>Twits</span>\r\n            <span className='text-left bg-black-400 cursor-pointer hover:invisible' onClick={() => history.push(\"/twits\")}><AiFillHome size={28} /></span>\r\n        </p>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 m-1 rounded'>Please check your network !</div>}\r\n        <div className='-mt-4 mb-1'>\r\n        <>\r\n            {userData?.imageUrl ?\r\n            <span className='flex'>\r\n                    {error ? <BsPersonFill size={'1.7em'} color='black' />:\r\n                <img src={userData?.imageUrl} alt='Profile' style={{width: '2em', height: '2em', borderRadius: '50%'}} />}\r\n                <span className='text-xl font-semibold ml-2 mb-2'>{userData?.username}</span>\r\n            </span>\r\n            : \r\n            <span className='flex'>\r\n                <BsPersonFill size={30} />\r\n                <span className='text-xl font-semibold ml-2 mb-2'>{userData?.username}</span>\r\n            </span>}\r\n            </>\r\n        </div>\r\n        <div style={{fontFamily: 'Roboto'}} className='text-md'>\r\n        {\r\n                    twitData.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()).map((twit, idx) => \r\n                        <div  key={idx} style={{backgroundColor: 'white', fontWeight: 'bold'}}>\r\n                            <Twit key={idx} twit={twit} email={email} apiCallHook={apiCallHook} baseUrl={baseUrl} frontendUrl={frontendUrl} sync={sync} setSync={setSync} />\r\n                        </div>\r\n                    )\r\n                }\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Posts from \"./components/Posts\";\nimport Twits from './components/Twits';\nimport Profile from './components/Profile';\nimport People from './components/People';\nimport Follower from './components/Followers';\nimport Following from './components/Following';\nimport UserTwits from './components/UserTwits';\nimport store from './redux/store';\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n    const [loggedIn, setLoggedIn] = useState(JSON.parse(localStorage.getItem('loggedIn')));\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')) || false);\n    \n    const {getState, dispatch} = store;\n    const state = getState();\n    const { searchQuery, networkStatus } = useSelector(state => state);\n    // console.log(state);\n\n    useEffect(() => {\n      if(navigator.onLine) {\n        dispatch({\n          type: 'SET_NETWORK_STATUS',\n          data: true\n        });\n      } else {\n        dispatch({\n          type: 'SET_NETWORK_STATUS',\n          data: false\n        });\n      } \n    }, []);\n\n      const username = localStorage.getItem('username');\n      Notification.requestPermission().then((result) => {\n        if (result === 'granted') {\n          // randomNotification();\n        }\n      });\n\n    function randomNotification() {\n      const notifTitle = username ? `Hello, ${username}` : 'Hello !';\n      const notifBody = `Have you checked Twitee today?`;\n      const notifImg = `https://res.cloudinary.com/thevetdoctor/image/upload/v1599332593/g1rozhabxswegvhp59h3.jpg`;\n      const options = {\n        body: notifBody,\n        icon: notifImg,\n      };\n      new Notification(notifTitle, options);\n      setTimeout(randomNotification, 3 * 60 * 60 * 1000);\n    }\n  return (\n    <Router>\n        {/* <div className=\"h-full w-full m-0 max-w-sm mx-auto bg-blue-200 rounded-xl shadow-md flex\"> */}\n        {/* <div className=\"font-Roboto w-full m-0 max-w-xl max-h-xl my-0 mx-auto rounded-xl shadow-md -px-3\"> */}\n              {/* <div className=\"bg-gray-200 rounded-xl p-4\"> */}\n      <Switch>\n              <Route exact path=\"/\" component={Posts} />\n              <Route exact path=\"/twits\" component={Twits} />\n              <Route exact path=\"/people\" component={People} />\n              <Route path=\"/twits/:user\" component={UserTwits} />\n              <Route path=\"/following/:user\" component={Following} />\n              <Route path=\"/follower/:user\" component={Follower} />\n              <Route path=\"/:user\" component={Profile} />\n      </Switch>\n          {/* </div>ff */}\n        {/* </div>  */}\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// import reportWebVitals from './reportWebVitals';\n// import * as serviceWorker from \"./service-worker\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}