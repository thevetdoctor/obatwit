{"version":3,"sources":["components/Posts.js","components/TwitForm.js","components/CommentForm.js","components/Twits.js","App.js","reportWebVitals.js","index.js"],"names":["Posts","props","useState","email","setEmail","password","setPassword","error","setError","loading","setLoading","JSON","parse","localStorage","getItem","signup","setSignup","token","history","useHistory","apiUrl","handleChange","e","target","name","value","authenticate","a","axios","method","url","data","headers","catch","console","log","response","res","success","setItem","push","useEffect","className","style","fontSize","type","placeholder","onChange","flexDirection","color","height","width","cursor","onClick","href","TwitForm","title","setTitle","text","setText","textArea","setTextArea","length","sendTwit","setSync","sync","showForm","rows","cols","maxLength","CommentForm","sendComment","twitId","showCommentForm","required","Twits","twits","setTwits","formActive","setFormActive","baseUrl","apiCallHook","isAxiosError","getTwits","removeItem","size","sort","b","Date","createdAt","getTime","map","twit","idx","Twit","commentFormActive","setCommentFormActive","id","likes","comments","likeCount","filter","like","isLiked","fromNow","username","comment","Comment","usercomments","App","loggedIn","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a702e4b4.chunk.js","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function Posts(props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')));\r\n    const token = localStorage.getItem('token');\r\n\r\n    const history = useHistory();\r\n  \r\n// const baseUrl = 'http://oba-twit.herokuapp.com';\r\nconst baseUrl = 'http://localhost:4000';\r\nconst apiUrl = `${baseUrl}/auth/${signup ? 'signup' : 'login'}`; \r\n\r\nconst handleChange = (e) => {\r\n    if(e.target.name === 'email') {\r\n        setEmail(e.target.value);\r\n    } else {\r\n        setPassword(e.target.value);\r\n    }\r\n}\r\n\r\nconst handleSignupMode = () => {\r\n    console.log(signup);\r\n    if(!signup) {\r\n        setSignup(true);\r\n        localStorage.setItem('signup', true);\r\n    } else {\r\n        setSignup(false);\r\n        localStorage.setItem('signup', false);\r\n    }\r\n}\r\nconst authenticate = async() => {\r\n    setLoading(true);\r\n    const res = await axios({\r\n        method: 'POST',\r\n        url: `${apiUrl}`,\r\n        data: {email, password},\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response);\r\n            setError(error.response.data.error);\r\n        });\r\n        if(res && res.data.success) {\r\n            localStorage.setItem('email', email);\r\n            localStorage.setItem('token', res.data.data.token);\r\n            setLoading(false);\r\n            history.push('/twits');\r\n        } else {\r\n            setLoading(false);\r\n            console.log('Error found');\r\n        }\r\n}\r\n\r\nuseEffect(() => {\r\n    if(!token) {\r\n        history.push('/');\r\n    }\r\n    return () => {\r\n        console.log('cleanup posts');\r\n    }\r\n}, []);\r\n\r\n    return (\r\n        <div className='text-center'>\r\n            <h1 style={{fontSize: 20}} className='font-bold text-md mb-7'>\r\n                {signup ?  'Signup' : 'Login'}\r\n            </h1>\r\n            <input \r\n                type='text'\r\n                name='email'\r\n                value={email} \r\n                placeholder='email'\r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5'\r\n                />\r\n            <input \r\n                type='password'\r\n                name='password'\r\n                value={password} \r\n                placeholder='password' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5'\r\n            /><br/>\r\n            <div style={{flexDirection: 'column'}} className='flex'>\r\n                {error && <span className='mb-2 text-red-600'>{error}</span>}\r\n                <div>\r\n                    {!loading ?\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={authenticate}\r\n                        className='hover:bg-green-900 bg-green-400 font-medium p-2 rounded w-6 h-3 text-white'\r\n                    >    \r\n                        {signup ? 'Signup' : 'Login' }\r\n                    </span>\r\n                    :\r\n                    <span className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n                <span className='text-xs mt-5'>\r\n                {signup ? 'Already signed up ?' : 'Not registered ?' }\r\n                     \r\n                <a \r\n                    href='/' \r\n                    className='focus:text-md underline'\r\n                    onClick={handleSignupMode}\r\n                > \r\n                    {signup ? ' Login here' : ' Signup here!' }\r\n                </a></span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function TwitForm(props) {\r\n    const [title, setTitle] = useState('');\r\n    const [text, setText] = useState('');\r\n    const [textArea, setTextArea] = useState(160);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const token = localStorage.getItem('token'); \r\n\r\n    \r\n    const baseUrl = 'http://localhost:4000';\r\n    const apiUrl = `${baseUrl}/twits/post`; \r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'title') {\r\n            setTitle(e.target.value);\r\n        } else {\r\n            setText(e.target.value);\r\n            setTextArea(160 - e.target.value.length)\r\n        }\r\n    }\r\n\r\n    const sendTwit = async() => {\r\n                setLoading(true);\r\n                const res = await axios({\r\n                    method: 'POST',\r\n                    url: `${apiUrl}`,\r\n                    data: {title, text},\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': `Bearer ${token}`\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                            console.log(error.response);\r\n                            setError(error.response.data.error);\r\n                    });\r\n                    console.log(res);\r\n                    if(res && res.data.success) {\r\n                        setLoading(false);\r\n                        props.setSync(!props.sync);\r\n                        props.showForm();\r\n                    } else {\r\n                        setLoading(false);\r\n                        console.log('Error found'); \r\n                    }\r\n    }\r\n\r\n    return (\r\n        <div className='text-center'>\r\n             <h1 style={{fontSize: 20}} className='font-bold text-md mb-7'>\r\n                New twit\r\n            </h1>\r\n            <input \r\n                type='text'\r\n                name='title'\r\n                value={title} \r\n                placeholder='title'\r\n                onChange={handleChange}\r\n                className='px-3 py-1 rounded mb-5'\r\n                />\r\n            <input \r\n                type='textarea'\r\n                name='text'\r\n                rows={5}\r\n                cols={8}\r\n                maxLength={160}\r\n                value={text} \r\n                placeholder='Drop in your twit ...' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5 h-40 text-md text-gray-600'\r\n            /><br/>\r\n            {textArea}\r\n            <div style={{flexDirection: 'column'}} className='flex mb-5'>\r\n                {error && <span className='mb-2 text-red-800 text-md'>{error}</span>}\r\n                <div className='justify-items-center'>\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={() => props.showForm()}\r\n                        className='hover:bg-gray-900 bg-gray-400 font-medium p-1 rounded text-white'\r\n                    >    \r\n                        Cancel\r\n                    </span>\r\n\r\n                    {!loading ?\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={sendTwit}\r\n                        className='hover:bg-green-900 bg-green-400 font-medium p-2 rounded text-white mx-2'\r\n                    >    \r\n                        Send\r\n                    </span>\r\n                    :\r\n                    <span className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default function CommentForm(props) {\r\n    const [text, setText] = useState('');\r\n    const [textArea, setTextArea] = useState(160);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const token = localStorage.getItem('token'); \r\n\r\n    \r\n    const baseUrl = 'http://localhost:4000';\r\n    const apiUrl = `${baseUrl}/comments`; \r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'text') {\r\n            setText(e.target.value);\r\n            setTextArea(160 - e.target.value.length)\r\n        }\r\n    }\r\n\r\n    const sendComment = async() => {\r\n        if(!props.twitId) return;\r\n        if(!text) {\r\n            setError('Inputs required');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        const res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}/${props.twitId}`,\r\n            data: {text},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .catch(error => {\r\n                    console.log(error.response);\r\n                    setError(error.response.data.error);\r\n            });\r\n            console.log(res);\r\n            if(res && res.data.success) {\r\n                setLoading(false);\r\n                props.setSync(!props.sync);\r\n                props.showCommentForm();\r\n            } else {\r\n                setLoading(false);\r\n                console.log('Error found'); \r\n            }\r\n    }\r\n\r\n    return (\r\n        <div className='text-center'>\r\n             <h1 style={{fontSize: 20}} className='font-bold text-xs mb-3'>\r\n                New Comment\r\n            </h1>\r\n            <input \r\n                type='textarea'\r\n                name='text'\r\n                rows={5}\r\n                cols={8}\r\n                maxLength={160}\r\n                value={text} \r\n                placeholder='Drop in your comment ...' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5 h-20 text-md text-gray-600'\r\n                required\r\n            /><br/>\r\n            {textArea}\r\n            <div style={{flexDirection: 'column'}} className='flex mb-5'>\r\n                {error && <span className='mb-2 text-red-800 text-xs'>{error}</span>}\r\n                <div className='justify-items-center'>\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={() => props.showCommentForm()}\r\n                        className='hover:bg-gray-900 bg-gray-400 font-medium p-1 rounded text-white'\r\n                    >    \r\n                        Cancel\r\n                    </span>\r\n\r\n                    {!loading ?\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={sendComment}\r\n                        className='hover:bg-green-900 bg-green-400 font-medium p-1 rounded text-white mx-2'\r\n                    >    \r\n                        Send\r\n                    </span>\r\n                    :\r\n                    <span className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { BsPersonFill, BsChatTextFill } from 'react-icons/bs';\r\nimport { AiTwotoneLike, AiTwotoneDelete, AiFillHome } from 'react-icons/ai';\r\nimport { FiLogOut } from 'react-icons/fi';\r\nimport { RiChatNewLine } from 'react-icons/ri';\r\nimport TwitForm from './TwitForm';\r\nimport CommentForm from './CommentForm';\r\n\r\nexport default function Twits() {\r\n    const [error, setError] = useState('');\r\n    const [twits, setTwits] = useState([]);\r\n    const [formActive, setFormActive] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const history = useHistory();\r\n    const token = localStorage.getItem('token');\r\n\r\n    // const baseUrl = 'http://oba-twit.herokuapp.com';\r\n    const baseUrl = 'http://localhost:4000';\r\n    const apiUrl = `${baseUrl}/twits`;\r\n\r\n    const showForm = () => {\r\n        setFormActive(!formActive);\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        history.push('/');\r\n    }\r\n\r\n    const apiCallHook = async(method, url) => {\r\n        await axios({\r\n            method,\r\n            url,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.isAxiosError);\r\n                }\r\n            });\r\n            setSync(!sync);\r\n    }\r\n\r\n    const getTwits = async() => {\r\n        const res = await axios({\r\n            method: 'GET',\r\n            url: `${apiUrl}`,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.isAxiosError);\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                setTwits(res.data.data);\r\n            } else {\r\n                console.log('Error found'); \r\n                setError('Error found');\r\n            }\r\n    }\r\n\r\nuseEffect(() => {\r\n    if(!token) {\r\n        history.push('/');\r\n    }\r\n    return () => {\r\n        console.log('cleanup twits 1');\r\n    }\r\n}, []);\r\n\r\nuseEffect(async() => {\r\n    getTwits();\r\n\r\n    return () => {\r\n        console.log('cleanup twits 2');\r\n    }\r\n}, [sync]);\r\n    \r\n    return (\r\n        <div className='mb-5'>\r\n            {formActive && <TwitForm error={error} showForm={showForm} sync={sync} setSync={setSync}/>}\r\n            <p className='py-2 px-2 rounded bg-blue-500 mb-4 flex justify-between'>\r\n                <span className='text-left'><AiFillHome /></span>\r\n                <span style={{cursor: 'pointer'}} className='text-right' onClick={logout}>\r\n                    <FiLogOut />\r\n                </span>\r\n            </p>\r\n            <span style={{cursor: 'pointer'}} className='text-xs my-10' onClick={showForm}><RiChatNewLine size={15} color='teal'/></span>\r\n            <p className='text-center font-bold text-blue-500 mb-4'>Twits</p>\r\n            {\r\n                twits.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()).map((twit, idx) => \r\n                    <Twit key={idx} twit={twit} email={email} apiCallHook={apiCallHook} baseUrl={baseUrl} sync={sync} setSync={setSync} showForm={showForm} formActive={formActive}/>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Twit = (props) => {\r\n    const [commentFormActive, setCommentFormActive] = useState(false);\r\n\r\n    const { twit: {id, title, text, twits, likes, comments, createdAt }, email, apiCallHook, baseUrl, sync, setSync } = props;\r\n\r\n    const likeCount = likes.filter(like => like.isLiked).length;\r\n    const showCommentForm = () => {\r\n        setCommentFormActive(!commentFormActive);\r\n    }\r\n\r\n    const likeTwit = () => {\r\n        console.log('like twit with id: ', id);\r\n        apiCallHook('POST', `${baseUrl}/likes/like/${id}`);\r\n    }\r\n    const commentTwit = () => {\r\n        console.log('comment twit with id: ', id);\r\n        showCommentForm();\r\n    }\r\n    const deleteTwit = () => {\r\n        console.log('delete twit with id: ', id);\r\n        apiCallHook('DELETE', `${baseUrl}/twits/${id}`);\r\n    }\r\n\r\n\r\n    return (\r\n    <div className='bg-blue-100 rounded p-5 mb-2'>\r\n        <p className='font-bold text-center'>{title}</p>\r\n        <span className='text-xs mb-2'>\r\n            <Moment fromNow>{createdAt}</Moment>\r\n        </span>\r\n        <p>{text}</p>\r\n        <p className='text-xs text-gray-800 flex my-2'>\r\n            <span className='mx-2 flex'><BsPersonFill size={15}/> {email === twits.email ? 'Me' : twits.username}</span>\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex' onClick={() => likeTwit()}>\r\n                <AiTwotoneLike color={likeCount > 0 ? 'blue' : 'gray'} size={15}/><span className='text-xs'>{likeCount}</span>\r\n            </span>\r\n            {/* <span className='flex'><FcLike size={15}/></span> */}\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex' onClick={() => commentTwit()}>\r\n                <BsChatTextFill size={15}/>\r\n            </span>\r\n            {email === twits.email &&\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex hover:text-red-800' onClick={() => deleteTwit()}>\r\n                <AiTwotoneDelete size={15}/>\r\n            </span>}\r\n        </p>\r\n        {commentFormActive && <CommentForm twitId={id} showCommentForm={showCommentForm} sync={sync} setSync={setSync}/>}\r\n\r\n        {comments.length > 0 && \r\n                (<div className='mt-2 rounded'>\r\n                    {comments.map((comment, idx) => \r\n                        <Comment key={idx} comment={comment} email={email}/>\r\n                )}\r\n            </div>)\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nconst Comment = (props) => {\r\n    const { comment: { text, usercomments, createdAt }, email } = props;\r\n    return(\r\n        <div className='bg-green-300 mb-2 p-2 rounded'>\r\n            <span className='text-xs mb-2'>\r\n            <Moment fromNow>{createdAt}</Moment>\r\n            </span>\r\n            <p>{text}</p>\r\n            <span className='mx-2 flex items-justify text-xs'>\r\n                <BsPersonFill size={15}/>\r\n                <span className=''>\r\n                    {email === usercomments.email ? 'Me' : usercomments.username}\r\n                </span>\r\n            </span>\r\n        </div>\r\n    )\r\n}","/* eslint-disable no-unused-vars */\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Posts from \"./components/Posts\";\nimport Twits from './components/Twits';\nimport { CgCopyright } from 'react-icons/cg';\n\nfunction App() {\n    const [loggedIn, setLoggedIn] = useState(JSON.parse(localStorage.getItem('loggedIn')));\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')) || false);\n    console.log(loggedIn, localStorage.getItem('signup'));\n    \n  return (\n    <Router>\n        <div className=\"h-full w-full m-7 max-w-sm mx-auto bg-blue-200 rounded-xl shadow-md flex\">\n              <div className=\"bg-white-300 rounded-xl p-4\">\n      <Switch>\n              <Route exact path=\"/\" component={Posts} />\n              <Route exact path=\"/twits\" component={Twits} />\n      </Switch>\n            {/* <Posts /> */}\n            <p className=\"text-white-400 bold flex text-center\"><CgCopyright /> Twitee</p>         \n          </div>\n        </div> \n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}