{"version":3,"sources":["helper.js","components/GoogleAuth.js","components/chat.jpg","components/Posts.js","components/AttachImage.js","components/TwitForm.js","components/CommentForm.js","redux/actions.js","redux/reducer.js","redux/store.js","components/Twits.js","components/Profile.js","components/TopSearch.js","components/People.js","components/Followers.js","components/Following.js","components/UserTwits.js","App.js","serviceWorkerRegistration.js","index.js"],"names":["baseUrl","window","location","host","indexOf","console","log","frontendUrl","dotenv","config","clientId","process","GoogleAuth","props","error","setError","setLoading","loading","useState","JSON","parse","localStorage","getItem","signup","apiUrl","history","useHistory","buttonText","onSuccess","res","authenticate","profileObj","email","name","imageUrl","onFailure","cookeiPolicy","style","marginTop","Logout","render","renderProps","size","onLogoutSuccess","a","google","password","setItem","axios","method","url","data","headers","catch","isAxiosError","response","search","auth","success","user","username","token","push","Posts","setEmail","setPassword","setSignup","handleChange","e","target","value","useEffect","fontFamily","fontWeight","className","fontSize","type","placeholder","onChange","color","height","width","onClick","src","chat","alt","borderRadius","AttachImage","setImageUrl","setUploading","imgUrl","setImgUrl","handleImage","serviceImage","files","FormData","append","fetch","body","json","imgLink","secure_url","accept","TwitForm","title","setTitle","text","setText","textArea","setTextArea","length","sendTwit","removeItem","setSync","sync","showForm","display","flexDirection","alignItems","border","required","rows","cols","maxLength","overflow","cursor","CommentForm","sendComment","twitId","showCommentForm","actions","setTwitData","setUserCount","setPeopleData","setSearchData","setNewsType","setPage","setTotalPages","setSearchQuery","setNetworkStatus","initialState","twits","users","peopleData","searchData","searchQuery","networkStatus","store","createStore","state","action","newsByType","newsData","filter","newsType","news","page","totalPages","Math","ceil","pageSize","newsBySearch","item","toLowerCase","devToolsEnhancer","Twits","formActive","setFormActive","getState","dispatch","useSelector","img","apiCallHook","getTwits","stringify","map","x","getUsers","count","checkOpenForms","twit","setTimeout","id","hash","replace","element","document","getElementById","scrollIntoView","split","backgroundColor","sort","b","Date","createdAt","getTime","idx","Twit","likes","comments","updatedAt","commentFormActive","setCommentFormActive","editLoading","setEditLoading","likeLoading","setLikeLoading","deleteLoading","setDeleteLoading","storyText","setStoryText","editForm","setEditForm","linkCopied","setLinkCopied","editStory","likeCount","like","isLiked","clipboardCopy","navigator","clipboard","writeText","fromNow","comment","isDeleted","Comment","usercomments","likecomments","LoadSpan","Profile","userData","setUserData","isFollower","setIsFollower","isFollowing","setIsFollowing","followerCount","setFollowerCount","followingCount","setFollowingCount","twitCount","setTwitCount","followLoading","setFollowLoading","useParams","userTwits","obj","userDataInStore","followers","follower","isFollowed","following","checkIsFollower","checkIsFollowing","followerId","TopSearch","People","searchResults","person","handleSearch","localeCompare","Follower","Following","UserTwits","userTwitData","App","onLine","randomNotification","notifTitle","Notification","icon","requestPermission","then","result","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","ReactDOM","StrictMode","URL","href","origin","addEventListener","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.47535d85.chunk.js","sourcesContent":["export const baseUrl = (() => {\r\n    if(window.location.host.indexOf('localhost') >= 0){\r\n        console.log('localhost API');\r\n    return 'http://localhost:4000';\r\n    } else {\r\n        console.log('live Url');\r\n    return 'https://oba-twit.herokuapp.com';\r\n    }\r\n})();\r\n\r\nexport const frontendUrl = (() => {\r\n    if(window.location.host.indexOf('localhost') >= 0){\r\n        console.log('localhost frontendUrl');\r\n    return 'http://localhost:3000/twits';\r\n    } else {\r\n        console.log('live frontendUrl');\r\n    return 'https://peaceful-leakey-ce2e49.netlify.app/twits';\r\n    }\r\n})();","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\n// import GoogleButton from 'react-google-button'\r\nimport { authenticate } from './Posts';\r\nimport { baseUrl } from '../helper';\r\nimport dotenv from \"dotenv\";\r\nimport { FiLogOut } from 'react-icons/fi';\r\n\r\ndotenv.config();\r\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\n\r\nexport default function GoogleAuth(props) {\r\n    const { error, setError, loading, setLoading } = props;\r\n    \r\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')));\r\n    const apiUrl = `${baseUrl}/auth/${signup ? 'signup' : 'login'}`; \r\n    const history = useHistory(); \r\n\r\n    const onSuccess = (res) => {\r\n        console.log('login suceeded');\r\n        authenticate(true, res.profileObj.email, null, apiUrl, error, setError, setLoading, history, res.profileObj.name, res.profileObj.imageUrl)\r\n    }\r\n    const onFailure = (res) => {\r\n        console.log('login failed', res);\r\n    }\r\n    return (\r\n        <div>\r\n            <GoogleLogin \r\n                clientId={clientId}\r\n                buttonText={signup ? 'Signup with Google' : 'Login with Google'}\r\n                onSuccess={onSuccess}\r\n                onFailure={onFailure}\r\n                // isSignedIn={true}\r\n                cookeiPolicy={'single_host_origin'}\r\n                style={{marginTop: '160px'}}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Logout = () => {\r\n    \r\n    const onSuccess = (res) => {\r\n        console.log(res, 'Logout suceeded');\r\n    }\r\n    return(\r\n    <div>\r\n              <GoogleLogout \r\n                clientId={clientId}\r\n                render={renderProps => (\r\n                    <span><FiLogOut size={25}/></span>\r\n                )}\r\n                buttonText='Signout' \r\n                onLogoutSuccess={onSuccess}\r\n                style={{marginTop: '160px'}}\r\n            />\r\n    </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/chat.7e8098f6.jpg\";","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport GoogleAuth from './GoogleAuth';\r\nimport { baseUrl } from '../helper';\r\n// import LinkedinAuth from './LinkedinAuth';\r\nimport dotenv from \"dotenv\";\r\nimport chat from './chat.jpg';\r\nimport { CgCopyright } from 'react-icons/cg';\r\n\r\ndotenv.config();\r\nconst clientId = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\n\r\nexport const authenticate = async(google = false, email, password = null, apiUrl, error, setError, setLoading, history, name, imageUrl) => {\r\n    localStorage.setItem('img', imageUrl);\r\n    setLoading(true);\r\n    let res;\r\n    if(!google) {\r\n        if(!(email && password)) {\r\n            if(!email) {\r\n                setError('Email is required');\r\n                setLoading(false);\r\n                return;\r\n            }\r\n            setError('Password required');\r\n            setLoading(false);\r\n            return;\r\n        }\r\n        res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}`,\r\n            data: {email, password},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .catch(error => {\r\n            if(error.isAxiosError) {\r\n                console.log(error.response?.data?.error)\r\n                if(error.response?.data?.error.search('NOTFOUND') >= 0) {\r\n                    setError('Please check your network');\r\n                } else {\r\n                    setError(error.response?.data?.error);\r\n                }\r\n                console.log('Error found');\r\n            }\r\n        });\r\n    } else {\r\n        res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}`,\r\n            data: {email, password: 'passs', auth: 'google', name, imageUrl},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n        .catch(error => {\r\n            setError(error.response.data.error);\r\n        });\r\n\r\n    }\r\n        if(res && res.data.success) {\r\n            localStorage.setItem('email', email);\r\n            localStorage.setItem('img', res.data.data.user.imageUrl);\r\n            localStorage.setItem('username', res.data.data.user?.username);\r\n            localStorage.setItem('token', res.data.data.token);\r\n            setLoading(false);\r\n            history.push('/twits');\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n}\r\n\r\nexport default function Posts(props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')));\r\n    const token = localStorage.getItem('token');\r\n    const history = useHistory();\r\nconst apiUrl = `${baseUrl}/auth/${signup ? 'signup' : 'login'}`; \r\n\r\nconst handleChange = (e) => {\r\n    if(e.target.name === 'email') {\r\n        setEmail(e.target.value);\r\n    } else {\r\n        setPassword(e.target.value);\r\n    }\r\n}\r\n\r\nconst handleSignupMode = () => {\r\n    if(!signup) {\r\n        setSignup(true);\r\n        localStorage.setItem('signup', true);\r\n    } else {\r\n        setSignup(false);\r\n        localStorage.setItem('signup', false);\r\n    }\r\n}\r\n\r\nuseEffect(() => {\r\n    if(token) {\r\n        history.push('/twits');\r\n    }\r\n    return () => {\r\n    }\r\n}, []);\r\n    return (\r\n        <div style={{fontFamily: 'Roboto', fontWeight: '600'}} className='font-Roboto text-center align-items-center'>\r\n             <p style={{fontFamily: 'Architects Daughter', fontWeight: '300'}} className='italic text-center mb-2'>\r\n                <span style={{fontSize: '1.8em'}} className='text-purple-900 font-bold'>Twitee<br/>\r\n                </span> \r\n                <span className='text-md'> Feel free, express yourself & network </span>\r\n            </p>\r\n            <h1 style={{fontSize: 20}} className='font-bold text-md mb-7'>\r\n                {signup ?  'Signup' : 'Login'}\r\n            </h1>\r\n            <input \r\n                type='text'\r\n                name='email'\r\n                value={email} \r\n                placeholder='email'\r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5'\r\n                /><br/>\r\n            <input \r\n                type='password'\r\n                name='password'\r\n                value={password} \r\n                placeholder='password' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5'\r\n            /><br/>\r\n            <div className='flex flex-col mb-3'>\r\n                {error && <span className='mb-2 text-red-600'>{error}</span>}\r\n                <div className='flex justify-center'>\r\n                    {!loading ?\r\n                    <span \r\n                        onClick={() => authenticate(false, email, password, apiUrl, error, setError, setLoading, history)}\r\n                        className='cursor-pointer mb-3 bg-green-500 hover:bg-green-400 py-1 px-6 rounded text-white'\r\n                    >    \r\n                        {signup ? 'Signup' : 'Login' }\r\n                        {/* {' '}{window.innerWidth} */}\r\n                    </span>\r\n                    :\r\n                    <span className=''>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n            </div>\r\n            {!token && <GoogleAuth\r\n                error={error}\r\n                setError={setError}\r\n                loading={loading}\r\n                setLoading={setLoading}\r\n            />}\r\n            {/* <LinkedinAuth /> */} \r\n            <div className='mt-7 mb-6 text-xs'>\r\n                    {signup ? 'Already signed up ?' : 'Not registered ?' }\r\n                    <span className='hover:bg-purple-400 bg-purple-500 ml-2 p-1 rounded text-white font-bold cursor-pointer' onClick={handleSignupMode}> \r\n                        {signup ? ' Switch to Login' : ' Switch to Signup!' }\r\n                    </span>\r\n            </div>\r\n          <img \r\n            src={chat}\r\n            alt='CHat'\r\n            className=''\r\n            style={{borderRadius: '5', width: '100'}}\r\n          />\r\n            <p className=\"text-white-400 bold flex text-center\"><CgCopyright /> Twitee</p>         \r\n        </div>\r\n    )\r\n}\r\n","/* eslint-disable no-unused-vars */\r\nimport React, { useState } from 'react';\r\n// import Loader from \"react-loader-spinner\";\r\nimport { FaCamera } from \"react-icons/fa\";\r\n\r\nexport default function AttachImage({imageUrl, setImageUrl}) {\r\n    \r\n    const [uploading, setUploading] = useState(\"\");\r\n    const [imgUrl, setImgUrl] = useState(\"\");\r\n\r\n    const handleImage = async(e) => {\r\n        console.log(e.target)\r\n        setUploading(\"loading\");\r\n        const serviceImage = e.target.files[0];\r\n        const data = new FormData();\r\n        const url = \"https://api.cloudinary.com/v1_1/thevetdoctor/image/upload\";\r\n        data.append(\"file\", serviceImage);\r\n        data.append(\"upload_preset\", \"zunt8yrw\");\r\n        const res = await fetch(url, {\r\n          method: \"POST\",\r\n          body: data\r\n        });\r\n        const imgLink = await res.json();\r\n        setImgUrl(imgLink.secure_url);\r\n        setImageUrl(imgLink.secure_url);\r\n        // console.log('image uploaded' ,imgLink.secure_url);\r\n        // const images = [imgLink.secure_url, ...serviceImages];\r\n        // setServiceImages(images);\r\n        setUploading(\"done\");\r\n        // console.log(imgUrl);\r\n      }\r\n    return (\r\n        <div className=\"flex p-1 rounded ml-1\">\r\n            {imgUrl ? \r\n                <img \r\n                    src={imgUrl} alt='post' style={{width: '20em', height: '9em'}} className='rounded'\r\n                /> :\r\n                <>\r\n                {/* <span className='ml-3 cursor-pointer flex'><FaCamera size={25}  /> */}\r\n                <label className='ml-2 cursor-pointer flex'><FaCamera size={25} /> <span className='font-semibold ml-2 text-white pr-2'></span>\r\n\r\n                <input \r\n                    type=\"file\"\r\n                    placeholder=\"\"\r\n                    accept=\"image/*;capture\"\r\n                    className=\"hidden\"\r\n                    onChange={e => handleImage(e)}\r\n                    />\r\n                    </label>\r\n                {/* <span className='ml-2'>Add Image</span> */}\r\n                {/* </span> */}\r\n                </>\r\n            //   {uploading === \"loading\" &&\r\n            //   <Loader \r\n            //       type='TailSpin'\r\n            //       color='#000'\r\n            //       height={20} \r\n            //       width={20} \r\n            //   />}\r\n            //   {/* {<FaCheck />} */}\r\n            }</div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport { baseUrl } from '../helper';\r\nimport AttachImage from './AttachImage';\r\n\r\nexport default function TwitForm(props) {\r\n    const [title, setTitle] = useState(localStorage.getItem('twitTitle') ? localStorage.getItem('twitTitle') : '');\r\n    const [text, setText] = useState(localStorage.getItem('twitText') ? localStorage.getItem('twitText') : '');\r\n    const [imageUrl, setImageUrl] = useState(localStorage.getItem('twitImage') ? localStorage.getItem('twitImage') : '');\r\n    const [textArea, setTextArea] = useState(160);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const token = localStorage.getItem('token'); \r\n    \r\n    const apiUrl = `${baseUrl}/twits/post`; \r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'title') {\r\n            setTitle(e.target.value);\r\n            localStorage.setItem('twitTitle', e.target.value)\r\n        } else {\r\n            setText(e.target.value);\r\n            setTextArea(160 - e.target.value.length)\r\n            localStorage.setItem('twitText', e.target.value)\r\n        }\r\n    }\r\n\r\n    const sendTwit = async() => {\r\n            if(!(title && text)) {\r\n                if(!title) {\r\n                    setError('Title is required');\r\n                    return;\r\n                }\r\n                setError('Inputs required');\r\n                return;\r\n            }\r\n            setLoading(true);\r\n            const res = await axios({\r\n                method: 'POST',\r\n                url: `${apiUrl}`,\r\n                data: {title, text, imageUrl},\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                        console.log(error.response);\r\n                        setError(error.response.data.error);\r\n                });\r\n                // console.log(res);\r\n                if(res && res.data.success) {\r\n                    setLoading(false);\r\n                    localStorage.removeItem('twitTitle');\r\n                    localStorage.removeItem('twitText');\r\n                    props.setSync(!props.sync);\r\n                    props.showForm();\r\n                } else {\r\n                    setLoading(false);\r\n                    console.log('Error found'); \r\n                }\r\n    }\r\n\r\n    return (\r\n        <div className='sticky w-full h-full bg-gray-200 p-1 -mb-2'>\r\n            <div className='text-center bg-blue-200 mt-3 pt-3 mb-1 pb-1 rounded'>\r\n            <h1 className='font-semibold text-md mb-3'>\r\n                New twit\r\n            </h1>\r\n            <div style={{display: 'flex', flexDirection: 'column', alignItems: 'center', borderRadius: '20%'}}>\r\n\r\n            <input \r\n                type='text'\r\n                name='title'\r\n                value={title} \r\n                placeholder='title'\r\n                onChange={handleChange}\r\n                className='px-3 py-1 rounded text-lg mb-2 font-bold'\r\n                style={{width: '16em', border: 'none'}}\r\n                required\r\n                />\r\n            <textarea \r\n                type='textarea'\r\n                name='text'\r\n                rows={4}\r\n                cols={3}\r\n                style={{width: '16em', height: `${imageUrl ? '5em' : '13em'}`, border: 'none'}}\r\n                maxLength={160}\r\n                value={text}\r\n                overflow=\"hidden\"\r\n                placeholder='Drop in your twit ...' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-1 text-lg text-black font-bold'\r\n                required\r\n            />\r\n                <span style={{display: 'flex', width: '20em'}} className='justify-between px-3 mt-2 mb-2 ml-4 mr-2'>\r\n                    <AttachImage imageUrl={imageUrl} setImageUrl={setImageUrl} />\r\n                <span className='mr-6'>{textArea}</span>\r\n                </span>\r\n                </div>\r\n            <div style={{flexDirection: 'column'}} className='flex mb-5'>\r\n                {error && <span className='mb-2 text-red-800 text-md'>{error}</span>}\r\n                <div className='justify-items-center mt-2'>\r\n                    {!loading ?\r\n                    <>\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={() => props.showForm()}\r\n                        className='hover:bg-gray-900 bg-gray-400 text-lg font-medium p-1 rounded text-white'\r\n                        >    \r\n                        Cancel\r\n                    </span>\r\n\r\n                    <span \r\n                    style={{cursor: 'pointer'}}\r\n                    onClick={sendTwit}\r\n                    className='hover:bg-green-900 bg-green-400 text-lg font-bold p-1 rounded text-white mx-2'\r\n                    >    \r\n                        Send\r\n                    </span>\r\n                    </>\r\n                    :\r\n                    <span className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner';\r\nimport { baseUrl } from '../helper';\r\n\r\nexport default function CommentForm(props) {\r\n    const [text, setText] = useState('');\r\n    const [textArea, setTextArea] = useState(160);\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const token = localStorage.getItem('token'); \r\n    \r\n    const apiUrl = `${baseUrl}/comments`; \r\n\r\n    const handleChange = (e) => {\r\n        if(e.target.name === 'text') {\r\n            setText(e.target.value);\r\n            setTextArea(160 - e.target.value.length)\r\n        }\r\n    }\r\n\r\n    const sendComment = async() => {\r\n        if(!props.twitId) return;\r\n        if(!text) {\r\n            setError('Inputs required');\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        const res = await axios({\r\n            method: 'POST',\r\n            url: `${apiUrl}/${props.twitId}`,\r\n            data: {text},\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n                }\r\n            })\r\n            .catch(error => {\r\n                    console.log(error.response);\r\n                    setError(error.response.data.error);\r\n            });\r\n            console.log(res);\r\n            if(res && res.data.success) {\r\n                setLoading(false);\r\n                props.setSync(!props.sync);\r\n                props.showCommentForm();\r\n            } else {\r\n                setLoading(false);\r\n                console.log('Error found'); \r\n            }\r\n    }\r\n\r\n    return (\r\n        <div className='text-center pt-4'>\r\n             <p style={{fontSize: 20}} className='font-bold text-xs mb-3'>\r\n                New Comment\r\n            </p>\r\n            <textarea \r\n                type='textarea'\r\n                name='text'\r\n                rows={5}\r\n                cols={8}\r\n                maxLength={160}\r\n                style={{width: '15em', height: '8em'}}\r\n                value={text} \r\n                placeholder='Drop in your comment ...' \r\n                onChange={handleChange}\r\n                className='px-3 rounded mb-5 h-20 text-md text-gray-600'\r\n                required\r\n            /><br/>\r\n            {textArea}\r\n            <div style={{flexDirection: 'column'}} className='flex mb-5'>\r\n                {error && <span className='mb-2 text-red-800 text-xs'>{error}</span>}\r\n                <div className='justify-items-center'>\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={() => props.showCommentForm()}\r\n                        className='hover:bg-gray-900 bg-gray-400 font-medium p-1 rounded text-white'\r\n                    >    \r\n                        Cancel\r\n                    </span>\r\n\r\n                    {!loading ?\r\n                    <span \r\n                        style={{cursor: 'pointer'}}\r\n                        onClick={sendComment}\r\n                        className='hover:bg-green-900 bg-green-400 font-medium p-1 rounded text-white mx-2'\r\n                    >    \r\n                        Send\r\n                    </span>\r\n                    :\r\n                    <span className='m-auto'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color='#00bfff'\r\n                        height={40} \r\n                        width={40} \r\n                        />\r\n                     </span>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","const actions = {\r\n    setTwitData: { type: 'SET_TWIT_DATA'},\r\n    setUserCount: { type: 'SET_USER_COUNT'},\r\n    setPeopleData: { type: 'SET_PEOPLE_DATA'},\r\n    setSearchData: { type: 'SET_SEARCH_DATA'},\r\n    setNewsType: { type: 'SET_NEWS_TYPE'},\r\n    setPage: { type: 'SET_PAGE'},\r\n    setTotalPages: { type: 'SET_TOTAL_PAGES'},\r\n    setSearchQuery: { type: 'SET_SEARCH_QUERY'},\r\n    setNetworkStatus: { type: 'SET_NETWORK_STATUS'}\r\n  }\r\n  \r\n  export default actions;\r\n  ","import actions from \"./actions\";\r\n\r\nexport default function reducer(state= initialState, action) {\r\n    switch(action.type) {\r\n        case actions.setTwitData.type:\r\n            console.log('Setting twits data');\r\n\r\n            return {\r\n              ...state,\r\n              twits: action.data\r\n            }          \r\n        case actions.setPeopleData.type:\r\n            console.log('Setting people data');\r\n\r\n            return {\r\n              ...state,\r\n              peopleData: action.data\r\n            }          \r\n        case actions.setSearchData.type:\r\n            console.log('Setting search data');\r\n\r\n            return {\r\n              ...state,\r\n              searchData: action.data\r\n            }          \r\n        case actions.setUserCount.type:\r\n            console.log('Setting user count');\r\n\r\n            return {\r\n              ...state,\r\n              users: action.data\r\n            }          \r\n        case actions.setNewsType.type:\r\n            console.log('Setting News Type');\r\n            const newsByType = state.newsData.filter(type => (type.type === action.data));\r\n\r\n            return {\r\n              ...state,\r\n              newsType: action.data, news: newsByType, searchQuery: '', page: 1, totalPages: Math.ceil(newsByType.length / state.pageSize)\r\n            }          \r\n            case actions.setPage.type:\r\n                console.log('Setting page');\r\n            return {\r\n                ...state,\r\n                page: action.data\r\n            }                   \r\n            case actions.setTotalPages.type:\r\n            console.log('Setting totalPages');\r\n            return {\r\n                ...state,\r\n                totalPages: action.data\r\n            }                   \r\n            case actions.setSearchQuery.type:\r\n                console.log('Setting Search Query');\r\n                let newsBySearch;\r\n                if(state.newsType === 'Filter By Type') {\r\n                    if(action.data === '') {\r\n                        newsBySearch = state.newsData;\r\n                    } else {\r\n                        newsBySearch = state.newsData.filter(item => {\r\n                            return item?.text?.toLowerCase().indexOf(action.data.toLowerCase()) >= 0;\r\n                        });\r\n                    }\r\n                } else {\r\n                    newsBySearch = state.newsData.filter(item => (item?.text?.toLowerCase().indexOf(action.data.toLowerCase()) >= 0) && (item.type === state.newsType));\r\n                }\r\n                    \r\n                return {\r\n                    ...state,\r\n                    searchQuery: action.data, news: newsBySearch, page: 1, totalPages: Math.ceil(newsBySearch.length / state.pageSize)\r\n                }                   \r\n            case actions.setNetworkStatus.type:\r\n                console.log('Setting Network Status');\r\n                \r\n            return {\r\n                ...state,\r\n                networkStatus: action.data\r\n            }                   \r\n            default:\r\n                return state;\r\n    }\r\n};\r\n \r\nexport const initialState = {\r\n    twits: [],\r\n    users: 0,\r\n    peopleData: [],\r\n    searchData: [],\r\n    searchQuery: '',\r\n    networkStatus: false\r\n};\r\n","import { createStore } from 'redux';\r\nimport { devToolsEnhancer } from 'redux-devtools-extension';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer, devToolsEnhancer());\r\n\r\nexport default store;","/* eslint-disable no-unused-vars */\r\n/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Moment from 'react-moment';\r\nimport { BsPersonFill, BsChatTextFill, BsShareFill } from 'react-icons/bs';\r\nimport { AiTwotoneLike, AiTwotoneDelete, AiFillHome } from 'react-icons/ai';\r\nimport { IoIosPeople } from 'react-icons/io';\r\nimport { GrEdit } from 'react-icons/gr';\r\nimport { RiChatNewLine } from 'react-icons/ri';\r\nimport TwitForm from './TwitForm';\r\nimport CommentForm from './CommentForm';\r\nimport { baseUrl, frontendUrl } from '../helper';\r\nimport { Logout } from './GoogleAuth';\r\nimport Loader from 'react-loader-spinner';\r\nimport store from '../redux/store';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function Twits() {\r\n    const [error, setError] = useState('');\r\n    // const [twits, setTwits] = useState([]);\r\n    const [formActive, setFormActive] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    // const [users, setUsers] = useState(0);\r\n\r\n    const {getState, dispatch} = store;\r\n    const state = getState();\r\n    const { twits, users, searchQuery, networkStatus } = useSelector(state => state);\r\n\r\n    console.log(state);\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const img = localStorage.getItem('img') ? localStorage.getItem('img') : '';\r\n    const history = useHistory();\r\n    const token = localStorage.getItem('token');\r\n\r\n    const apiUrl = `${baseUrl}/twits`;\r\n\r\n    const showForm = () => {\r\n        setFormActive(!formActive);\r\n    }\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        history.push('/');\r\n    }\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.response?.data?.error)\r\n                    setError(error.response?.data?.error);\r\n                    console.log('Error found');\r\n                }\r\n            });\r\n            setSync(!sync);\r\n    }\r\n\r\n    const getTwits = async() => {\r\n        if(!token) {\r\n            console.log('Not loggedin');\r\n            return;\r\n        }\r\n        const res = await axios({\r\n            method: 'GET',\r\n            url: `${apiUrl}`,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.response?.data?.error)\r\n                    setError(error.response?.data?.error);\r\n                    console.log('Error found');\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                // setTwits(res.data.data.map(x => {\r\n                //     x.formActive = false;\r\n                //     return x;\r\n                // }));\r\n                dispatch({\r\n                    type: 'SET_TWIT_DATA',\r\n                    data: res.data.data\r\n                });\r\n                localStorage.setItem('twits', JSON.stringify(res.data.data.map(x => {\r\n                    x.formActive = false;\r\n                    return x;\r\n                })));\r\n            } else {\r\n                console.log('Error found'); \r\n                setError('Error found');\r\n                setError('Please check your network');\r\n                dispatch({\r\n                    type: 'SET_TWIT_DATA',\r\n                    data: JSON.parse(localStorage.getItem('twits'))\r\n                });\r\n            }\r\n    }\r\n\r\n    const getUsers = async() => {\r\n        const res = await axios({\r\n            method: 'GET',\r\n            url: `${baseUrl}/auth/users`,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.response?.data?.error)\r\n                    setError(error.response?.data?.error);\r\n                    console.log('Error found');\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                dispatch({\r\n                    type: 'SET_USER_COUNT',\r\n                    data: res.data.data.count\r\n                });\r\n                localStorage.setItem('userCount', res.data.data.count);\r\n            } else {\r\n                console.log('Error found');\r\n                setError('Error found');\r\n                setError('Please check your network');\r\n                dispatch({\r\n                    type: 'SET_USER_COUNT',\r\n                    data: JSON.parse(localStorage.getItem('userCount'))\r\n                });\r\n            }\r\n    }\r\n\r\n    const checkOpenForms = () => {\r\n        console.log('checking open forms', twits.filter(twit => twit.formActive));\r\n        let closedTwits = twits.map(twit => {\r\n            twit.formActive = false;\r\n            return twit;\r\n        });\r\n        // setTwits(closedTwits);\r\n        console.log('closing open forms', twits.filter(twit => twit.formActive));\r\n    }\r\n\r\nuseEffect(() => {\r\n    if(!token) {\r\n        history.push('/');\r\n    }\r\n    getUsers();\r\n    return () => {\r\n        console.log('cleanup twits 1');\r\n    }\r\n}, []);\r\n\r\nuseEffect(async() => {\r\n    // if(!twits.length) {\r\n    //     console.log('no twits');\r\n    //     getTwits();\r\n    // }\r\n    getTwits();\r\n\r\n    return () => {\r\n        console.log('cleanup twits 2');\r\n    }\r\n}, [sync]);\r\n\r\nuseEffect(() => {\r\n    setTimeout(() => {\r\n        const id = window.location.hash.replace('#', '');\r\n        const element = document.getElementById(id);\r\n        if (element) element.scrollIntoView();\r\n      }, 0);\r\n});\r\n\r\n    return (\r\n        <div style={{fontFamily: 'Roboto', fontWeight: '600', height: '90vh'}} className='mb-5 p-3'>\r\n            <span style={{cursor: 'pointer', borderRadius: '50%'}} className='fixed bottom-16 right-4 bg-green-500 p-4 text-white'><RiChatNewLine size={25} onClick={showForm} /></span>\r\n            {formActive && <TwitForm error={error} showForm={showForm} sync={sync} setSync={setSync}/>}\r\n            \r\n            {!formActive && \r\n            <div>\r\n                <p style={{fontFamily: 'Architects Daughter', fontWeight: '300'}} className='italic text-center mb-2'>\r\n                    <span style={{fontSize: '1.8em'}} className='text-purple-900 font-bold'>Twitee<br/>\r\n                    </span> \r\n                    <span style={{fontSize: '1em'}}> Feel free, express yourself & network </span>\r\n                </p>\r\n                <div className='py-2 px-2 rounded mb-4 flex justify-between'>\r\n                    {img !== 'null' ? (\r\n                        <span className='cursor-pointer'  onClick= {e => history.push(`/${email.split('@')[0]}`)}>\r\n                            <img src={img} alt='Profile' style={{width: '30px', height: '30px', borderRadius: '50%'}} />\r\n                        </span>) \r\n                        : <span className='text-left'><AiFillHome size={25} /></span>}\r\n                    {users > 0 && <span className='text-left flex cursor-pointer'  onClick= {e => history.push('people')}><IoIosPeople size={30}/><span className='pt-1 pl-1'>{users}</span></span>}\r\n                    \r\n                    <span style={{cursor: 'pointer'}} className='text-right' onClick={logout}><Logout />\r\n                    </span>\r\n                </div>\r\n                {error && <div style={{fontFamily: 'Roboto', backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 m-1 rounded'>Please check your network !</div>}\r\n\r\n                <div className=''>\r\n                {\r\n                    twits.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()).map((twit, idx) => \r\n                        <Twit key={idx} twit={twit} email={email} apiCallHook={apiCallHook} baseUrl={baseUrl} frontendUrl={frontendUrl} sync={sync} setSync={setSync} showForm={showForm} formActive={formActive} checkOpenForms={checkOpenForms} />\r\n                    )\r\n                }\r\n                </div>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Twit = (props) => {\r\n    const { twit: {id, title, text, imageUrl, twits, likes, comments, createdAt, updatedAt }, email, apiCallHook, baseUrl, frontendUrl, sync, setSync, checkOpenForms } = props;\r\n    const [commentFormActive, setCommentFormActive] = useState(false);\r\n    const [editLoading, setEditLoading] = useState(false);\r\n    const [likeLoading, setLikeLoading] = useState(false);\r\n    const [deleteLoading, setDeleteLoading] = useState(false);\r\n    const [storyText, setStoryText] = useState(text);\r\n    const [editForm, setEditForm] = useState(false);\r\n    const [linkCopied, setLinkCopied] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const handleStoryChange = (e) => {\r\n        setStoryText(e.target.value);\r\n    }\r\n\r\n    const copyTwitLink = () => {\r\n        clipboardCopy(`${frontendUrl}/#${id}`);\r\n        setTimeout(() => {\r\n            setLinkCopied(false);\r\n        }, 1000);\r\n    }\r\n\r\n    const editStory = () => {\r\n        setEditForm(!editForm);\r\n        setStoryText(text);\r\n    }\r\n   \r\n    const updateStory = () => {\r\n        apiCallHook('PATCH', `${baseUrl}/twits/${id}`, {text: storyText});\r\n        setEditLoading(true);\r\n        setTimeout(() => {\r\n            setEditLoading(false);\r\n            setEditForm(false);\r\n        }, 1000);\r\n    }\r\n    const likeCount = likes.filter(like => like.isLiked).length;\r\n    const showCommentForm = () => {\r\n        setCommentFormActive(!commentFormActive);\r\n        props.twit.formActive = !commentFormActive;\r\n    }\r\n    \r\n    const likeTwit = () => {\r\n        setLikeLoading(true);\r\n        setTimeout(() => {\r\n            setLikeLoading(false);\r\n        }, 1000);\r\n        apiCallHook('POST', `${baseUrl}/likes/like/${id}`);\r\n    }\r\n    const commentTwit = () => {\r\n        checkOpenForms();\r\n        showCommentForm();\r\n    }\r\n    const deleteTwit = () => {\r\n        setDeleteLoading(true);\r\n        setTimeout(() => {\r\n            setDeleteLoading(false);\r\n        }, 1000);\r\n        apiCallHook('DELETE', `${baseUrl}/twits/${id}`);\r\n    }\r\n\r\n    const clipboardCopy = async (text) => {\r\n        if ('clipboard' in navigator) {\r\n            console.log('Link copied');\r\n            setLinkCopied(true);\r\n          return await navigator.clipboard.writeText(text);\r\n        } else {\r\n            console.log('Link copy is not supported');\r\n        }\r\n      }\r\n    return (\r\n    <div id={`${id}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-2'>\r\n            <span></span>\r\n            <span style={{fontFamily: 'Roboto Slab'}} className='text-xl font-bold self-center'>{title}</span>\r\n            <span className={!linkCopied ? 'mr-2 mb-1 invisible text-xs self-end' : 'mr-2 mb-1 text-xs self-end'}>copied</span>\r\n        </p>\r\n        <span className='text-xs mb-5 flex justify-between'>\r\n            <Moment fromNow>{createdAt}</Moment>\r\n        <span className='flex'>\r\n        {(email === twits.email) && !editForm && \r\n            <span className='cursor-pointer mr-3 hover:bg-blue-400 text-black hover:text-white p-2 -mt-2 rounded-full' onClick={() => editStory()}> \r\n                <GrEdit size={20} />\r\n            </span>\r\n        }\r\n            <span className={linkCopied ? 'flex-col hover:bg-blue-400 rounded-full p-2 text-white bg-blue-900 cursor-pointer -mt-2 mr-3' : 'rounded-full hover:bg-blue-400 p-2 cursor-pointer -mt-2 mr-3'} onClick={() => copyTwitLink()}> \r\n                <BsShareFill size={20} />\r\n            </span>\r\n        </span>\r\n        </span>\r\n        {editForm && <div className='mb-5'>\r\n                <textarea \r\n                    className='border-gray-200 border-2 p-2 mb-2 rounded bg-white-300 focus:outline-none'\r\n                    style={{width: '100%'}}\r\n                    cols={3}\r\n                    rows={4}\r\n                    maxLength={160}\r\n                    value={storyText}\r\n                    onChange={handleStoryChange}\r\n                    required={true}\r\n                    /><br />\r\n                {!editLoading ? \r\n                 <>\r\n                    <span \r\n                        className='cursor-pointer bg-gray-500 p-2 m-2 text-white rounded hover:bg-gray-400' onClick={() => editStory()}\r\n                    > \r\n                        Cancel \r\n                    </span>\r\n                    <span \r\n                    className='cursor-pointer bg-green-600 p-2 mb-2 text-white rounded hover:bg-green-400 hover:text-black' onClick={() => updateStory()}\r\n                    > \r\n                        Update Story \r\n                    </span>\r\n                </>\r\n                :\r\n                    <LoadSpan height={20} width={20} color='#00bfff' />}\r\n                </div>}\r\n\r\n        {!editForm && <div className='p-3 font-semibold'>{text}<br />\r\n        {((new Date(updatedAt).getTime() - new Date(createdAt).getTime()) > 0) && <span className='text-xs'>Updated <Moment fromNow>{updatedAt}</Moment></span>}\r\n        </div>}\r\n        <span>\r\n            {imageUrl && <img src={imageUrl} width='100%' alt='imgurl' className='rounded' />}\r\n        </span>\r\n        <div style={{fontSize: '0.8em'}} className='text-xs text-gray-800 flex mt-2'>\r\n            <span className='mx-2 flex cursor-pointer'  onClick= {e => history.push(`/${twits.username}`)}>\r\n                {twits.imageUrl ? (\r\n                <span className='mr-1'>\r\n                    <img src={twits.imageUrl} alt='Profile' style={{width: '20px', height: '20px', borderRadius: '50%'}} />\r\n                </span>)\r\n                : <BsPersonFill size={15}/>}\r\n                {email === twits.email ? 'Me' : twits.username}\r\n            </span>\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex' onClick={() => likeTwit()}>\r\n               {!likeLoading ? \r\n               <>\r\n               <AiTwotoneLike color={likeCount > 0 ? 'blue' : 'gray'} size={15}/>\r\n                <span className='text-xs'>{likeCount}</span>\r\n                </>:\r\n                <LoadSpan height={20} width={20} color='#00bfff' />}\r\n            </span>\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex' onClick={() => commentTwit()}>\r\n                <BsChatTextFill size={15}/>\r\n            </span>\r\n            {email === twits.email &&\r\n            <span style={{cursor: 'pointer'}} className='mx-2 flex hover:text-red-800' onClick={() => deleteTwit()}>\r\n                {!deleteLoading ? \r\n                <AiTwotoneDelete size={15} color='red'/>:\r\n                <LoadSpan height={20} width={20} color='#00bfff' />}\r\n            </span>}\r\n        </div>\r\n        {commentFormActive && <CommentForm twitId={id} showCommentForm={showCommentForm} sync={sync} setSync={setSync}/>}\r\n\r\n        {comments.length > 0 && \r\n                (<div className='mt-2 rounded'>\r\n                    {comments.filter(comment => !comment.isDeleted).map((comment, idx) => (\r\n                        <Comment key={idx} comment={comment} apiCallHook={apiCallHook} email={email} />\r\n                    )\r\n                )}\r\n            </div>)\r\n        }\r\n    </div>\r\n    )\r\n}\r\n\r\nconst Comment = (props) => {\r\n    const { comment: { id, text, usercomments, likecomments, createdAt }, email, apiCallHook } = props;\r\n\r\n    const [likeLoading, setLikeLoading] = useState(false);\r\n    const [deleteLoading, setDeleteLoading] = useState(false);\r\n    const history = useHistory();\r\n\r\n    const likeCount = likecomments?.filter(like => like.isLiked).length;\r\n    const likeComment = () => {\r\n        setLikeLoading(true);\r\n        setTimeout(() => {\r\n            setLikeLoading(false);\r\n        }, 1000);\r\n        apiCallHook('POST', `${baseUrl}/likecomments/like/${id}`);\r\n    }\r\n    const deleteComment = () => {\r\n        setDeleteLoading(true);\r\n        setTimeout(() => {\r\n            setLikeLoading(false);\r\n        }, 1000);\r\n        // console.log('delete twit with id: ', id);\r\n        apiCallHook('DELETE', `${baseUrl}/comments/${id}`);\r\n    }\r\n\r\n    return(\r\n        <div className='bg-blue-200 mb-2 p-2 rounded'>\r\n            <span className='text-xs mb-2'>\r\n            <Moment fromNow>{createdAt}</Moment>\r\n            </span>\r\n            <p className='p-3 font-semibold'>{text}</p>\r\n            <span style={{fontSize: '0.8em'}} className='mx-2 flex items-justify text-xs mt-2'>\r\n                {usercomments.imageUrl ?\r\n                <span className='mr-1 cursor-pointer' onClick= {e => history.push(`/${usercomments.username}`)}>\r\n                    <img src={usercomments.imageUrl} alt='Profile' style={{width: '20px', height: '20px', borderRadius: '50%'}} />\r\n                </span>\r\n                : <BsPersonFill size={15}/>}\r\n                <span className='cursor-pointer' onClick= {e => history.push(`/${usercomments.username}`)}>\r\n                    {email === usercomments.email ? 'Me' : usercomments.username}\r\n                </span>\r\n                <span style={{cursor: 'pointer'}} className='mx-2 flex' onClick={() => likeComment()}>\r\n                {!likeLoading ? \r\n                    <>\r\n                    <AiTwotoneLike color={likeCount > 0 ? 'blue' : 'gray'} size={15}/>\r\n                    <span className='text-xs'>{likeCount}</span>\r\n                    </>:\r\n                    <LoadSpan height={20} width={20} color='white' />}\r\n                </span>\r\n                {email === usercomments.email &&\r\n                <span style={{cursor: 'pointer'}} className='mx-2 flex hover:text-red-800' onClick={() => deleteComment()}>\r\n                {!deleteLoading ? \r\n                    <AiTwotoneDelete size={15} color='red'/>\r\n                    :\r\n                    <LoadSpan height={20} width={20} color='white' />}\r\n                </span>}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const LoadSpan = ({height, width, color}) => (\r\n            <span \r\n            className='m-auto mr-4'>\r\n                        <Loader \r\n                        type='ThreeDots'\r\n                        color={color}\r\n                        height={height} \r\n                        width={width} \r\n                        />\r\n            </span>\r\n            )","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { IoCloseCircle } from 'react-icons/io5';\r\nimport { BsPersonFill } from 'react-icons/bs';\r\nimport { IoIosPeople } from 'react-icons/io';\r\nimport Moment from 'react-moment';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../helper';\r\nimport { LoadSpan } from './Twits';\r\n\r\nexport default function Profile() {\r\n    const [error, setError] = useState('');\r\n    const [ userData, setUserData ] = useState({});\r\n    const [ isFollower, setIsFollower ] = useState(false);\r\n    const [ isFollowing, setIsFollowing ] = useState(false);\r\n    const [ followerCount, setFollowerCount ] = useState(0);\r\n    const [ followingCount, setFollowingCount ] = useState(0);\r\n    const [ twitCount, setTwitCount ] = useState(0);\r\n    const [followLoading, setFollowLoading] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    let { user } = useParams();\r\n    const history = useHistory();\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const token = localStorage.getItem('token');\r\n    \r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        const res = await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.response?.data?.error)\r\n                    setError(error.response?.data?.error);\r\n                    console.log('Error found');\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                    if(method === 'GET') {\r\n                    // setUserData(res.data.data.user);\r\n                    localStorage.setItem('users', JSON.stringify(res.data.data.users));\r\n                    // const followers = res.data.data.user.followers.filter(user => user.follower.isFollowed);\r\n                    // const following = res.data.data.user.following.filter(user => user.follower.isFollowed);\r\n                    // setFollowerz(followers);\r\n                    // setFollowingz(following);\r\n                    // setFollowerCount(followers.length);\r\n                    // setFollowingCount(following.length);\r\n                    // const checkIsFollower = followers.filter(user => user.email === email).length > 0;\r\n                    // const checkIsFollowing = following.filter(user => user.email === email).length > 0;\r\n                    // setIsFollower(checkIsFollower);\r\n                    // setIsFollowing(checkIsFollowing);\r\n                    // console.log(followers, following, checkIsFollower, checkIsFollowing, isFollower, isFollowing);\r\n                    setError('');\r\n                } else{\r\n                    setSync(!sync);\r\n                }\r\n            } else {\r\n                setError('Please check your network');\r\n            }\r\n    }\r\n\r\n    const handleFollow = () => {\r\n        setFollowLoading(true);\r\n        setTimeout(() => {\r\n            setFollowLoading(false);\r\n        }, 1000);\r\n        if(isFollower) {\r\n            apiCallHook('PATCH', `${baseUrl}/followers/unfollow`, {followerId: userData?.id});\r\n        } else {\r\n            apiCallHook('POST', `${baseUrl}/followers/follow`, {followerId: userData?.id});\r\n        }\r\n    }\r\n\r\n        \r\n    useEffect(() => {\r\n        console.log(user);\r\n        const userTwits = JSON.parse(localStorage.getItem('twits')).filter(obj => obj.twits.username === user);\r\n        const userDataInStore = JSON.parse(localStorage.getItem('users')).filter(obj => obj.username === user)[0];\r\n        console.log(userDataInStore);\r\n        const followers = userDataInStore.followers.filter(user => user.follower.isFollowed);\r\n        const following = userDataInStore.following.filter(user => user.follower.isFollowed);\r\n        const checkIsFollower = followers.filter(user => user.email === email).length > 0;\r\n        const checkIsFollowing = following.filter(user => user.email === email).length > 0;\r\n        setUserData(userDataInStore);\r\n        setFollowerCount(followers.length);\r\n        setFollowingCount(following.length);\r\n        setIsFollower(checkIsFollower);\r\n        setIsFollowing(checkIsFollowing);\r\n        setTwitCount(userTwits.length);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        apiCallHook('GET', `${baseUrl}/auth/users`);\r\n        return () => {\r\n            console.log('cleanup profile page');\r\n        }\r\n    }, [sync]);\r\n\r\n\r\n    return (\r\n        <div id={`${user}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 bg-gray-200 h-full rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-2'>\r\n            {userData?.imageUrl ?\r\n            <span>\r\n                <img src={userData?.imageUrl} alt='Profile' style={{width: '3em', height: '3em', borderRadius: '50%'}} />\r\n            </span>\r\n            : \r\n            <span className='text-left'><BsPersonFill size={25} /></span>}\r\n            <span style={{fontFamily: 'Roboto Slab'}} className='text-xl font-bold self-center'>{userData?.username}</span>\r\n            {<span className='text-left flex cursor-pointer' onClick= {e => history.push('people')}><IoIosPeople size={30}/></span>}\r\n            <span className='text-left bg-black-400 cursor-pointer hover:invisible' onClick={() => history.push(\"/twits\")}><IoCloseCircle size={35} /></span>\r\n        </p>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 mb-5 rounded'>{error}</div>}\r\n        <span className='text-sm mt-3 mb-1 flex justify-between'>\r\n            <span>\r\n                <span className='ml-2'>Member since : <Moment fromNow>{userData?.createdAt}</Moment></span><br />\r\n                {isFollowing && <span className='text-xs text-white bg-gray-500 rounded p-1 ml-2 mb-3'> \r\n                    Follows you\r\n                </span>}\r\n            </span>\r\n            <span className='flex'>\r\n            {(email !== userData?.email) && \r\n                <>\r\n                {!followLoading ? \r\n                    <span className='flex flex-col'>\r\n                        <span className={'text-white bg-blue-900 rounded hover:bg-blue-400 p-2 cursor-pointer -mt-2 mr-1'} onClick={() => handleFollow()}> \r\n                        {!isFollower ? 'Follow' : 'Following'}\r\n                        </span>\r\n                        <span className={'invisible -mt-2 mr-1'}></span>\r\n                    </span>\r\n                    :\r\n                    <LoadSpan height={20} width={20} color='' />}\r\n                </>\r\n            }\r\n            </span>\r\n        </span>\r\n        <div className='flex justify-between text-sm mt-5'>\r\n            <span>\r\n                {followerCount > 0 && <span className={'text-white bg-blue-500 rounded hover:bg-blue-400 p-2 cursor-pointer mr-3'}  onClick= {e => history.push(`/follower/${user}`)}> \r\n                        {followerCount} {followerCount  > 1 ? 'followers' : 'follower'}\r\n                </span>}\r\n                {followingCount > 0 && <span className={' text-white bg-green-500 rounded hover:bg-green-400 p-2 cursor-pointer mr-3'}  onClick= {e => history.push(`/following/${user}`)}> \r\n                        {followingCount} following\r\n                </span>}\r\n                {twitCount > 0 && <span className={' text-white bg-yellow-500 rounded hover:bg-yellow-400 p-2 cursor-pointer mr-3'}  onClick= {e => history.push(`/twits/${user}`)}> \r\n                        {twitCount} {twitCount  > 1 ? 'posts' : 'post'}\r\n                </span>}\r\n            </span>\r\n           \r\n        </div>\r\n        <span>\r\n            {userData?.imageUrl ? \r\n            <img src={userData?.imageUrl} width='100%' alt='imgurl' className='mt-3 rounded-lg' />\r\n            :\r\n            <div className='flex'>\r\n                <span className='m-auto'><BsPersonFill size={300} /></span>\r\n            </div>}\r\n        </span>\r\n        \r\n        \r\n    </div>\r\n    )\r\n}\r\n","import React from 'react';\r\n// import { FaSearch } from \"react-icons/fa\";\r\n\r\nexport default function TopSearch({searchQuery, setSearchQuery, handleChange}) {\r\n\r\n    return (\r\n        <div className=\"flex mb-2 rounded\">\r\n            <div className='flex-grow'>\r\n                <input \r\n                    type='text'\r\n                    name='top-search'\r\n                    value={searchQuery}\r\n                    placeholder='Search friends'\r\n                    required\r\n                    onChange={handleChange}\r\n                    className='p-2 text-dark-3 text-md rounded font-semibold text-center bg-white-200 w-full outline-none'\r\n                />\r\n            </div>\r\n            {searchQuery && <div className='flex text-white font-bold bg-blue-900 hover:bg-blue-500 cursor-pointer px-3 rounded items-center' onClick={() => setSearchQuery('')}>\r\n                {/* <FaSearch\r\n                    className='w-6 h-6 text-white' \r\n                /> */}\r\n                Clear\r\n            </div>}\r\n        </div>\r\n    );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { IoCloseCircle } from 'react-icons/io5';\r\nimport { BsPersonFill } from 'react-icons/bs';\r\nimport { IoIosPeople } from 'react-icons/io';\r\nimport Moment from 'react-moment';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../helper';\r\nimport { LoadSpan } from './Twits';\r\nimport TopSearch from './TopSearch';\r\nimport store from '../redux/store';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport default function People() {\r\n    const [error, setError] = useState('');\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [ userData, setUserData ] = useState({});\r\n    // const [ searchData, setSearchData ] = useState([]);\r\n    // const [ peopleData, setPeopleData ] = useState([]);\r\n    const [ isFollower, setIsFollower ] = useState(false);\r\n    const [ isFollowing, setIsFollowing ] = useState(false);\r\n    const [ followerCount, setFollowerCount ] = useState(0);\r\n    const [ followingCount, setFollowingCount ] = useState(0);\r\n    const [followLoading, setFollowLoading] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    let { user } = useParams();\r\n    const history = useHistory();\r\n\r\n    const {getState, dispatch} = store;\r\n    const state = getState();\r\n    const { twits, users, peopleData, searchData, networkStatus } = useSelector(state => state);\r\n\r\n    console.log(state);\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const token = localStorage.getItem('token');\r\n\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        setSearchQuery(value);\r\n      \r\n    }\r\n\r\n    const handleSearch = () => {\r\n        const searchResults = peopleData.filter(person => {\r\n            return person.username.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0;\r\n        });\r\n        dispatch({\r\n            type: 'SET_SEARCH_DATA',\r\n            data: searchResults\r\n        });\r\n        localStorage.setItem('searchData', JSON.stringify(searchResults));\r\n    }\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        const res = await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log(error.response?.data?.error)\r\n                    setError(error.response?.data?.error);\r\n                    console.log('Error found');\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                    if(method === 'GET') {\r\n                    setUserData(res.data.data.user);\r\n                    dispatch({\r\n                        type: 'SET_PEOPLE_DATA',\r\n                        data: res.data.data.users\r\n                    });\r\n                    localStorage.setItem('peopleData', JSON.stringify(res.data.data.users));\r\n                    dispatch({\r\n                        type: 'SET_SEARCH_DATA',\r\n                        data: res.data.data.users\r\n                    });\r\n                    localStorage.setItem('searchData', JSON.stringify(res.data.data.users));\r\n                    localStorage.setItem('users', JSON.stringify(res.data.data.users));\r\n                    setError('');\r\n                } else{\r\n                    setSync(!sync); \r\n                }\r\n            } else {\r\n                setError('Please check your network');\r\n                dispatch({\r\n                    type: 'SET_PEOPLE_DATA',\r\n                    data: JSON.parse(localStorage.getItem('peopleData'))\r\n                });            \r\n                dispatch({\r\n                    type: 'SET_SEARCH_DATA',\r\n                    data: JSON.parse(localStorage.getItem('searchData'))\r\n                });            \r\n            }\r\n    }\r\n\r\n    const handleFollow = () => {\r\n        setFollowLoading(true);\r\n        setTimeout(() => {\r\n            setFollowLoading(false);\r\n        }, 1000);\r\n        if(isFollower) {\r\n            apiCallHook('PATCH', `${baseUrl}/followers/unfollow`, {followerId: userData?.id});\r\n        } else {\r\n            apiCallHook('POST', `${baseUrl}/followers/follow`, {followerId: userData?.id});\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        apiCallHook('GET', `${baseUrl}/auth/users`);\r\n        dispatch({\r\n            type: 'SET_SEARCH_DATA',\r\n            data: JSON.parse(localStorage.getItem('peopleData'))\r\n        });\r\n\r\n        return () => {\r\n            console.log('cleanup people page1');\r\n        }\r\n    }, [sync]);\r\n  \r\n    useEffect(() => {\r\n        handleSearch();\r\n        \r\n        return () => {\r\n            console.log('cleanup people page2');\r\n        }\r\n    }, [searchQuery]);\r\n    return (\r\n        <div id={`${user}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 bg-gray-200 h-full rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-2'>\r\n            <span className='text-left'><IoIosPeople size={25} /></span>\r\n            <span style={{fontFamily: 'Roboto Slab'}} className='text-xl font-bold self-center'>People</span>\r\n            <span className='text-left bg-black-400 cursor-pointer hover:invisible' onClick={() => history.push(\"/twits\")}><IoCloseCircle size={35} /></span>\r\n        </p>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 m-1 rounded'>Please check your network !</div>}\r\n        <span className='text-sm mt-3 mb-5'>\r\n        </span>\r\n        <TopSearch searchQuery={searchQuery} handleChange={handleChange} setSearchQuery={setSearchQuery}/>\r\n        <div className='flex flex-col text-md'>\r\n            {searchData.sort((a, b) => a.email.localeCompare(b.email)).map((person, idx) => (\r\n                <span key={idx} \r\n                    className={'text-white bg-blue-400 rounded hover:bg-blue-400 p-2 mb-2 cursor-pointer'} \r\n                    onClick= {() => history.push(`/${person.username}`)}\r\n                > \r\n                <span className='mx-2 flex cursor-pointer'  onClick= {e => history.push(`/${person.username}`)}>\r\n                {person.imageUrl ? (\r\n                <span className='mr-2'>\r\n                    <img src={person.imageUrl} alt='Profile' style={{width: '1.5em', height: '1.5em', borderRadius: '50%'}} />\r\n                </span>)\r\n                : <span className='mr-2 text-black'><BsPersonFill size={'1.5em'}/></span>}\r\n                {email === person.email ? 'Me' : person.username}\r\n            </span>\r\n                </span>\r\n            ))}\r\n        </div>\r\n        <div className='flex'>\r\n            <span className='m-auto'><IoIosPeople size={300} /></span>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { IoCloseCircle } from 'react-icons/io5';\r\nimport { BsPersonFill } from 'react-icons/bs';\r\nimport { IoIosPeople } from 'react-icons/io';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../helper';\r\nimport { LoadSpan } from './Twits';\r\nimport TopSearch from './TopSearch';\r\n\r\nexport default function Follower() {\r\n    const [error, setError] = useState('');\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [ userData, setUserData ] = useState({});\r\n    const [ searchData, setSearchData ] = useState([]);\r\n    const [ peopleData, setPeopleData ] = useState([]);\r\n    const [followLoading, setFollowLoading] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    let { user } = useParams();\r\n    const history = useHistory();\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const token = localStorage.getItem('token');\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        setSearchQuery(value);  \r\n    }\r\n\r\n    const handleSearch = () => {\r\n        const searchResults = peopleData.filter(person => {\r\n            return person.username.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0;\r\n        });\r\n        setSearchData(searchResults);\r\n    }\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        const res = await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log('Error found');\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                    if(method === 'GET') {\r\n                    setUserData(res.data.data.user);\r\n                    setPeopleData(res.data.data.users);\r\n                    setSearchData(res.data.data.users);\r\n                    localStorage.setItem('users', JSON.stringify(res.data.data.users));\r\n                    setError('');\r\n                } else{\r\n                    setSync(!sync); \r\n                }\r\n            } else {\r\n                setError('Please check your network');\r\n            }\r\n    }\r\n\r\n    const handleFollow = () => {\r\n        setFollowLoading(true);\r\n        setTimeout(() => {\r\n            setFollowLoading(false);\r\n        }, 1000);\r\n            apiCallHook('PATCH', `${baseUrl}/followers/unfollow`, {followerId: userData?.id});\r\n    }\r\n  \r\n    useEffect(() => {\r\n        handleSearch();\r\n        \r\n        return () => {\r\n            console.log('cleanup people page2');\r\n        }\r\n    }, [searchQuery]);\r\n    \r\n    useEffect(() => {\r\n        const userDataInStore = JSON.parse(localStorage.getItem('users')).filter(obj => obj.username === user)[0];\r\n        const followers = userDataInStore.followers.filter(user => user.follower.isFollowed);\r\n        setUserData(userDataInStore);\r\n        setSearchData(followers);\r\n        setPeopleData(followers);\r\n        // console.log(user, userDataInStore, followers);\r\n    }, []);\r\n    \r\n    return (\r\n        <div id={`${user}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 bg-gray-200 h-full rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-2'>\r\n            <span className='cursor-pointer' onClick= {e => history.push(`/${userData?.username}`)}>\r\n            {userData?.imageUrl ?\r\n            <span>\r\n                <img src={userData?.imageUrl} alt='Profile' style={{width: '3em', height: '3em', borderRadius: '50%'}} />\r\n            </span>\r\n            : \r\n            <span className='text-left'><BsPersonFill size={25} /></span>}\r\n            </span>\r\n            <span style={{fontFamily: 'Roboto Slab'}} className='text-xl font-bold self-center'>Followers</span>\r\n            <span className='text-left bg-black-400 cursor-pointer hover:invisible' onClick={() => history.push(\"/twits\")}><IoCloseCircle size={35} /></span>\r\n        </p>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 m-1 rounded'>Please check your network !</div>}\r\n        <span className='text-sm mt-3 mb-5'>\r\n        </span>\r\n        <TopSearch searchQuery={searchQuery} handleChange={handleChange} setSearchQuery={setSearchQuery}/>\r\n        <div className='flex flex-col text-md'>\r\n            {searchData.sort((a, b) => a.email.localeCompare(b.email)).map((person, idx) => (\r\n                <span key={idx} \r\n                    className={'text-white bg-blue-400 rounded hover:bg-blue-400 p-2 mb-2 cursor-pointer'} \r\n                    onClick= {() => history.push(`/${person.username}`)}\r\n                > \r\n                <span className='mx-2 flex cursor-pointer'  onClick= {e => history.push(`/${person.username}`)}>\r\n                {person.imageUrl ? (\r\n                <span className='mr-2'>\r\n                    <img src={person.imageUrl} alt='Profile' style={{width: '1.5em', height: '1.5em', borderRadius: '50%'}} />\r\n                </span>)\r\n                : <span className='mr-2 text-black'><BsPersonFill size={'1.5em'}/></span>}\r\n                {email === person.email ? 'Me' : person.username}\r\n            </span>\r\n                </span>\r\n            ))}\r\n        </div>\r\n        <div className='flex'>\r\n            <span className='m-auto'><IoIosPeople size={300} /></span>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { IoCloseCircle } from 'react-icons/io5';\r\nimport { BsPersonFill } from 'react-icons/bs';\r\nimport { IoIosPeople } from 'react-icons/io';\r\nimport axios from 'axios';\r\nimport { baseUrl } from '../helper';\r\nimport { LoadSpan } from './Twits';\r\nimport TopSearch from './TopSearch';\r\n\r\nexport default function Following() {\r\n    const [error, setError] = useState('');\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [ userData, setUserData ] = useState({});\r\n    const [ searchData, setSearchData ] = useState([]);\r\n    const [ peopleData, setPeopleData ] = useState([]);\r\n    const [followLoading, setFollowLoading] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    let { user } = useParams();\r\n    const history = useHistory();\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const token = localStorage.getItem('token');\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        setSearchQuery(value);  \r\n    }\r\n\r\n    const handleSearch = () => {\r\n        const searchResults = peopleData.filter(person => {\r\n            return person.username.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0;\r\n        });\r\n        setSearchData(searchResults);\r\n    }\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        const res = await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log('Error found');\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                    if(method === 'GET') {\r\n                    setUserData(res.data.data.user);\r\n                    setPeopleData(res.data.data.users);\r\n                    setSearchData(res.data.data.users);\r\n                    localStorage.setItem('users', JSON.stringify(res.data.data.users));\r\n                    setError('');\r\n                } else{\r\n                    setSync(!sync); \r\n                }\r\n            } else {\r\n                setError('Please check your network');\r\n            }\r\n    }\r\n\r\n    const handleFollow = () => {\r\n        setFollowLoading(true);\r\n        setTimeout(() => {\r\n            setFollowLoading(false);\r\n        }, 1000);\r\n            apiCallHook('PATCH', `${baseUrl}/followers/unfollow`, {followerId: userData?.id});\r\n    }\r\n  \r\n    useEffect(() => {\r\n        handleSearch();\r\n        \r\n        return () => {\r\n            console.log('cleanup people page2');\r\n        }\r\n    }, [searchQuery]);\r\n    \r\n    useEffect(() => {\r\n        const userDataInStore = JSON.parse(localStorage.getItem('users')).filter(obj => obj.username === user)[0];\r\n        const following = userDataInStore.following.filter(user => user.follower.isFollowed);\r\n        setUserData(userDataInStore);\r\n        setSearchData(following);\r\n        setPeopleData(following);\r\n        // console.log(user, userDataInStore, followers);\r\n    }, []);\r\n    \r\n    return (\r\n        <div id={`${user}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 bg-gray-200 h-full rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-2'>\r\n            <span className='cursor-pointer' onClick= {e => history.push(`/${userData?.username}`)}>\r\n            {userData?.imageUrl ?\r\n            <span>\r\n                <img src={userData?.imageUrl} alt='Profile' style={{width: '3em', height: '3em', borderRadius: '50%'}} />\r\n            </span>\r\n            : \r\n            <span className='text-left'><BsPersonFill size={25} /></span>}\r\n            </span>\r\n            <span style={{fontFamily: 'Roboto Slab'}} className='text-xl font-bold self-center'>People you follow</span>\r\n            <span className='text-left bg-black-400 cursor-pointer hover:invisible' onClick={() => history.push(\"/twits\")}><IoCloseCircle size={35} /></span>\r\n        </p>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 m-1 rounded'>Please check your network !</div>}\r\n        <span className='text-sm mt-3 mb-5'>\r\n        </span>\r\n        <TopSearch searchQuery={searchQuery} handleChange={handleChange} setSearchQuery={setSearchQuery}/>\r\n        <div className='flex flex-col text-md'>\r\n            {searchData.sort((a, b) => a.email.localeCompare(b.email)).map((person, idx) => (\r\n                <span key={idx} \r\n                    className={'text-white bg-blue-400 rounded hover:bg-blue-400 p-2 mb-2 cursor-pointer'} \r\n                    onClick= {() => history.push(`/${person.username}`)}\r\n                > \r\n                <span className='mx-2 flex cursor-pointer' onClick= {e => history.push(`/${person.username}`)}>\r\n                {person.imageUrl ? (\r\n                <span className='mr-2'>\r\n                    <img src={person.imageUrl} alt='Profile' style={{width: '1.5em', height: '1.5em', borderRadius: '50%'}} />\r\n                </span>)\r\n                : <span className='mr-2 text-black'><BsPersonFill size={'1.5em'}/></span>}\r\n                {email === person.email ? 'Me' : person.username}\r\n            </span>\r\n                </span>\r\n            ))}\r\n        </div>\r\n        <div className='flex'>\r\n            <span className='m-auto'><IoIosPeople size={300} /></span>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { IoCloseCircle } from 'react-icons/io5';\r\nimport { BsPersonFill } from 'react-icons/bs';\r\nimport { IoIosPeople } from 'react-icons/io';\r\nimport axios from 'axios';\r\nimport { baseUrl, frontendUrl } from '../helper';\r\nimport { LoadSpan, Twit } from './Twits';\r\nimport TopSearch from './TopSearch';\r\n\r\nexport default function UserTwits() {\r\n    const [error, setError] = useState('');\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [ userData, setUserData ] = useState({});\r\n    const [ searchData, setSearchData ] = useState([]);\r\n    const [ peopleData, setPeopleData ] = useState([]);\r\n    const [followLoading, setFollowLoading] = useState(false);\r\n    const [sync, setSync] = useState(false);\r\n    let { user } = useParams();\r\n    const history = useHistory();\r\n\r\n    const email = localStorage.getItem('email') ? localStorage.getItem('email') : '';\r\n    const token = localStorage.getItem('token');\r\n\r\n\r\n    const handleChange = (e) => {\r\n        const target = e.target;\r\n        const value = target.value;\r\n        setSearchQuery(value);  \r\n    }\r\n\r\n    const handleSearch = () => {\r\n        const searchResults = peopleData.filter(person => {\r\n            return person.username.toLowerCase().indexOf(searchQuery.toLowerCase()) >= 0;\r\n        });\r\n        setSearchData(searchResults);\r\n    }\r\n\r\n    const apiCallHook = async(method, url, data) => {\r\n        const res = await axios({\r\n            method,\r\n            url,\r\n            data,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n            })\r\n            .catch(error => {\r\n                if(error.isAxiosError) {\r\n                    console.log('Error found');\r\n                }\r\n            });\r\n            if(res && res.data.success) {\r\n                    if(method === 'GET') {\r\n                    setUserData(res.data.data.user);\r\n                    setPeopleData(res.data.data.users);\r\n                    setSearchData(res.data.data.users);\r\n                    localStorage.setItem('users', JSON.stringify(res.data.data.users));\r\n                    setError('');\r\n                } else{\r\n                    setSync(!sync); \r\n                }\r\n            } else {\r\n                setError('Please check your network');\r\n            }\r\n    }\r\n\r\n    const handleFollow = () => {\r\n        setFollowLoading(true);\r\n        setTimeout(() => {\r\n            setFollowLoading(false);\r\n        }, 1000);\r\n            apiCallHook('PATCH', `${baseUrl}/followers/unfollow`, {followerId: userData?.id});\r\n    }\r\n  \r\n    // useEffect(() => {\r\n    //     handleSearch();\r\n        \r\n    //     return () => {\r\n    //         console.log('cleanup people page2');\r\n    //     }\r\n    // }, [searchQuery]);\r\n    \r\n    useEffect(() => {\r\n        const userTwitData = JSON.parse(localStorage.getItem('twits')).filter(obj => obj.twits.username === user);\r\n        // const following = userDataInStore.following.filter(user => user.follower.isFollowed);\r\n        setUserData(userTwitData[0].twits);\r\n        setSearchData(userTwitData);\r\n        setPeopleData(userTwitData);\r\n        console.log(user, userTwitData);\r\n    }, []);\r\n    \r\n    return (\r\n        <div id={`${user}`} style={{fontSize: '1.1em'}} className='shadow-lg border border-gray-200 bg-gray-200 h-full rounded p-5 mb-4'>\r\n        <p className='flex justify-between mb-2'>\r\n            <span className='cursor-pointer' onClick= {e => history.push(`/${userData?.username}`)}>\r\n            {userData?.imageUrl ?\r\n            <span>\r\n                <img src={userData?.imageUrl} alt='Profile' style={{width: '2.5em', height: '2.5em', borderRadius: '50%'}} />\r\n            </span>\r\n            : \r\n            <span className='text-left cursor-pointer'><BsPersonFill size={25} /></span>}\r\n            </span>\r\n            <span style={{fontFamily: 'Roboto Slab'}} className='text-xl font-bold self-center'>User's Twits</span>\r\n            <span className='text-left bg-black-400 cursor-pointer hover:invisible' onClick={() => history.push(\"/twits\")}><IoCloseCircle size={35} /></span>\r\n        </p>\r\n        {error && <div style={{backgroundColor: 'white', fontWeight: 'bold'}} className='text-red-500 text-center py-2 m-1 rounded'>Please check your network !</div>}\r\n        <span className='text-sm mt-3 mb-5'>\r\n        </span>\r\n        {/* <TopSearch searchQuery={searchQuery} handleChange={handleChange} setSearchQuery={setSearchQuery}/> */}\r\n        <div className='flex flex-col text-md'>\r\n        {\r\n                    searchData.sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime()).map((twit, idx) => \r\n                        <Twit key={idx} twit={twit} email={email} apiCallHook={apiCallHook} baseUrl={baseUrl} frontendUrl={frontendUrl} sync={sync} setSync={setSync} />\r\n                    )\r\n                }\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Posts from \"./components/Posts\";\nimport Twits from './components/Twits';\nimport Profile from './components/Profile';\nimport People from './components/People';\nimport Follower from './components/Followers';\nimport Following from './components/Following';\nimport UserTwits from './components/UserTwits';\nimport store from './redux/store';\nimport { useSelector } from 'react-redux';\n\nfunction App() {\n    const [loggedIn, setLoggedIn] = useState(JSON.parse(localStorage.getItem('loggedIn')));\n    const [signup, setSignup] = useState(JSON.parse(localStorage.getItem('signup')) || false);\n    \n    const {getState, dispatch} = store;\n    const state = getState();\n    const { searchQuery, networkStatus } = useSelector(state => state);\n    console.log(state);\n\n    useEffect(() => {\n      if(navigator.onLine) {\n        console.log('online');\n        dispatch({\n          type: 'SET_NETWORK_STATUS',\n          data: true\n        });\n      } else {\n        console.log('offline');\n        dispatch({\n          type: 'SET_NETWORK_STATUS',\n          data: false\n        });\n      } \n    }, []);\n\n      const username = localStorage.getItem('username');\n      // console.log(username)\n      Notification.requestPermission().then((result) => {\n        if (result === 'granted') {\n          randomNotification();\n        }\n      });\n\n    function randomNotification() {\n      const notifTitle = username ? `Hello, ${username}` : 'Hello !';\n      const notifBody = `Have you checked Twitee today?`;\n      const notifImg = `https://res.cloudinary.com/thevetdoctor/image/upload/v1599332593/g1rozhabxswegvhp59h3.jpg`;\n      const options = {\n        body: notifBody,\n        icon: notifImg,\n      };\n      new Notification(notifTitle, options);\n      setTimeout(randomNotification, 3 * 60 * 60 * 1000);\n    }\n  return (\n    <Router>\n        {/* <div className=\"h-full w-full m-0 max-w-sm mx-auto bg-blue-200 rounded-xl shadow-md flex\"> */}\n        {/* <div className=\"font-Roboto w-full m-0 max-w-xl max-h-xl my-0 mx-auto rounded-xl shadow-md -px-3\"> */}\n              {/* <div className=\"bg-gray-200 rounded-xl p-4\"> */}\n      <Switch>\n              <Route exact path=\"/\" component={Posts} />\n              <Route exact path=\"/twits\" component={Twits} />\n              <Route exact path=\"/people\" component={People} />\n              <Route path=\"/twits/:user\" component={UserTwits} />\n              <Route path=\"/following/:user\" component={Following} />\n              <Route path=\"/follower/:user\" component={Follower} />\n              <Route path=\"/:user\" component={Profile} />\n      </Switch>\n          {/* </div>ff */}\n        {/* </div>  */}\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n// import reportWebVitals from './reportWebVitals';\n// import * as serviceWorker from \"./service-worker\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}